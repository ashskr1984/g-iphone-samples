bplist00“_WebMainResource_WebSubresources’	
^WebResourceURL_WebResourceMIMEType_WebResourceData_WebResourceTextEncodingName_WebResourceFrameName_^https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/wo/17.0.0.5.5.7.1.9.1.1.1.0.1.5.9Ytext/htmlO m<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html><head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8">
    <title>iTunes Connect</title>
    <link href="/images/labelconnect/iTMSApplication.css" type="text/css" rel="STYLESHEET">
    <link href="/images/labelconnect/ticketing.css" type="text/css" rel="STYLESHEET">
    <script src="/javascript/prototype.js" type="text/javascript"></script>
    <script src="/javascript/effects.js" type="text/javascript"></script>
    <script src="/javascript/dragdrop.js" type="text/javascript"></script>
    <script src="/javascript/controls.js" type="text/javascript"></script>
    <script src="/javascript/behaviour.js" type="text/javascript"></script>
    <script src="/javascript/rico.js" type="text/javascript"></script>
    <script src="/javascript/labelconnect.js" type="text/javascript"></script>
    <script src="/javascript/labelconnect_pricing.js" type="text/javascript"></script>
  </head><body bgcolor="#FFFFFF" leftmargin="0" marginheight="0" marginwidth="0" topmargin="0" rightmargin="0">
    
<center>
<div style="width:100%;background-color:#ffffff;"><img src="/images/spacer.gif" width="1" height="8"><br>
    <div id="globalheader" class="ipoditunes">
		<ul id="globalnav">
			<li id="gn-apple"><a href="http://www.apple.com/">Apple</a></li>
			<li id="gn-store"><a href="http://store.apple.com/">Store</a></li>
			<li id="gn-mac"><a href="http://www.apple.com/mac/">Mac</a></li>
			<li id="gn-ipoditunes"><a href="http://www.apple.com/itunes/">iPod + iTunes</a></li>
			<li id="gn-iphone"><a href="http://www.apple.com/iphone/">iPhone</a></li>
			<li id="gn-downloads"><a href="http://www.apple.com/downloads/">Downloads</a></li>
			<li id="gn-support"><a href="http://www.apple.com/support/">Support</a></li>
		</ul>
		<div id="globalsearch">
		</div>
	</div>
</div>
</center>    


    <table border="0" cellpadding="4" cellspacing="0" width="99%" align="center">
      <tbody><tr>
        <td>

          <table width="980" cellpadding="0" cellspacing="0" border="0" align="center">
	<tbody><tr>
    <td colspan="3">
      <table width="100%">
        <tbody><tr>
          <td style="width: 153px" align="left"><img src="/images/labelconnect/txt_title_itunesvips.gif" width="153" height="18" alt="iTunes Connect" border="0"></td>
          
          
          <td style="text-align: right"><form name="signOutForm" method="post" action="/WebObjects/iTunesConnect.woa/wo/18.0.0.5.3.1.0">
    <font color="gray">
        
        Pengjun Gong, frank gongpengjun
    </font>
    <input type="submit" value="Sign Out">
</form>
</td>
          
        </tr>
      </tbody></table>
    </td>
  </tr>
  
            
            
            
            <tr>
              <td colspan="4">
                <div id="LCPurpleSoftwarePageWrapperErrorMessage">
                  
                </div>
              </td>
            </tr>
            
            <tr>
              <td colspan="4">
                

<form name="mainForm" enctype="multipart/form-data" method="post" action="/WebObjects/iTunesConnect.woa/wo/18.0.0.5.5.7.1">

<table width="980" border="0" cellpadding="0" cellspacing="0">
<tbody><tr>
    <td width="8"><img src="/images/labelconnect/wrapper_topl.gif" width="8" height="51" alt=""></td>
    <td width="*" background="/images/labelconnect/wrapper_top.gif" height="51" align="center" class="header_text">
        
        
        
        <p>App Details</p></td>
    <td width="8"><img src="/images/labelconnect/wrapper_topr.gif" width="8" height="51" alt=""></td>
</tr>
<tr>
	<td background="/images/labelconnect/wrapper_10.gif" width="8"></td>
	<td bgcolor="#C9C9C9">
		
    
      <table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0" style="background-color:#C9C9C9">
        <tbody><tr valign="top">
          <td height="40" width="4" valign="top" background="/images/labelconnect/wrapper_17.gif"><img src="/images/labelconnect/wrapper_11.gif" width="4" height="40" alt=""></td>
          <td rowspan="2" style="background: white URL('/images/labelconnect/wrapper_12.gif') repeat-x top left" valign="top">
            <table width="100%" border="0" cellpadding="0" cellspacing="0" align="center">
              
              <tbody><tr>
                <td>
                  

<table width="100%" border="0" align="center" cellpadding="0" cellspacing="0" class="meta-data" style="margin-top:50px;margin-bottom: 79px;">
    <tbody><tr> 
        <td class="metadata-field-details-label">Application Name :&nbsp;</td>
        <td class="metadata-field-details-name">Pocket Folder</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Apple ID :&nbsp;</td>
        <td class="metadata-field-details-name">316154812</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Bundle Identifier :&nbsp;</td>
        <td class="metadata-field-details-name">com.gongpengjun.PocketFolder</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Localizations :&nbsp;</td>
        <td class="metadata-field-details-name">(
	"English"
)</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Prerendered Icon Flag :&nbsp;</td>
        <td class="metadata-field-details-name">false</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Original Zip File Name :&nbsp;</td>
        <td class="metadata-field-details-name">PocketFolder.app.zip</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Bundle Short Version String :&nbsp;</td>
        <td class="metadata-field-details-name">1.0</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Bundle Version :&nbsp;</td>
        <td class="metadata-field-details-name">1.0</td>
    </tr>
    <tr> 
        <td class="metadata-field-details-label">Minimum OS Requirements :&nbsp;</td>
        <td class="metadata-field-details-name">3.0</td>
    </tr>
    
    

        
    
        <tr>
            <td class="metadata-field-details-label">Binary Type :&nbsp;</td>
            <td class="metadata-field-details-name">Non-Fat Binary</td>
        </tr>    
            
</tbody></table>



                </td>
              </tr>
            </tbody></table>
          </td>
          <td height="40" width="4" valign="top" background="/images/labelconnect/wrapper_19.gif"><img src="/images/labelconnect/wrapper_14.gif" width="4" height="40" alt=""></td>
        </tr>
        <tr>
          <td background="/images/labelconnect/wrapper_17.gif" width="4"></td>
          <td background="/images/labelconnect/wrapper_19.gif" width="4"></td>
        </tr>
        <tr>
          <td><img src="/images/labelconnect/wrapper_22.gif" width="4" height="5" alt=""></td>
          <td background="/images/labelconnect/wrapper_23.gif" height="5"></td>
          <td><img src="/images/labelconnect/wrapper_25.gif" width="4" height="5" alt=""></td>
        </tr>
      </tbody></table>
    
        
    
	</td>
	<td background="/images/labelconnect/wrapper_15.gif" width="8"></td>
	</tr>
    <tr>
        <td width="8"><img src="/images/labelconnect/wrapper_bottoml.gif" width="8" height="41" alt=""></td>
        <td width="*" background="/images/labelconnect/wrapper_bottom.gif" height="41">
            <input align="left" type="image" name="0.0.5.5.7.1.16.0" src="/images/labelconnect/btn-goback.png">
        </td>
        <td width="8"><img src="/images/labelconnect/wrapper_bottomr.gif" width="8" height="41" alt=""></td>
	</tr>

</tbody></table>
</form>  

              </td>
            </tr>
            
          
</tbody></table>
            <div class="footerLinks" align="center"><a href="/WebObjects/iTunesConnect.woa/wo/18.0.0.7.0.1">Home</a> 
     | <a href="/WebObjects/iTunesConnect.woa/wa/jumpTo?page=faqs">FAQs</a> 
 | <a href="/WebObjects/iTunesConnect.woa/wo/18.0.0.7.0.5">Sign Out</a></div>
 <div class="footerCopyright" align="center">Copyright ¬© 2009 Apple Inc. All rights reserved. <a href="/WebObjects/iTunesConnect.woa/wo/18.0.0.7.0.9">Terms of Service</a> | <a href="http://www.apple.com/legal/privacy/">Privacy Policy</a></div><br>
 
        </td>
      </tr>
    </tbody></table>
  
         
</body></html>UUTF-8PØ'!%).26:?DHLPTX\`dhlptx|ÄÑàåêîòú†§®¨‘_WebResourceResponseO™bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ$&,-3%45STUVWXYZ[\]^_`abcdefghijkopU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1Ä#ÄÄ" ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ghttps://itunesconnect.apple.com/images/labelconnect/iTMSApplication.css“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫eçMÉ»”6789FWNS.keysZNS.objectsÄ!¨:;<=>?@ABCDEÄ	Ä
ÄÄÄÄÄÄÄÄÄÄ¨GHIJKLMNOPQRÄÄÄÄÄÄÄÄÄÄÄÄ ]Last-Modified]Cache-ControlWExpires]Accept-Ranges_Content-EncodingVServer\Content-TypeTDate^Ntcoent-LengthTEtag^Content-LengthZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:16 GMTUbytesTgzip_Apache/1.3.33 (Darwin)Xtext/css_Wed, 15 Jul 2009 18:30:32 GMTT6553_"fd9941-1999-4a4cdeaa"T1637Uclose“./lm£mn2_NSMutableDictionary\NSDictionaryô“./qr£rs2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d ã ë ¨ ≥ ∂ π Ω ¡ ƒ «   Õ – ” ÷ Ÿ € › ﬂ · „ Â Á È Î Ì Ô Ò ¯ \ajux~áêíô°¨ÆªΩø¡√≈«…ÀÕœ—”‡‚‰ÊËÍÏÓÚÙˆ¯*=DQVejyÑ§≤“ÿ›ˆˇ$=BHMQgtw|Äî             t              ¢Xtext/cssOô@import url("/images/labelconnect/faq/css/faq.css");
@import url("/images/labelconnect/nav/nav.css");
@import url("/images/labelconnect/contactus.css");
@import url("/images/labelconnect/ticketing.css");
@import url("/images/labelconnect/manage_apps.css");

A {
    text-decoration: none;
}

A:link {
    color:           #3366cc;
    text-decoration: none;
}

A:visited {
    color:           #663399;
    text-decoration: none;
}

A:active {
    color:           #cccccc;
    text-decoration: none;
}

BODY, TD, CENTER, P {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   12px;
    color:       #000000;
}

.body {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   10px;
    color:       #000000;
}

.content {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   12px;
    color:       #000000;
}

.disclaimer {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   9px;
    color:       #999999;
}

.error {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   10px;
    color:       #CC0000;
}

.formlabel {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   10px;
    color:       #333333;
}

.form {
    font-family: Courier, "Courier New";
    font-size:   10px;
    color:#000000;
}

.forminput {
    font-family: Courier, "Courier New";
    font-size:   10px;
    color:#000000;
    width: 310px;
}

.forminputsm {
    font-family: Courier, "Courier New";
    font-size:   10px;
    color:#000000;
    width: 165px;
}

.forminputmed {
    font-family: Courier, "Courier New";
    font-size:   10px;
    color:#000000;
    width: 210px;
}

.headline {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   13px;
    font-weight: bold;
    color:       #000000;
}

.instr {
    font-family: Geneva, Verdana, Arial, Lucida Grande;
    font-size:   11px;
    font-weight: bold;
    padding: 16px 0 0 5px;
}

.footnote {
    font-family: Geneva, Verdana, Arial, Lucida Grande;
    font-size:   11px;
}

.label {
    font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   9px;
    color:       #000000;
}

.message {
    font-family: Geneva, Verdana, Arial, Lucida Grande;
    font-size:   9px;
}

.preference {
    font-family: Lucida Grande, Arial, sans-serif;
    font-size:   12px;
    font-weight: bold;
    color:       #000000;
}

.reminder {
    font-family: "Times New Roman", Times, serif;
    font-size:   28px;
    color:       #000000;
}

.subheader {
	font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   14px;
    font-weight: bold;
    color:       #666666;
}

.whiteheader {
	font-family: Lucida Grande, Geneva, Verdana, Arial;
    font-size:   12px;
    font-weight: bold;
    color:       #ffffff;
}

/* Headings */

div.clear {
  clear: both;
  height: 1px;
}

/* Forms */

fieldset {
  border: 0;
  padding: 0 2px 5px 2px;
}

fieldset label {
  display: inline;
}

fieldset input[type=text] {
  display: inline;
  width: 200px;
  margin-left: 5px;
}

fieldset select {
  margin-left: 5px;
}

fieldset.top {
  display: block;
}

fieldset.top label {
  display: block;
  margin: 2px 0 0 1px;
}

fieldset.top textarea, fieldset.top input {
  width: 100%;
  margin: 2px 0 0 0;
}

fieldset.small input {
  width: 30px;
}

div.aligned-form fieldset label, div.aligned-form div.ro-label {
  width: 240px;
  text-align: right;
  display: block;
  float: left;
  margin-top: 4px;
}

div.medium fieldset label, div.two-column div.ro-label {
    width: 150px;
}

div.aligned-form div.ro-label {
  margin-left: 5px;
  margin-bottom: 6px;
  margin-left: 4px;
}

div.aligned-form div.ro-label-text {
  margin-top: 4px;
  float: left;
  margin-left: 6px;
  font-weight: bold;
}

div.two-column fieldset label, div.two-column div.ro-label {
  width: 110px;
}

div.two-column-tv fieldset label, div.two-column-tv div.ro-label {
  width: 120px;
}

div.two-column-tv fieldset input {
  width: 150px;
}

div.two-column fieldset input {
  width: 150px;
}

div.two-column-small fieldset label, div.two-column div.ro-label {
  width: 85px;
}

div.two-column-large fieldset label, div.two-column-large div.ro-label {
  margin-left: 0px;
  width: 210px;
}

p.form-seperator {
  text-align: center;
  font-size: 12px;
  font-weight:  bold;
  margin: 8px 0;
}

/* Brick */

div.brick {
  border: 1px solid #999;
}

div.brick img.brick_topl {
  position: relative;
  top: -1px;
  left: -1px;
  float: left;
}

div.brick img.brick_topr {
  position: relative;
  top: -1px;
  right: -1px;
  float: right;
}

div.brick img.brick_botl {
  float: left;
  position: relative;
  bottom: 9px;
  left: -1px;
}

div.brick img.brick_botr {
  position: relative;
  bottom: 9px;
  right: -1px;
  float: right;
}

div.brick div.content {
  margin: 10px;
}

/* For IE */

* html div.brick img.brick_topl { left: -4px; }
* html div.brick img.brick_topr { right: -4px; }
* html div.brick img.brick_botl { left: -4px; }
* html div.brick img.brick_botr { right: -4px; }


/* Button Alignment */

div.buttons {
  text-align: right;
  margin:  5px 15px;
}

div.buttons input {
  margin-left: 5px;
  width: 96px;
}

/* Footnotes */

sup, div.footnote p {
  color: #000;
  font-style: italic;
}

sup {
	vertical-align: 3px;
}

sup, div.footnote p span {
  font-size: 11px;
}

div.footnote {
  margin: 20px 10px;
}

div.footnote p {
  font-size: 11px;
  margin: 10px 0;
}

/* Footer Links */

.footerLinks {
  
  width: 100%; font-size: 10px;
  margin-top: 5px;
}

.footerLinks a, .footerCopyright a {
  
  padding: 0 4px; text-decoration: none;
}
  
.footerLinks a:hover, .footerCopyright a:hover {
  
  text-decoration: underline;
}

.footerCopyright {

  font-size: 10px !important; color: #76797c;
  margin-top: 5px;
  padding-bottom:20px;
}

/* Lists */

.ApModList {
  
  list-style: circle;
  margin-left: 10px
  padding-left: 5px;
}

.ApModList li {
  padding-bottom: 5px;
}

/* Javascipt style */

span.temporary_alert {
  color: red;
  margin-left: 5px;
}

a.collapse_link {
  cursor: pointer;
}

/* TV Form Table */

.padLeft5px {
  padding-left:5px;
}


/* Ticketing Styles */

.notes {	font-size: 10px;
	font-style: italic;
	color: #666666;
}

.smalltext {	font-size: 10px;
	color: #000000;
}

.borderbot {
  border-bottom:1px solid #aaaaaa;
}


/* Search Styles */

.contentSearchContainer {

}

.contentSearch {
	border: solid 1px #bfd6ff;
	padding: 10px 20px 10px 20px;
	margin-bottom: 15px;
	margin-right: 8px;
	text-align: center;
	font-weight: bold;
	font-size: 13px;
	float: left;
}_Ghttps://itunesconnect.apple.com/images/labelconnect/iTMSApplication.css‘Oßbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ$&,-3%45STUVWXYZ[\]^_`abcdefghijkopU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1Ä#ÄÄ" ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Chttps://itunesconnect.apple.com/images/labelconnect/faq/css/faq.css“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫e–´÷»”6789FWNS.keysZNS.objectsÄ!¨:;<=>?@ABCDEÄ	Ä
ÄÄÄÄÄÄÄÄÄÄ¨GHIJKLMNOPQRÄÄÄÄÄÄÄÄÄÄÄÄ ]Last-Modified]Cache-ControlWExpires^Cteonnt-Length]Accept-Ranges_Content-EncodingVServer\Content-TypeTDate^Content-LengthTEtagZCneonction_Thu, 02 Jul 2009 16:22:00 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:16 GMTT9599UbytesTgzip_Apache/1.3.33 (Darwin)Xtext/css_Wed, 15 Jul 2009 18:30:32 GMTT2097_"1509e30-257f-4a4cdea8"Uclose“./lm£mn2_NSMutableDictionary\NSDictionary%“./qr£rs2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d ã ë ¨ ≥ ∂ π Ω ¡ ƒ «   Õ – ” ÷ Ÿ € › ﬂ · „ Â Á È Î Ì Ô Ò ¯ X]fqtzÉåéïù®™∑πªΩø¡√≈«…ÀÕœ‹ﬁ‡‚‰ÊËÍÏÓÚÙ'5HO\apuÄ†ÆŒ”Ÿﬁ˜  %?EJNdqty}ë             t              üO%/* Check Warranty */

div#checkwarranty							{ width: 100%; margin-bottom: 10px; padding-bottom: 10px;  }
#checkwarranty div 			{font-size: 10px; line-height: 13px;}
#checkwarranty .title					{ font-weight: bold; padding: 0px 0px 2px 0px; float: left; clear: none; }
#checkwarranty .description				{ font-weight: bold; padding: 0px 0px 2px 0px; margin-bottom: 8px; clear: both;}
#checkwarranty .description IMG			{ margin: 0px 8px 0px 0px; clear: both;}

.clearest								{clear: both;}

#checkwarranty .help					{ color: #76797c; font-size: 9px; padding: 0px 0px 2px 0px; }
#checkwarranty .help a:link,			
#checkwarranty .help a:visited 			{ color: #76797c; font-size: 9px; text-decoration: underline; } 
#checkwarranty .help a:hover 			{ color: #333; font-size: 9px; text-decoration: underline; }

#checkwarranty .right					{ float: right; clear: none; }
#checkwarranty .bodytext				{ padding: 3px 0px 2px 0px; clear: both; }
#checkwarranty .theform					{ margin: 5px 0px 0px 0px; }

#checkwarranty .searchfield				{ width: 130px; margin-right: 6px; margin-bottom: 7px; font-size: 12px; vertical-align: middle; }
#checkwarranty .searchbutton			{ margin-bottom: 7px; }

#checkwarranty .another					{ margin-top: 7px; }

.legaldisclaimer 						{ padding-top: 3px; }
.legaldisclaimer a:link,
.legaldisclaimer a:visited				{ color: #a1a5a9; text-decoration: underline;}
.legaldisclaimer a:hover 				{ color: #333; text-decoration: underline;}


FORM						{ padding: 0px;	margin: 0px; }

/* Spacing for the main frame */

#framebanner				{ height: 120px; vertical-align: top; padding-bottom: 0px;}
#framecontent				{ width: 460px; vertical-align: top; }
#framegutter				{ width: 20px; }
#framegutter2				{ width: 20px; }
#framesidebar				{ width: 200px; vertical-align: top;}
#framesidebar TD			{ font-size: 10px; line-height: 13px; }
#framesidebar2				{ width: 200px; vertical-align: top;}
#framesidebar2 TD			{ font-size: 10px; line-height: 13px; }
#breadcrumb					{ margin-top: 10px; margin-bottom: 10px; font-size: 10px;}

/* Sidebar Search */

.sbsearch					{ width: 100%; margin-bottom: 0px; margin-top: 1px; }
#searchfield				{ width: 158px; margin-right: 6px; font-size: 12px; vertical-align: middle; }
#searchbutton				{ width: 24px; height: 24px; vertical-align: middle; }
.sbsearchtop				{ vertical-align: middle; font-weight: bold; padding: 0px 0px 2px 0px; }
.sbsearchtop a:link,
.sbsearchtop a:visited 		{ color: #76797c; font-size: 9px; text-decoration: underline; } 
.sbsearchtop a:hover 		{ color: #333; font-size: 9px; text-decoration: underline; }
.sbsearchbody				{ background: #FFF; padding: 7px 0px 0px 0px; }

/* Basic Sidebar Module Definition */

.sbstandard					{ width: 100%; margin-bottom: 0px; }
.sbstandard TABLE			{ width: 100%; }
.sbstandard IMG				{ margin-right: 8px; }
.sbstandardtop				{ background: #FFF; padding: 3px 0px 0px 0px; font-weight: bold; }
.sbstandardbody				{ background: #FFF; padding: 2px 0px 0px 1px; }
.sbstandardbody TD 			{ padding: 2px 0px 2px 0px; }
.sbstandard UL				{ list-style-image: url(http://images.apple.com/support/ibook/elements/bullet.gif); margin-top: 2px; margin-bottom: 0px; margin-left: 11px; padding: 0px 0px 0px 4px; list-style-position: outside; }
.sbstandard UL.arrowlinks		{ list-style-image: url(http://images.apple.com/support/ibook/elements/arrowa1a5a9.gif); margin-top: 2px; margin-bottom: 0px; margin-left: 12px; padding: 0px 0px 0px 4px; list-style-position: outside; }
.sbstandard LI				{ margin-bottom: 2px; }

.sbstandardbody2			{ background: #FFF; padding: 2px 0px 10px 1px; }
.sbstandardbody2 TD 		{ padding: 2px 0px 2px 0px; }
.sbstandard UL				{ list-style-image: url(http://images.apple.com/support/ibook/elements/bullet.gif); margin-top: 2px; margin-bottom: 0px; margin-left: 12px; padding: 0px; padding-left: 2px; list-style-position: outside; }
.sbstandard UL.arrowlinks		{ list-style-image: url(http://images.apple.com/support/ibook/elements/arrowa1a5a9.gif); margin-top: 2px; margin-bottom: 0px; margin-left: 12px; padding: 0px; padding-left: 2px; list-style-position: outside; }
.sbstandard LI				{ margin-bottom: 2px; }

/* Discussions */

.sbdiscuss					{ width: 100%; margin-bottom: 0px; }
.sbdiscuss TABLE			{ width: 100%; }
.sbdiscuss IMG				{ margin-right: 8px; }
.sbdiscusstop				{ background: #FFF; padding: 5px 0px 0px 0px; font-weight: bold; }
.sbdiscussbody				{ background: #FFF; padding: 2px 0px 15px 0px; }
.sbdiscussbody TD 			{ padding: 2px 0px 2px 0px; }

/* KB box definitions */

.kbcontainer 				{ margin-top: 0px; margin-bottom: 15px; }
.kbtop 						{ border-bottom: 1px solid #a1a5a9; width: 440px; color: #333; background: #ededed url(http://images.apple.com/support/ibook/elements/kbtop.gif) top left no-repeat; padding: 4px 4px 4px 6px; font-size: 12px; line-height: 14px; text-align: left; font-weight: bold;}
.kbback 					{ width: 440px; background: #FFF url(http://images.apple.com/support/ibook/elements/kbback.gif) bottom left repeat-y; padding: 4px 4px 4px 6px; font-size: 10px; line-height: 16px; text-align: left; }
.kbback2 					{ width: 440px; background: #FFF url(http://images.apple.com/support/ibook/elements/kbback.gif) top left repeat-y; padding: 4px 4px 4px 6px; font-size: 10px; line-height: 15px; text-align: left; border-bottom: 1px solid #a1a5a9; }
.kbbtm 						{ border-top: 1px solid #a1a5a9; width: 440px; color: #333; background: #ededed url(http://images.apple.com/support/ibook/elements/kbbtm.gif) bottom left no-repeat; height: 10px;}



.kbback a:link,
.kbback a:visited, 		
.kbback2 a:link,
.kbback2 a:visited			{ background: url(http://images.apple.com/support/ibook/elements/arrow-gray.gif) left no-repeat; color: #12C; text-decoration: none; padding-left: 13px; font-weight: bold; }

.kbback a:hover,
.kbback2 a:hover 			{ background: url(http://images.apple.com/support/ibook/elements/arrow-gray.gif) left no-repeat; color: #12C; text-decoration: underline; }

a:link 						{ color: #12C; }

ul.bullet2					{ list-style-image: url(http://images.apple.com/main/elements/dot2.gif); margin-top: 8px; margin-bottom: 16px; margin-left: 22px; padding: 0px; padding-left: 1px; line-height: 16px; list-style-position: outside; }

.L14V 						{ font-family: 'Lucida Grande', Geneva, Verdana, Arial, Helvetica, sans-serif; font-size: 14px; color: #5E478E; line-height: 18px; } 
.L14GR 						{ font-family: 'Lucida Grande', Geneva, Verdana, Arial, Helvetica, sans-serif; font-size: 14px; color: #76B900; line-height: 18px; } 
.L16GR 						{ font-family: 'Lucida Grande', Geneva, Verdana, Arial, Helvetica, sans-serif; font-size: 16px; color: #76B900; line-height: 20px; } 
.L18GR 						{ font-family: 'Lucida Grande', Geneva, Verdana, Arial, Helvetica, sans-serif; font-size: 18px; color: #76B900; line-height: 22px; } 
.L24GR 						{ font-family: 'Lucida Grande', Geneva, Verdana, Arial, Helvetica, sans-serif; font-size: 24px; color: #99CC33; line-height: 28px; }

.blueheader					{ background: #e2eeff url(../elements/gradient-blue.gif) bottom left repeat-x; font-size: 10px; line-height: 13px; color: #000; }
.borderb1			 		{ background-color: #FFFFFF; border: 1px solid #b1b5b9; }
.tabletop				 	{ border-top: 1px solid #b1b5b9; margin-top: 2px; }

/* Downloads Table */

.dltable						{ border-left: 1px solid #a1a5a9; border-right: 1px solid #a1a5a9; border-bottom: 1px solid #a1a5a9; }
.dltable td						{ padding: 4px; font-size: 10px; line-height: 13px; }
.dltable tr.dlodd td.dlbold		{ color: #000; font-weight: bold; }
.dltable tr.dleven td.dlbold	{ color: #000; font-weight: bold; }
.dltable tr.dlheader TD			{ background: #ededed; color: #333; font-size: 12px; line-height: 16px; border-bottom: 1px solid #a1a5a9; }
.dltable tr.dlodd TD			{ background: #edf3fe; color: #76797c; }
.dltable tr.dleven TD			{ background: #FFF; color: #76797c; }
.dltable a.dlarrow				{ background: url(http://images.apple.com/support/ibook/elements/download.gif) left no-repeat; padding-left: 12px; }

.dltable tr.dlodd a:link,
.dltable tr.dlodd a:visited, 		
.dltable tr.dleven a:link,
.dltable tr.dleven a:visited	{ color: #12C; text-decoration: none; }

.dltable tr.dlodd a:hover,
.dltable tr.dleven a:hover		{ text-decoration: underline; }

/* Headers */

.violetheader						{ background: #f6f6f6 url(../elements/gradient-violet.gif) bottom left repeat-x; font-size: 10px; line-height: 13px; color: #000; padding: 4px; }

.blueheader						{ background: #e2eeff url(../elements/gradient-blue.gif) bottom left repeat-x; font-size: 10px; line-height: 13px; color: #000; }
a.bluemore						{ color: #76797c; text-decoration: underline; }
/* mac MSIE fix \*/
a.bluemore						{ color: #76797c; text-decoration: none; background: url(http://images.apple.com/support/ibook/elements/arrowmore-blue.gif) right no-repeat; padding-right: 16px; margin-right: 3px; }
/* mac MSIE fix */



a.bluemore:hover				{ color: #000000; text-decoration: underline; }
/* mac MSIE fix \*/
a.bluemore:hover				{ color: #000000; text-decoration: none; background: url(http://images.apple.com/support/ibook/elements/arrowmore-grayhi.gif) right no-repeat; padding-right: 16px; margin-right: 3px; }
/* mac MSIE fix */

/*Family navs*/
#nav {background: #FFF url(http://images.apple.com/support/macbookpro/elements/navback_20060202.gif) top left no-repeat; width: 680px; padding: 0; margin: 0px auto; margin-top: 10px;}
#nav td {text-align: left; padding-left: 10px;}
#nav a {text-decoration: none; text-shadow: 0px 1px white; display: block; color: #4a4d4b; font-size: 10px; font-weight: bold; padding: 5px 0; white-space: nowrap;}
#nav a:hover {color: #767c79;}
#nav a.hi {color: #000000;}
_Chttps://itunesconnect.apple.com/images/labelconnect/faq/css/faq.css‘O†bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ$&,-3%45STUVWXYZ[\]^_`abcdefghijkopU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1Ä#ÄÄ" ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_?https://itunesconnect.apple.com/images/labelconnect/nav/nav.css“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫f‡»”6789FWNS.keysZNS.objectsÄ!¨:;<=>?@ABCDEÄ	Ä
ÄÄÄÄÄÄÄÄÄÄ¨GHIJKLMNOPQRÄÄÄÄÄÄÄÄÄÄÄÄ ]Last-Modified]Cache-ControlWExpires^Cteonnt-Length]Accept-Ranges_Content-EncodingVServer\Content-TypeTDate^Content-LengthTEtagZCneonction_Thu, 02 Jul 2009 16:22:00 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTT3382UbytesTgzip_Apache/1.3.33 (Darwin)Xtext/css_Wed, 15 Jul 2009 18:30:33 GMTS749_"2ca4da-d36-4a4cdea8"Uclose“./lm£mn2_NSMutableDictionary\NSDictionary6“./qr£rs2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d ã ë ¨ ≥ ∂ π Ω ¡ ƒ «   Õ – ” ÷ Ÿ € › ﬂ · „ Â Á È Î Ì Ô Ò ¯ TYbmpvàäëô§¶≥µ∑πªΩø¡√≈«…Àÿ⁄‹ﬁ‡‚‰ÊËÍÏÓ˛#1DKX]lq|ú™ œ’⁄Û¸ 8>CG]jmrvä             t              òO6/* GLOBALHEADER */
#globalheader { width: 982px; height: 38px; margin: 10px auto; position: relative; background-color: #ffffff;}

#globalheader #globalnav { margin: 0; padding: 0;}
#globalheader #globalnav li { display: inline;}

/* for non IE */
div>#globalheader #globalnav li a { float: left; width: 117px; height: 0; padding-top: 38px; overflow: hidden; }

/* For IE */
#globalheader #globalnav li a { float: left; width: 117px; height: 38px; padding-top: 38px; overflow: hidden; }

#webmailWrapperDivForNav #globalheader #globalnav li a { float: left; width: 117px; height: 0px; padding-top: 38px; overflow: hidden; }

#globalheader #globalnav li a,
#globalheader #globalsearch { background-image: url(/images/labelconnect/nav/globalnavbgblack.png); background-repeat: no-repeat; }


/* BUTTONS */
#globalheader #globalnav li#gn-apple a { background-position: 0 0; }
#globalheader #globalnav li#gn-store a { background-position: -117px 0; }
#globalheader #globalnav li#gn-mac a { background-position: -234px 0; }
#globalheader #globalnav li#gn-ipoditunes a { background-position: -351px 0; }
#globalheader #globalnav li#gn-iphone a { background-position: -468px 0; }
#globalheader #globalnav li#gn-downloads a { background-position: -585px 0; }
#globalheader #globalnav li#gn-support a { background-position: -702px 0; }


/* OVER STATES */
#globalheader #globalnav li#gn-apple a:hover { background-position: 0 -38px; }
#globalheader #globalnav li#gn-store a:hover { background-position: -117px -38px; }
#globalheader #globalnav li#gn-mac a:hover { background-position: -234px -38px; }
#globalheader #globalnav li#gn-ipoditunes a:hover { background-position: -351px -38px; }
#globalheader #globalnav li#gn-iphone a:hover { background-position: -468px -38px; }
#globalheader #globalnav li#gn-downloads a:hover { background-position: -585px -38px; }
#globalheader #globalnav li#gn-support a:hover { background-position: -702px -38px; }


/* PRESSED STATES */
#globalheader #globalnav li#gn-store a:active { background-position: -117px -76px; }
#globalheader #globalnav li#gn-mac a:active { background-position: -234px -76px; }
#globalheader #globalnav li#gn-ipoditunes a:active { background-position: -351px -76px; }
#globalheader #globalnav li#gn-iphone a:active { background-position: -468px -76px; }
#globalheader #globalnav li#gn-downloads a:active { background-position: -585px -76px; }
#globalheader #globalnav li#gn-support a:active { background-position: -702px -76px; }


/* ON STATES */
#globalheader.home #globalnav li#gn-apple a { background-position: 0 0; cursor: default; }
#globalheader.store #globalnav li#gn-store a { background-position: -117px -114px; }
#globalheader.mac #globalnav li#gn-mac a { background-position: -234px -114px; }
#globalheader.ipoditunes #globalnav li#gn-ipoditunes a { background-position: -351px -114px; }
#globalheader.iphone #globalnav li#gn-iphone a { background-position: -468px -114px; }
#globalheader.downloads #globalnav li#gn-downloads a { background-position: -585px -114px; }
#globalheader.support #globalnav li#gn-support a { background-position: -702px -114px; }

/* GLOBAL SEARCH */
#globalsearch { width: 163px; height: 38px; position: absolute; top: 0; right: 0; background-position: 100% 0; background-repeat: no-repeat; }
#globalsearch input.searchbox { width: 140px; position: absolute; top: 9px; right: 11px; }





_?https://itunesconnect.apple.com/images/labelconnect/nav/nav.css‘ O£bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ$&,-3%45STUVWXYZ[\]^_`abcdefghijkopU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1Ä#ÄÄ" ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ahttps://itunesconnect.apple.com/images/labelconnect/contactus.css“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫f-˙»”6789FWNS.keysZNS.objectsÄ!¨:;<=>?@ABCDEÄ	Ä
ÄÄÄÄÄÄÄÄÄÄ¨GHIJKLMNOPQRÄÄÄÄÄÄÄÄÄÄÄÄ ]Last-Modified]Cache-ControlWExpires]Accept-Ranges_Content-EncodingVServer\Content-TypeTDate^Ntcoent-LengthTEtag^Content-LengthZNncoection_Thu, 02 Jul 2009 16:22:01 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTUbytesTgzip_Apache/1.3.33 (Darwin)Xtext/css_Wed, 15 Jul 2009 18:30:33 GMTT1415_"10ba1c5-587-4a4cdea9"S561Uclose“./lm£mn2_NSMutableDictionary\NSDictionaryá“./qr£rs2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d ã ë ¨ ≥ ∂ π Ω ¡ ƒ «   Õ – ” ÷ Ÿ € › ﬂ · „ Â Á È Î Ì Ô Ò ¯ V[dorxÅäåìõ¶®µ∑πªΩø¡√≈«…ÀÕ⁄‹ﬁ‡‚‰ÊËÍÏÓÚ $7>KP_ds~û¨Ã“◊˘7;AFJ`mpuyç             t              õOá@charset "UTF-8";

/* CSS Document */

/* @group links */

a:link {
	color: #4673cb;
}

a:visited {
	color: #4673cb;
}

a:hover {
	color: #214182;
}

a:active {
	color: #4673cb;
}

/* @end */

.wip {
	color: maroon;
	font-size: 12px;
	font-weight: normal;
	font-style: normal;
	position: relative;
	top: 5px;

	float: right;
	padding-right: 20px;
	letter-spacing: 1px;
}

.smalltext {
	font-size: 10px;
	color: #000000;
}

/* @group QUESTIONS */

.questions_previous {
	padding: 10px;
	padding-bottom: 25px;
	margin-bottom: 5px;
	border: 1px #d3d3d3 solid;
	background-color: #f0f0f0;
}

.questions_current {
	padding: 10px;
	padding-bottom: 25px;
	border: 1px #eeee11 solid;
	background-color: #FFFFe8;
}

.questions_number {
	font-size: 14px;
	color: gray;
	font-weight: bold;
	padding-right: 10px;
	float: left;
}

.questions_text {
	width: 560px;
	font-size: 12px;
	color: black;
	float: left;
}

.questions_decision {
	float: right;
	min-width: 300px;
	position: relative;
	top: -3px;
}

/* @end */

/* @group CONTENT */

.content_section {
	padding: 10px;
	padding-bottom: 30px;
	margin-top: 15px;
	margin-bottom: 15px;
	border: 1px solid #d0deec;
	background-color: #f4f6f9;
}

.content_bigtext {
	font-weight: bold;
	font-size: 14px;
}

/* @end */

/* @group FAQS */

.faq_section {
	color: #385b7f;
	padding: 10px;
	margin-bottom: -5px;
	background-color: #fcfcfc;
	border: 1px solid #d0deec;
}

/* @end */_Ahttps://itunesconnect.apple.com/images/labelconnect/contactus.css‘"#$O•bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ$&,-3%45STUVWXYZ[\]^_`abcdefghijkopU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1Ä#ÄÄ" ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ahttps://itunesconnect.apple.com/images/labelconnect/ticketing.css“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫eÉü4»”6789FWNS.keysZNS.objectsÄ!¨:;<=>?@ABCDEÄ	Ä
ÄÄÄÄÄÄÄÄÄÄ¨GHIJKLMNOPQRÄÄÄÄÄÄÄÄÄÄÄÄ ]Last-Modified]Cache-ControlWExpires^Cteonnt-Length]Accept-Ranges_Content-EncodingVServer\Content-TypeTDate^Content-LengthTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:16 GMTT6462UbytesTgzip_Apache/1.3.33 (Darwin)Xtext/css_Wed, 15 Jul 2009 18:30:32 GMTT1622_"195fb01-193e-4a4cdeaa"Uclose“./lm£mn2_NSMutableDictionary\NSDictionary>“./qr£rs2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d ã ë ¨ ≥ ∂ π Ω ¡ ƒ «   Õ – ” ÷ Ÿ € › ﬂ · „ Â Á È Î Ì Ô Ò ¯ V[dorxÅäåìõ¶®µ∑πªΩø¡√≈«…ÀÕ⁄‹ﬁ‡‚‰ÊËÍÏÓÚ %3FMZ_ns~û¨Ã—◊‹ı˛#=CHLborw{è             t              ùO>@charset "UTF-8";

/* CSS Document */

/* @group links */

a:link {
 color:#4673cb;
}

a:visited {
 color:#4673cb;
}

a:hover {
 color:#214182;
}

a:active {
 color:#4673cb;
}

/* @end */

/* @group page subheader */

.wip {
 color:#e28800;
 font-size:12px;
 position:relative;
 top:5px;
 float:right;
 padding-right:20px;
 font-weight:normal;
 font-style:normal;
}

.subheader {
 text-align:left;
 color:#a7a7a7;
 font-size:16px;
 margin-left:10px;
 margin-bottom:0;
}

.subheader .subheaderModule {
 color:gray;
}

/* @end */

/* @group content type */

.contenttypeDetails {
 padding:10px;
 border:1px solid #d0deec;
 background-color:#f4f6f9;
 min-height:100px;
 margin-top:10px;
 margin-bottom:10px;
}

.contenttypeDetails h2 {
 color:#406180;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
 margin:0 0 15px;
}

/* @end */

/* @group tickets */

.warningTicket {
 background-color:#ffdb8c;
 padding:10px 10px 15px;
 margin-top:10px;
 border:1px solid #ebb744;
 border-bottom-style:none;
 margin-bottom:-10px;
}

.warningTicket h2 {
 color:#000;
 margin:0 0 5px;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
}

.warningTicketDetails {
 padding:10px;
 border:1px solid #e2c27c;
 background-color:#fff3d9;
}

.warningTicketDetails h2 {
 color:#000;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
 margin:0 0 15px;
}

/* @end */

/* @group information */

table.movie-rights {
 padding-bottom:10px;
 border:1px solid #d0deec;
 background-color:#f4f6f9; 
}
table.movie-film-rights {
 padding-bottom:10px;
 border:1px solid #d0deec;
}

table.movie-rights h2 {
 color:#406180;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
 padding-bottom:10px;
 padding-left:10px;
}

table.movie-rights td.pad-left {
 padding-left:8px;
 padding-bottom:10px;
}

table.movie-territory {
 border:1px solid #9a9a9a;
 border-bottom:0;
 background-color:#ffffff; 
}

table.movie-territory .heading-tr {
  background-color:#e0e0e0;
}

table.movie-territory .heading-td {
  padding-left:15px;
  border-bottom:1px solid #9a9a9a;
  font-size:14px;
}

td.movie-territory-content {
  padding-left:5px; 
  padding-top:25px;
}

td.movie-text-bold {
  font-weight:bold;
}

.information {
 padding:10px;
 padding-bottom:15px;
 margin-top:10px;
 margin-bottom:-10px;
 border:1px solid #d0deec;
 background-color:#f4f6f9;
 border-bottom-style:none;
}

.information h2 {
 color:#406180;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
 margin:0 0 15px;
}

.informationText {
 max-width: 700px;
 color:#3a4a59;
 font-size:11px;
 margin-bottom:15px;
}

.informationBottomMargin {
	margin-bottom: 10px;
}

/* @end */

/* @group tables */

.table_nopadtop {
 padding-top:0;
}

.table_nopadbottom {
 padding-bottom:0;
}

/* @end */

/* @group forms */

#textarea {
background-color: #ccc; 
width:400px; 
margin-top:5px;
color: #000;
font-family: Lucida Grande, Geneva, Verdana, Arial;
font-size:   11px;
}

/* @end */

/* @group iTunes Interface */

.backgroundGradientBlue {
 padding:10px 10px 15px;
 background:#8ca9cb url(background_gradient_blue.jpg) repeat-x;
 margin-top:10px;
}

.backgroundGradientBlue h2 {
 color:#fff;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
 margin:0 0 15px;
}

.backgroundGradientBlue .mediaCover {
 border:1px solid #45698b;
}

.backgroundGradientBlack {
 padding:10px 10px 15px;
 background:#363636 url(background_gradient_black.jpg) repeat-x;
 margin-top:10px;
}

.backgroundGradientBlack h2 {
 color:#fff;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
 margin:0 0 15px;
}

.backgroundGradientBlack td {
 color:#fff;
}

.backgroundGradientBlack .mediaCover {
 border:1px solid #191919;
}

.backgroundGradientWarning {
 padding:10px 10px 15px;
 background:#8ca9cb url(background_gradient_warning.jpg) repeat-x;
 margin-top:10px;
 border-right-style:none;
 border-left-style:none;
}

.backgroundGradientWarning h2 {
 color:#000;
 font:bold 18px "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
 margin:0 0 15px;
}

.itunesTableHeader {
 background-image:url(background_gradient_metal.png);
 font-weight:bold;
 font-size:12px;
 border-bottom:1px solid #555;
}

.itunesTableRow {
 background-color:#f1f5fa;
}

.itunesTableRowAlt {
 background-color:#fff;
}

.itunesTableFooter {
 
}

.iTunesTableRightAlign {
 text-align:right;
 padding-right:12px;
}

/* @end */

/* @group old-CONTACT US */

/* @group CONTENT */

.smalltext {
 font-size:10px;
 color:#000000;
}

.content_section {
 padding:10px;
 padding-bottom:30px;
 margin-top:15px;
 margin-bottom:15px;
 border:1px solid #d0deec;
 background-color:#f4f6f9;
}

.content_bigtext {
 font-weight:bold;
 font-size:14px;
}

/* @end */

/* @group FAQS */

.faq_section {
 color:#385b7f;
 padding:10px;
 margin-bottom:-5px;
 background-color:#fcfcfc;
 border:1px solid #d0deec;
}

/* @end */


/* Ticketing Defaults (MW Added)*/
table.ticketing-default {
padding:10px;
border: 1px solid #c6dbf7;
bgcolor:#f1f4f7;
background-color:#f1f4f7;
}

table.ticketing-playlist-inspect {
padding:0px;
cellspacing:0px;
border:0px;
bgcolor:#7a96be;
background-color:#7a96be;
}

table.ticketing-ticket-inspect {
padding:10px;
border: 0px;
bgcolor:#ffefd5;;
background-color:#ffefd5;;
}

table.ticketing-video-inspect {
padding:10px;
border: 1px solid #c6dbf7;
bgcolor:#f1f4f7;
background-color:#f1f4f7;
}

table.ticketing-ticket-summary {
padding:10px;
border: 1px solid #c6dbf7;
bgcolor:#f1f4f7;
background-color:#f1f4f7;
}

td.title-blue {
font-weight: bold; 
font-size: 18px; 
color:#416180; 
text-align:left;
}

span.title-blue {
font-weight: bold; 
font-size: 18px; 
color:#416180; 
text-align:left;
height:20px;
}

td.title-white {
font-weight: bold; 
font-size: 18px; 
color:#FFFFFF; 
text-align:left;
}

td.title-black {
font-weight: bold; 
font-size: 18px; 
color:#000000; 
text-align:left;
}


.playList-regular { 
font-size: 12px; 
font-weight: lighter; 
color: black; 
}

.playList-strong { 
font-size: 12px; 
font-weight: bold; 
color: black; 
}

.playList-strong-red { 
font-size: 12px; 
font-weight: bold; 
color: red; 
}

.playList-ticket-title { 
font-size: 18px; 
font-weight: bold; 
color: black; 
}

.tracklist-small-strong { 
font-size: 10px; 
font-weight: bold; 
color: black; 
}

td.coverArt-regular { 
background-color: gray; 
color: #ffffff; 
text-align:center;
}

.coverArt-ticket { 
background-color: #ffcc66; 
}

/* @end */_Ahttps://itunesconnect.apple.com/images/labelconnect/ticketing.css‘&'(O∞bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ$&,-3%45STUVWXYZ[\]^_`abcdefghijkopU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1Ä#ÄÄ" ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Chttps://itunesconnect.apple.com/images/labelconnect/manage_apps.css“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫f7º,»”6789FWNS.keysZNS.objectsÄ!¨:;<=>?@ABCDEÄ	Ä
ÄÄÄÄÄÄÄÄÄÄ¨GHIJKLMNOPQRÄÄÄÄÄÄÄÄÄÄÄÄ ]Last-Modified]Cache-ControlWExpiresZCneonction]Accept-Ranges_Content-EncodingVServer\Content-TypeTDate^Ntcoent-LengthTEtag_Transfer-Encoding_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTUcloseUbytesTgzip_Apache/1.3.33 (Darwin)Xtext/css_Wed, 15 Jul 2009 18:30:33 GMTU61707_"fd9953-f10b-4a4cdeaa"XIdentity“./lm£mn2_NSMutableDictionary\NSDictionaryÒ“./qr£rs2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d ã ë ¨ ≥ ∂ π Ω ¡ ƒ «   Õ – ” ÷ Ÿ € › ﬂ · „ Â Á È Î Ì Ô Ò ¯ X]fqtzÉåéïù®™∑πªΩø¡√≈«…ÀÕœ‹ﬁ‡‚‰ÊËÍÏÓÚÙ#1DKX]lqÖ•≥”Ÿﬂ‰˝&,ENSWmz}ÇÜö             t              ®OÒ/* 05/29/2009 11:00 AM */
/* BEGIN HEADER TEXT */

.header_text p{
  font-size: 22px;
  color:#57646e;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
  text-align:center;
  font-weight:bold;
  text-shadow: 0px 1px 0px #eee;
}

.header_text p {
  margin:2px 160px 0;
  text-align:center;
}

a.download-guide {
  font-family: "Lucida Grande", Arial;
  vertical-align:middle;
  position:relative;
  top:5px;
}

a.download-guide img {
  position:relative;
  top:3px;
}

.upload-app-button {
  float:left;
  padding-top:2px;
  border: 0;
}

.wrapper-topleft-button {
  float:left;
  padding-top:2px;
  border: 0;
}

.wrapper-topright-button {
  float: right;
  padding-top: 2px;
  border: 0;
}

table.replace-binary {
  padding: 45px 0 45px 25px;
}

table.manage-apps {
  padding: 31px 14px 0px 14px;
}

table.manage-apps td a {
    color:#0088CC;
}

table.app-details {
  padding-left:25px;
}

.status {
  font-weight:bold;
}

.status-icon {
  position:relative;
  top:3px;
}

/* END HEADER TEXT */

/* BEGIN TOP BLURB */

.big_blurb {
  font-size: 16px;
  color:#000000;
  padding: 30px 0 30px 0;
  text-align: center;
  color:#21262C;
  line-height:150%;
}

table.add_apps td.big_blurb {
  font-size: 16px;
  color:#000000;
}

/* END TOP BLURB */

/* BEGIN TABLE FORMATTING */

table.add_apps {
	width:700px;
	text-align: center;
	align:center;
	line-height:150%;
	padding:30px 0 0 0;
}

table.review-data {
	width:890;
	text-align: center;
	align:center;
	line-height:150%;
	padding:45px 0 45px 0;
}

table.pricing {
  padding:45px 0 45px 0;
}

table.contactus-table {
  padding-top:65px;
  padding-bottom:65px;
}

table.contactus-table td {
  padding-right:20px;
  width:20%;
}

table.review-data td.big_blurb {
  padding: 0;
}

table.add_apps td {
	padding: 0 0 30px 0;
}

table.add_apps td input, td select {
	width: 160px;
}

td.form_label {
	font-size: 14px;
}

table.add-lang {
  padding:10px 0 30px 0;
  width:890px;
}

table.export-comp {
  align:center;
  padding: 40px 0 50px;
}

table.export-comp td {
  padding-bottom: 25px;

}

table.export-comp-questions td {
  font-size:14px;
}

table.export-comp-radios td {
  padding-bottom:0px;
}

table.export-comp-questions td:last-child {
  font-size:12px;
}

table.meta-data tr#game-ratings td.big_blurb {
    font-size:15px;
    padding-top:0;
    text-align:left; 
}

table.meta-data tr#game-ratings td.big_blurb span a {
    font-size:12px;
    color:#0088CC;
}

table.add-rating {
  padding:40px 0 40px 35px;
}

table.meta-data tr td div#ratings-image {
    padding-top:175px;
}

table.add-rating td.heading {
  font-size:14px;
  text-align:center;
  font-weight:bold;
  padding-bottom:10px;
  border-bottom:1px solid #c7c7c7;
}

table.add-rating td.mapping {
  font-size:14px;
  text-align:center;
  padding-top:10px;
}

table.edit-app {
  padding:10px 0 65px 0;
}

table.edit-app td {
  max-width:500px;
}

table.edit-app td.heading {
  font-size: 16px;
  color:#21262C;
  padding: 0 0 10px 0;
}

table.edit-app td.copy {
  padding: 0 0 15px 0;
}

table.codes-table, table.manage-users-main {
  width: 750px;
}

table.codes-table td.header {
  background-image:url('/images/labelconnect/rounded-bg.gif');
  font-weight:bold;
}

table.manage-users-main td.header {
 background-image:url('/images/labelconnect/rounded-bg-manage-users.gif');
 font-weight:bold;
}

table.manage-users-main td.hr {
 background-image:url('/images/labelconnect/manage-users-header-hr.gif');
 background-repeat:repeat-x;
 width:1px;
 height:2px;
}

table.manage-users-main {
 padding-top:35px;
 padding-bottom:95px;
}

table.manage-users-header {
 padding-left:5px;
}

table.manage-users-header td.header-top {
	font-size:14px;
	padding-bottom:5px;

}

table.manage-users-header td.header-bottom {
	padding-top:5px;
	font-weight:bold;
}

table.manage-users-main td.content {
	padding: 10px 0 8px 5px;
}

table.manage-users-main td.bottom-row{
  border-left:1px solid #d2d5dd;
  border-right:1px solid #d2d5dd;
  border-bottom:1px solid #d2d5dd;
}

table.codes-table td.bottom-row{
  border-left:1px solid #d2d5dd;
  border-right:1px solid #d2d5dd;
  border-bottom:1px solid #d2d5dd;
}

table.manage-users-main tr.row-borders.even {
  background-color: #eff1f4;
}

div#personal-details {
  margin-top:60px;
}

div#personal-details fieldset ul {
  list-style:none;
  margin:0;
  padding:0;
  margin-left:30px;
}

div#personal-details fieldset ul li div#note {
  font-size:12px;
  color:#666666;
}

/* END TABLE FORMATTING */

/* BEGIN FORM LABELS/FIELDS */

td.metadata-label {
    text-align:right;
    vertical-align:top;
    font-size: 14px;
    font-weight:bold;
    padding:10px 0 10px 0;
    width:290px;
    color:#2A323A;
}

td.metadata-field {
    padding:10px 0 10px 0;
    text-align:left;
    vertical-align:top;
    width:350px;
}

td.metadata-field-code {
    padding:10px 0 0px 0;
    text-align:left;
    vertical-align:top;
    width:150px;
}

td.metadata-field-details-label {
    padding:0px 0 8px 0;
    text-align:right;
    vertical-align:middle;
    font-weight: normal;
    font-size:14px;
    color:#45535e;
    width:50%;
}

td.metadata-field-details-name {
    padding:0px 0 8px 0;
    text-align:left;
    vertical-align:middle;
    font-weight: normal;
    font-size:12px;
    color:#000000;
    width:50%;
}

.hr-padding {
    padding: 10px 0 10px;
}

table.pricing td.metadata-field, table.add-lang td.metadata-field {
    padding-bottom:10px;
    padding-top:10px;
    text-align:left;
    vertical-align:top;
    width:350px;
}

table.add-lang td.metadata-label {
    padding-bottom:10px;
    padding-top:10px;
    text-align:right;
    vertical-align:top;
}

table.meta-data td.default-lang {
    padding-bottom:5px;
}

td.metadata-field input, td.metadata-field textarea, td.metadata-field select {
    width:350px;
}

td.metadata-field-code input, td.metadata-field-code textarea, td.metadata-field-code select {
    width:150px;
}

table.pricing td.metadata-field select {
    width:75px;
}

table.pricing td.priceTier select {
    width:233px;
}

table.pricing td a {
    color:#0088CC;
}

table.pricing td p {
    font-size:11px;
}

table.add-lang td.metadata-field select {
    width:155px;
}

table.review-data td.metadata-field select {
    width:122px;
}

table.review-data td.hr {
    padding-bottom:8px;
    padding-top:8px;
}

td.help_icon {
	vertical-align:top;
	width:250px;
	margin:0;
	z-index:9999;
}

td.help_icon a.info {
  margin-top: 10px;
  margin-left: 10px;
}

table.pricing td.price-matrix-footnotes {
    padding: 10px 0 20px;
}

.form-note {
  color:#666666;
  padding:10px 0 0 0;
  font-size:12px;
}

/* END FORM LABELS/FIELDS */

/* BEGIN INFO LINKS */

div#uploadArea div.header {
  display: block;
}

div#uploadArea div.header div.title {
  float:left;
}

div#uploadArea div.header div.title h1 {
  margin-top: 8px;
  margin-bottom: 8px;
}

div#uploadArea div.header div.info {
  margin:5px 0 0 5px;
  padding:0;
  float:left;
}

a.info {
    background:url(/images/labelconnect/icon-help.png) no-repeat 0px 0px;
    width:20px;
    height:20px;
    display:block;
    position:relative;
    z-index:9999;
}

a.info:hover {
    background:url(/images/labelconnect/icon-help.png) no-repeat 0px -20px;
    width:20px;
    height:20px;
    position:relative;
    z-index:9999;
}

a div.close-tool-tip {
    background:url(/images/labelconnect/close-loc-subnav.png) no-repeat 0px -11px;
    display:block;
    width:11px;
    height:11px;
    float:right;
    position:relative;
    top:-5px;
    z-index:9999;
}

/* END INFO LINKS */

/* BEGIN NEW TOOL TIP */

.div-element {
    position:relative;
	  width:295px;
	  margin:0;
	  padding:0;
	  left:23px;
	  top:-25px;
	  z-index:9999;
	}

.div-element1 {
    position:relative;
	  width:295px;
	  margin:0;
	  padding:0;
	  left:23px;
	  top:-25px;
	  z-index:9999;
	}

.tool-tip-beak {
	  background:url(/images/labelconnect/beak.png) top left no-repeat;
	  margin:0;
	  width:21px;
	  height:37px;
	  position:absolute;
	  left:-3px;
	  top:20px;
	  z-index:9999;
	}


.tool-tip-top {
	  height:21px;
	  background:url(/images/labelconnect/tip_top.png) top no-repeat;
	  z-index:9999;
	  margin-left:-1px;
	}

.tool-tip-main {
	  margin: 0 10px 0 10px;
	  padding:0px 0 10px;
	  background:url(/images/labelconnect/main_bg.png) repeat-y;
	  z-index:9999;
	}

.tool-tip-bottom {
	  height:18px;
	  margin:0;
	  background:url(/images/labelconnect/tip_bottom.png) top no-repeat;
	  z-index:9999;
	  margin-left:-1px;
	 }

/* END NEW TOOL TIP */

/* New Tooltip */

.tooltip .top {
	  position: absolute;
	  top: 0px;
    height:25px;
    width:294px;
	  background:url(/images/labelconnect/tool-tip-bg.png) no-repeat 0px 0px;
}

.tooltip .leftSideRepeat {
	  position: absolute;
	  top: 25px;
	  height: 20px;
	  width: 30px;
    background: url(/images/labelconnect/tooltipRepeat.png) repeat-y 0px 0px;
}

.tooltip .tab {
	  position: absolute;
	  top: 45px;
	  height: 35px;
	  width: 30px;
    background: url(/images/labelconnect/tooltipTab.png) repeat-y 0px 0px;
}

.tooltip .leftSideRepeatB {
	  position: absolute;
	  top: 80px;
	  bottom: 25px;
	  width: 30px;
    background: url(/images/labelconnect/tooltipRepeat.png) repeat-y 0px 0px;
}


.tooltip .text {
	  position: absolute;
	  top: 25px;
	  bottom: 25px;
	  left: 30px;
	  right: 0px;
	  padding-left: 10px;
	  padding-right: 30px;
	  color: black;
    background: url(/images/labelconnect/tooltipRepeat.png) repeat-y -30px 0px;
    clear:both;
}

.tooltip .bottom {
    position: absolute;
    bottom: 0px;
    height: 25px;
    width: 294px;
    background: url(/images/labelconnect/tool-tip-bg.png) no-repeat 0px -125px;
}

/* BEGIN LANGUAGE LISTS */

table.lang-list {
    text-align:left;
    width:100%;
    padding:0;
    margin:0;
    background:url(/images/labelconnect/lang-tab-bg.gif) repeat 0px 0px;
}

table.lang-list td {
    border-bottom:1px solid #D9D9D9;
    padding:5px 0 5px 10px;
    margin:0;
    background: url(/images/labelconnect/lang-list-separator.gif) no-repeat center right;
}

table.lang-list td:last-child {
    background: url() no-repeat 0px 0px;
}

/* END LANGUAGE LISTS */

/* BEGIN REMOVE LANGUAGE X */

a.remove-lang {
    background:url(/images/labelconnect/close-loc-subnav.png) no-repeat 0px -11px;
    width:11px;
    height:11px;
    display:block;
    float:left;
    margin: 2px 10px 0 0;
}

a.remove-lang:hover {
    background:url(/images/labelconnect/close-loc-subnav.png) no-repeat 0px 0px;
}

/* END REMOVE LANGUAGE X */

/* BEGIN TABS */

table.nav {
    height:30px;
    border-collapse:collapse;
    padding:0px;
    font-size: 14px;
    font-weight: bold;
    margin-top:1px;
    background: #fff url(/images/labelconnect/lc_tab_bg.png) top repeat-x;
 }

/*table.nav ul {
    list-style:none;
    margin:0;
    padding:0;
}*/

table.nav td {
    padding:0;
}

table.nav div {
    height:30px;
    line-height:30px;
    font-size:14px;
    text-align: center;
    padding:0;
    margin:0;
    /*border: 1px solid #c0c0c0;*/
    border-bottom-width:0px;
}

table.nav div:first-child, table.nav div.tab:last-child {
    border-left-width: 0px;
}

table.nav div.currentNav {
    color: #36424a;
    background-color: white;
    border:1px solid #c0c0c0;
    border-bottom:1px solid #fff;
    border-left-width: 0px !important;
    border-right-width: 1px !important;
    -moz-border-radius:3px 3px 0 0;
    -webkit-border-top-left-radius:3px;
    -webkit-border-top-right-radius:3px;
}

table.nav div.availableNav a:link {
    color: #46515a;
    display:block;
    border-right:1px solid #C0C0C0;
}

table.nav div.availableNav {
    color: #46515a;
    background:#fff url(/images/labelconnect/lc_tab_bg.png) top repeat-x;
    border-bottom:1px solid #c0c0c0;
}

table.nav div.notAvailableNav {
    color:#cccccc;
    border-bottom:1px solid #c0c0c0;
    background:#fff url(/images/labelconnect/lc_tab_bg.png) top repeat-x;
}

div.notAvailableNav-hide {
    color:#cccccc;
    border-bottom:1px solid #c0c0c0;
    background:#fff url(/images/labelconnect/lc_tab_bg.png) top repeat-x;

}

/* END TABS */

.noPadding {
    padding:0px;
}

/****** Simple Notification Page ******/
div.simple-notification {
  margin: 38px 175px 43px;
  font-size: 13px;
  color: #2a3239;
  line-height: 18px;
}

div.simple-notification div.header {
  color:#21262c;
  font-size:16px;
  font-weight:normal;
  margin-bottom: 20px;
}

/* File Uploading */

h1 {
	font-family: "Lucida Grande", Arial;
	font-weight: bold;
	font-size: 13px;
	color: #4a5a66;
}

h2 {
	font-size: 12px;
	color: black;
	margin-top: 10px;
	margin-bottom: 10px;
}

a.previewLink {
  cursor: pointer;
  color:  #3366cc;
}

div#uploadArea div.button, div.old_image_upload_component div.button, div.image_upload_component div.button {
	background-color: white;
	overflow: hidden;
	width: 97px;
	height: 23px;
	cursor: pointer;
	position: absolute;
	left: 0px;
	top: 0px;
	background-image: URL('/images/labelconnect/btn-choose-file.png');
}

div#uploadArea div.uploadButton, div.old_image_upload_component div.uploadButton, div.image_upload_component div.uploadButton {
	width: 80px;
	height: 21px;
	display: none;
	background-image: URL('/images/labelconnect/btn-upload.gif');
}

input.file.hidden {
	position: absolute;
	margin: 0;
	top: 0;
	right: 0;
	font-size: 25px;
	left: -80px;
	bottom: 0;
	text-align: center;

	-moz-opacity:0;
	filter:alpha(opacity: 0);
	opacity: 0;
	z-index: 2;
	cursor: pointer;
}

input.file.lessHidden {
	-moz-opacity:0;
	filter:alpha(opacity: 0);
	opacity: 0;
}

#assetUploadScreen #uploadArea {
	display: block;
	float: left;
	width: 379px;
	height: 240px;
}


#localizationScreen #uploadArea {
	display: block;
	width: 379px;
}

.fileSize {
	font-family: "Lucida Grande", Arial;
	font-size: 11px;
	color: #666666;
}

#assetUploadScreen #uploadArea table tr td h2#primaryScreenshot-itemName {
    width:340px;
    text-overflow: ellipsis;
	word-break: none;
	overflow: hidden;
}

/* Pricing Matrix */

.pricingMatrix {
	border: 2px solid #cdcbcb;
	margin-bottom: 20px;
}

.pricingMatrix td {
	font-size: 12px;
	border: 1px solid #cdcbcb;
	text-align: center;
	color: #475867;
}

.pricingMatrix td.title {
	font-weight: bold;
	text-align: right;
}

.pricingMatrix .value {
	display: inline;
}


/* Game Subcategories */

.game-category-indent {
  border-collapse:collapse;
  position:relative;
  right:-15px
}

#sub-game-category {
  width:335px;
}


/* NEW LC STYLES (MR) */

div#LCPurpleSoftwarePageWrapperErrorMessage {
  margin:10px 0;
}

.clear {
  clear:both;
  height:0;
  font-size:0;
  line-height:0;
  margin:0;
  padding:0;
}

.clearr {
  clear:right;
  height:0px;
  font-size:0px;
  line-height:0px;
  margin:0;
  padding:0;
}

.clearl {
  clear:left;
  height:0px;
  font-size:0px;
  line-height:0px;
  margin:0;
  padding:0;
}

table.lcbox {
  width:100%;
  margin-bottom:7px;
  border:none;
}

p.instruct_text {
  font-size: 16px;
  padding: 21px 0 9px;
  text-align: center;
  color:#2b333a;
  line-height:150%;
}

/**********Choose Media*********/

table.chooseMedia {
  margin:60px auto;
  text-align:left;
}

table.chooseMedia td {
  padding:0 35px;
}

table.chooseMedia img {
  margin-bottom:5px;
}

table.chooseMedia a {
  font-size:16px;
  color:#2b333a;
}

/**********Search Page**********/

div.recentTile {
  float:left;
  width:113px;
  margin:10px 3px;
  text-align:center;
}

div.movieImage img, div.movieImage {
  width:69px;
  height:100px;
  min-height:100px;
  border:none;
  margin: 0 auto 0;
}

div.movieTitle {
  margin:5px 0 0;
  overflow: hidden;
  text-overflow: ellipsis;  
}

div.movieTitle a {
  color:#000;
}

h2.searchHeading {
  border-bottom:1px solid #e5e5e5;
  line-height:30px;
  font-size:16px;
  font-weight:normal;
  color:#265984;
  margin:0 0 10px;
  padding:1px 10px;
}

div.searchHeading {
  border-bottom:1px solid #e5e5e5;
  line-height:30px;
  font-size:16px;
  font-weight:normal;
  color:#265984;
  margin:0 0 10px;
  padding:1px 10px;
  min-height: 30px;
}

div.searchHeading div.searchHeader {
  font-size:16px;
  float: left;
}

div.searchHeading div.seeAll {
  font-size:13px;
  float: right;
  vertical-align: middle;
}

div.searchHeading div.seeAll a img {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
  position: relative;
  top: 1px;
}

div#titleSearch {
  padding:0 10px;
}

div#titleSearch input, div#titleSearch select {
  width:150px;
}

div#titleSearch input[type="submit"] {
  width:100px;
}

table.searchMultiple {
  margin:0 10px 10px;
}

/**********Film Init Page**********/

#addFilmPage {
  margin-top:36px;
  margin-bottom:50px;
  text-align:center;
}

#addFilmPage fieldset {
  width:468px;
  margin:0 auto 103px;
  text-align:right;
}

#addFilmPage label {
  font-size:14px;
  font-weight:bold;
  color:#2b333a;
}

#addFilmPage div.label {
  font-size:14px;
  font-weight:bold;
  color:#2b333a;
  float: left;
  text-align: right;
  width: 105px;
  line-height: 21px;
  vertical-align: middle;
}

#addFilmPage li {
  padding: 0;
  margin: 0;
  height: 23px;
  vertical-align: middle;
}


/**********Edit Metadata**********/

div.metadataSection {
  margin:0 0 30px;
}

div.metadataSection li {
  margin:0 0 0;
  text-align:left;
  display: list-item;
  clear: both;
}

div.metadataSection li hr {
  margin-bottom: 20px;
}

div.metadataSection fieldset {
  margin:0 auto;
}

div.metadataSection fieldset span.temporary_alert {
  font-size: 12px;
}

div.metadataSection label, div.metadataSection fieldset label {
  display:block;
  float:left;
  width:316px;
  font-size:14px;
  color:#2b333a;
  text-align:right;
  margin-right: 5px;
  margin-bottom: 20px;
}

div.metadataSection label.req {
  font-weight:bold;
}

label.req {
  font-weight:bold;
}

div.metadataSection .label {
  float:left;
  width:316px;
  font-size:14px;
  color:#2b333a;
  text-align:right;
}

div.metadataSection .req {
  font-weight: bold;
}

div.metadataSection input[type=text], div.metadataSection select, div.metadataSection textarea {
  width:350px;
  margin: 0;
  padding: 0;
}

div.metadataSection fieldset .field {
  font-size: 14px;
  vertical-align: middle;
  display: inline;
  margin-bottom: 20px;
}

/** hack for tables next to floating labels in IE **/
div.metadataSection div.control-matrix-field {
  display: block;
}

div.metadataSection div.control-matrix-field table {
  display: inline;
}


/****** Film Metadata ******/

div#film-master-details-poster p {
  color: #2b333a;
}

div.castCrewGrid {
  width:800px;
  margin:0 auto 45px;
  border:1px solid #dadde4;
  -moz-border-radius:3px 3px 0 0;
  -webkit-border-top-left-radius:3px;
  -webkit-border-top-right-radius:3px;
}

div.castCrewHead {
  background:#b4bdcb url('/images/labelconnect/cast-headerbg.png') top repeat-x;
  height:28px;
  text-align:left;
}

ul#castList, ul#crewList {
  list-style:none;
  margin:0;
  padding:0;
}

ul#castList li, ul#crewList li {
  border-bottom:1px solid #eee;
  padding:0 0 4px;
  margin:0px;
  height: 24px;
}

ul#castList li.editable, ul#crewList li.editable {
  padding:8px 0 8px;
  height: 24px;
}

ul#castList li.editable:hover, ul#crewList li.editable:hover {
  background-color:#f5f9fc;
  cursor:move;
}

ul#castList li:last-child, ul#crewList li:last-child {
  border-bottom:none;
}

div.cc_col1, div.cc_col2, div.cc_col3, div.cc_col4 {
  float:left;
  color:#45535e;
  font-weight:bold;
  line-height:28px;
  text-align:left;
  text-shadow: 1px 1px 0px #ccc;
}

div.cc_col1, div.cc_col3 {
  width:355px;
  padding:0px 3px;
}

div.metadataSection div.castCrewGrid div.cc_col1 input,div.metadataSection div.castCrewGrid  div.cc_col3 input {
  margin:3px 3px;
}

div.metadataSection div.castCrewGrid  div.cc_col3 select {
  margin: 2px 0 0 4px;
}

div.cc_col2 {
  width:9px;
  margin:5px 0px 0 3px;
}

div.cc_col4 {
  padding:0 5px;
}

div.cc_col4 input {
  margin:3px 3px 0 0;
}

div.cc_col4 input:hover {
  cursor: pointer;
}

ul#castList li img.dragHandle, ul#crewList li img.dragHandle {
  margin:0px 0px 0px 1px;
}

input.hint {
  color: #9c9c9c;
}

/**********Form Matrix Box******/

div.formMatrix {
  display: block;
}

div.formMatrixGrid {
  width:auto;
  margin:0 auto 45px;
  border:1px solid #dadde4;
  background-color: #fafafa;
  -moz-border-radius:5px 5px 5px 5px;
  -webkit-border-top-left-radius:5px;
  -webkit-border-top-right-radius:5px;
  -webkit-border-bottom-left-radius:5px;
  -webkit-border-bottom-right-radius:5px;
  display: table;
}

div.formMatrixHeader {
  background:#b4bdcb url('/images/labelconnect/boxstyles/default/matrix-head-bg_44.png') top repeat-x;
  height:44px;
  color:#2a333a;
  font-size: 11px;
  font-weight:bold;
  word-wrap: break-word;
  text-shadow: #fff 0 1px 0;
  margin: 0;
  overflow: hidden;
  padding: 0;
}

div.formMatrixHeader div {
  height: 44px;
  vertical-align: bottom;
  margin: 0;
  padding: 0;

}

div.formMatrixHeader p {
  color:#2a333a;
  font-size: 11px;
  font-weight:bold;
  word-wrap: break-word;
  text-shadow: #fff 0 1px 0;
  overflow: hidden;
  vertical-align: bottom;
  margin: 0;
  padding: 1px 1px 0 1px;
}

div.formMatrixHeader div.single_line_header p {
	padding-top: 26px;
}

div.formMatrixHeader div.double_line_header p {
	padding-top: 13px;
}

div.formMatrixGrid ul {
  margin: 0;
  padding: 0;
  margin-bottom: 9px;
}

div.formMatrixGrid ul.last {
  margin-bottom: 0px;
}

div.formMatrixGrid ul li {
  list-style: none;
  margin: 0;
  padding: 0;
  color:#2a333a;
  font-size: 13px;
  font-weight:bold;
  text-shadow: #fff 0 1px 0;
  height: 50px;
  line-height: 50px;
  vertical-align: middle;
}

div.formMatrixGrid ul li div {
  margin: 0;
  height: 50px;
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-default-bg.png') top repeat-x;
}

div.formMatrixGrid ui li div.checkboxCol {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-default-cbbg.png') top no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.hover {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-rollover-cbbg.png') top no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.pressed {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-pressed-cbbg.png') bottom no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.selected {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-selected-cbbg.png') top no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.selected.hover {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-pressed-cbbg.png') bottom no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.selected.hover.pressed {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-pressed-cbbg.png') bottom no-repeat;
}

div.formMatrixGrid ui li div.checkboxCol.wide {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-default-cbbg-wide.png') top no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.wide.hover {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-rollover-cbbg-wide.png') top no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.wide.pressed {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-pressed-cbbg-wide.png') bottom no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.wide.selected {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-selected-cbbg-wide.png') top no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.wide.selected.hover {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-pressed-cbbg-wide.png') bottom no-repeat;
}

div.formMatrixGrid ul li div.checkboxCol.wide.selected.hover.pressed {
  background: #e8e8e8 url('/images/labelconnect/boxstyles/default/checkboxMatrix-pressed-cbbg-wide.png') bottom no-repeat;
}

div.formMatrixGrid ul li div input {
  margin: 18px 0px;
}

div.formMatrixGrid div.labelCol {
  float: left;
  text-align:left;
  width: 145px;
  padding: 0 5px 0 12px;
}

div.formMatrixGrid div.checkboxCol {
  float: left;
  text-align:center;
  width: 82px;
  margin-left: 2px;
}

div.formMatrixGrid div.checkboxCol.wide {
  width: 108px;
}

div.formMatrixGrid div.checkboxCol.all {
  float: left;
  text-align:center;
  width: 82px;
  margin-left: 2px;
  margin-right: 8px;
}

div.formMatrixGrid div.checkboxCol.all.wide {
  width: 108px;
}

div.formMatrixGrid ul.last li.last div.labelCol {
  -moz-border-radius-bottomleft:5px;
  -webkit-border-bottom-left-radius:5px;
}

div.formMatrixGrid ul.last li.last div.checkboxCol.last {
  -moz-border-radius-bottomright:5px;
  -webkit-border-bottom-right-radius:5px;
}

div.formMatrix div.footnote {
  margin: 13px auto 76px;
  font-size: 11px;
  display: block;
  position: relative;
  text-align: left;
}


/**********Territories**********/

div#addTerritorySection {
  margin:20px 0;
  text-align:center;
}

h2.countryHeading {
  font-size:16px;
  font-weight:normal;
  color:#0063be;
  margin:0px;
  padding-bottom:5px;
}

table.territorySection {
  margin:10px 0;
}

table.territorySection td {
  margin:0;
  padding-left:15px;
}

tr.territoryHead td {
  border:1px solid #e8e8e8;
  border-width:1px 0px;
  height:32px;
  font-weight:bold;
}

td.territoryCountryPick {
  padding:10px 0 15px;
  text-align:center;
}

table.territorySection textarea {
  width:170px;
}

/**********Summary**********/

#filmSummary {
  margin-top:35px;
}

#filmSpecs {
  margin-bottom:35px;
}

#filmSummary h2, #filmSummary h3, #filmSummary h4, #filmSummary span {
  font-family:Lucida Grande,Geneva,Verdana,Arial !important;
}

#filmSpecs td {
  font-size:12px;
  font-weight:bold;
  color:#777;
}

#filmSpecs td.summaryLabel {
  width:210px;
  text-align:right;
}

#filmSpecs td.summaryField {
  width:180px;
}

#filmPreview {
  margin:20px 40px 30px;
  padding:35px;
  -moz-border-radius:10px;
  -webkit-border-radius:10px;
}

#filmPreview img {
  float:left;
}

#previewLockup {
  float:left;
  margin-left:5px;
}

#filmPreview h2#title {
  font-size:18px;
  color:#f1f2f2;
  margin:0;
  font-weight:normal;
}

#filmPreview h3#studio {
  font-size:16px;
  color:#7aa0cc;
  margin:0;
  font-weight:normal;
}

#filmPreview h4.sectionHead {
  font-size:18px;
  color:#7aa0cc;
  margin-bottom:5px;
  font-weight:normal;
}

#filmPreview span.previewText {
  font-size:12px;
  color:#f1f2f2;
}

div.creditColumn {
  float:left;
  width:25%;
}

div.creditColumn div.second {
  margin-top: 20px;
}

/*- - - - - Promo codes CSS - - - - -*/

.codeString {
  display:none;
}

/*- - - - - Manage Users - Roles - - - - -*/

.roles-header p {
	font-size: 16px;
  	color:#000000;
  	padding: 20px 0 0px 0;
  	text-align: center;
  	color:#21262C;
  	line-height:150%;
}

.roles-main {
	padding: 33px 0 0 30px;
}

.roles-main .module {
	float: left;
}

.roles-main .module ul.label-list {
	list-style-type: none;
	text-align: right;
	padding: 23px 20px 0 0;
	margin: 0;
}

.roles-main .module ul.label-list li.label-names {
	list-style-type: none;
	padding: 0 0 30px 0;
	font-weight: bold;
}

.roles-container {
	height: 645px;
}

.tl {
	background-image: url(/images/labelconnect/roles_top_left.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 8px;
	height: 7px;
	float: left;
}

.tm {
	background-image: url(/images/labelconnect/roles_top_border.png);
	background-repeat: repeat-x;
	background-position: 0 0;
	width: 112px;
	height: 7px;
	float: left;

}

.tr {
	background-image: url(/images/labelconnect/roles_top_right.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 8px;
	height: 7px;
	float: left;
}

.ml {
	background-image: url(/images/labelconnect/roles_1px_border.png);
	background-repeat: repeat-y;
	background-position: 0 0;
	width: 1px;
	height: 100%;
	float: left;
}

.mm {
	background-color:#f7f8f9;
	width: 126px;
	height: 100%;
	float:left;
}

.mr {
	background-image: url(/images/labelconnect/roles_1px_border.png);
	background-repeat: repeat-y;
	background-position: 0 0;
	width: 1px;
	height: 100%;
	float: left;
}

.bl {
	background-image: url(/images/labelconnect/roles_bottom_left.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 8px;
	height: 7px;
	float: left;
}

.bm {
	background-image: url(/images/labelconnect/roles_bottom_border.png);
	background-repeat: repeat-x;
	background-position: 0 0;
	width: 112px;
	height: 7px;
	float: left;

}

.br {
	background-image: url(/images/labelconnect/roles_bottom_right.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 8px;
	height: 7px;
	float: left;
}

.roles-select {
  background-image: url(/images/labelconnect/roles_select_check_bg.png);
  background-repeat: no-repeat;
  background-position: 0 0;
  width: 104px;
  height: 49px;
  float: left;
  margin: 0 0 0 6px;
  padding:15px 0 0 10px;
}

.roles-select.hover {
  background-image: url(/images/labelconnect/roles_select_check_bg_rollover.png);
}

.roles-select.hover p {
  color: #fff;
  text-shadow: #fff 0 0 0 ;
}

.roles-select.pressed {
  background-image: url(/images/labelconnect/roles_select_check_bg_pressed.png);
}

.roles-select.pressed p {
  color: #fff;
  text-shadow: #fff 0 0 0;
}

.roles-select.disabled  {
  background-image: url(/images/labelconnect/roles_select_check_bg_disabled.png);
}

.roles-select.disabled p {
  color: #999;
  text-shadow: #999 0 0 0;
}

.roles-select.selected {
  background-image: url('/images/labelconnect/roles_select_check_bg_selected.png');
}

.roles-select.selected p {
  color: #36424a;
  text-shadow: #fff 0 1px 0;
}

.roles-select.selected.hover {
  background-image: url('/images/labelconnect/roles_select_check_bg_pressed.png');
}

.roles-select.selected.hover p {
  color: #fff;
  text-shadow: #fff 0 0 0;
}

.roles-select.selected.hover.pressed {
  background-image: url('/images/labelconnect/roles_select_check_bg_pressed.png');
}

.roles-select p {
  margin: 0;
  padding: 0;
  font-weight: bold;
  text-align: left;
  color: #36424a;
  text-shadow: #fff 0 1px 0;
}

.cb-container {
	position: relative;
	margin: 81px 0 0 0;
  width: 112px;
	height: 534px;

}

.cb-tl {
	background-image: url(/images/labelconnect/cb_tl.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 6px;
	height: 6px;
	float: left;
}

.cb-tm {
	background-image: url(/images/labelconnect/cb_top_border.png);
	background-repeat: repeat-x;
	background-position: 0 0;
	width: 100px;
	height: 6px;
	float: left;

}

.cb-tr {
	background-image: url(/images/labelconnect/cb_tr.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 6px;
	height: 6px;
	float: left;
}

.cb-bl {
	background-image: url(/images/labelconnect/cb_bl.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 6px;
	height: 6px;
	float: left;
}

.cb-bm {
	background-image: url(/images/labelconnect/cb_bottom_border.png);
	background-repeat: repeat-x;
	background-position: 0 0;
	width: 100px;
	height: 6px;
	float: left;
}

.cb-br {
	background-image: url(/images/labelconnect/cb_br.png);
	background-repeat: no-repeat;
	background-position: 0 0;
	width: 6px;
	height: 6px;
	float: left;
}

.roles-cb {
	list-style-type: none;
	margin:0;
	padding:0;
}

.roles-cb li {
	border-bottom:1px solid #cfd5d6;
	text-align:center;
	padding:12px 0 7px 0;
}

.roles-cb li.blank {
	height: 25px;
}

.roles-cb li:first-child {
	padding:7px 0 7px 0;
}

.roles-cb li:last-child {
	border-bottom:0;
	padding:12px 0 5px 0;
}

.roles-bottom-notes {
	padding: 3px 0 67px 203px;
  text-align: left;
}

.roles-bottom-notes p {
	color: #313131;
	font-size: 11px;
  text-align: left;
}

.roles-bottom-notes p img {
	position: relative;
	top: 7px;
	right: 2px;
}

/****** Search Results List ******/

div.resultList-wrapper {
  display: block;
  margin:50px auto 45px;
  width: 750px;
  -moz-border-radius:5px 5px 5px 5px;
  -webkit-border-top-left-radius:5px;
  -webkit-border-top-right-radius:5px;
  -webkit-border-bottom-left-radius:5px;
  -webkit-border-bottom-right-radius:5px;
  border:1px solid #dadde4;

}

div.resultList-header {
  margin: 0;
  padding: 0 0 0 0;
  background:#9ca4b7 url('/images/labelconnect/boxstyles/default/matrix-head-bg_60.png') top repeat-x;
  /*height:44px;*/
  width: 750px;
  color:#45535e;
  font-weight:bold;
  font-family: "Lucida Grande", Verdana, Arial, sans-serif;
  text-shadow: rgba(255,255,255,0.4) 0 1px 0;
  overflow: hidden;
  -moz-border-radius:5px 5px 0 0;
  -webkit-border-top-left-radius:5px;
  -webkit-border-top-right-radius:5px;
}

div.resultList-header a {
  display: block;
}

div.resultList-header div.title {
  margin:10px 13px 0 13px;
  padding: 0 0px 0 0px;
  font-size: 14px;
  text-align: left;
}

div.resultList-header div.seperator {
  height: 2px;
  margin: 7px 0 0 0;
  padding: 0;
  background: url('/images/labelconnect/boxstyles/default/resultList-head-seperator.gif') top repeat-x;
}

div.resultList tr.column-headers {
  padding: 0;
  background: #9ca4b7 url('/images/labelconnect/boxstyles/default/matrix-head-bg_60.png') bottom repeat-x;
}

div.resultList tr.column-headers div {
  float: left;
  font-size: 12px;
  border-right: 1px solid #b7bfcc;
  vertical-align: bottom;
  text-shadow: 0px 1px 0px #d4d8e0;  
}

div.resultList tr.column-headers div p {
  padding: 0px 0px 0px 0px;
  margin: 6px 5px 5px 13px;
  color: #45535e;
  vertical-align: bottom;
  text-overflow: ellipsis;
  overflow: hidden;
  text-align: left;
  position:relative;
}

div.resultList tr.column-headers th {
  vertical-align: bottom;
}

div.resultList tr.column-headers div.sorted {
  background: url('/images/labelconnect/boxstyles/default/matrix-head-selected-bg_60.png') bottom repeat-x;
}

div.resultList tr.column-headers img {
  right:0;
  margin:1px 1px 0 0;
  position: absolute;
}

div.resultList {
  margin: 0;
  padding: 0;
}

div.resultList tr {
  margin: 0;
  padding: 0;
  height: auto;
}

div.resultList td {
  vertical-align: middle;
  border-right: 1px solid #e7e9ed;
}    

div.resultList td div p {
  position:relative;
}

div.resultList td.last, div.resultList th.last {
  border-right: 0 none #fff;
}

div.resultList td div {
  font-size: 12px;
  min-height: 19px;
  /*vertical-align: middle;*/
  color: #45535e;
  overflow: hidden;
  padding: 4px 0 4px 0;
  /*border-right: 1px solid #e7e9ed;*/
  margin: 0;
}

div.resultList td div p {
  padding: 0 5px 0 13px;
  margin: 3px 0 0 0;
  color: #45535e;
  vertical-align: middle;
  text-overflow: ellipsis;
  overflow: hidden;
}

div.resultList td div p a {
  overflow: hidden;
  text-overflow: ellipsis;
}

div.resultList tr.odd {
  background-color: #eff1f4;
}

div.resultList td div a img, div.resultList td div img, div.resultList td div input[type=image] {
  margin: 0;
  padding: 0;
}

div.resultList tr.column-headers th div input {
  padding: 0 0 5px 0;
}

/**** Manage Users List *****/
div.resultList-wrapper div.userlist-col-0 {
  width: 138px;
}

div.resultList-wrapper div.userlist-col-0 p {
  width: 120px;
}

div.resultList-wrapper div.userlist-col-1 {
  width: 138px;
}

div.resultList-wrapper div.userlist-col-1 p {
  width: 120px;
}

div.resultList-wrapper div.userlist-col-2 {
  width: 246px;
}

div.resultList-wrapper div.userlist-col-2 p {
  width: 228px;
}

div.resultList-wrapper div.userlist-col-3 {
  width: 112px;
}

div.resultList-wrapper div.userlist-col-3 p {
  width: 94px;
}

div.resultList-wrapper div.userlist-col-4 {
  width: 112px;
  text-align: center;
  border-right: 0 none #fff;
}

div.resultList tr.column-headers div.userlist-col-4 {
  border-right: 0 none #fff;
}

/*div.resultList-wrapper div.userlist-role-col div, div.resultList-wrapper div.userlist-role-col p {
  padding-left:5px
}*/

/**** Episode List ****/
div.resultList div.episodelist-col-0 {
  width: 32px;
  text-align: right;
}

div.resultList tr div.episodelist-col-0 p {
  text-align: right;
  padding-left: 4px;
}

div.resultList tr div.episodelist-col-1 {
  width: 219px;
}

div.resultList tr div.episodelist-col-1 p {
}

div.resultList tr div.episodelist-col-2 {
  width: 110px;
  text-align: center;
}

div.resultList tr div.episodelist-col-2 p {
  margin: 6px auto 5px;
  text-align: center;
}

div.resultList tr div.episodelist-col-3 {
  width: 198px;
  text-align: center;
}

div.resultList tr div.episodelist-col-3 p {
  margin: 6px auto 5px;
  text-align: center;
  padding:0;  
}

div.resultList tr div.episodelist-col-4, div.resultList tr div.episodelist-col-5, div.resultList tr div.episodelist-col-6 {
  width: 80px;
  text-align: center;
}

div.resultList tr div.episodelist-col-5 img, div.resultList tr div.episodelist-col-6 img {
    position:relative;
    top:3px;
}

div.resultList tr div.episodelist-col-4 p, div.resultList tr div.episodelist-col-5 p, div.resultList tr div.episodelist-col-6 p {
  margin: 6px auto 5px;
  text-align: center;
}

div.resultList tr div.episodelist-col-7 {
  width: 114px;
  text-align: center;
  border-right: 0 none #fff;
}

div.resultList tr.column-headers div.episodelist-col-7 {
  border-right: 0 none #fff;
}

div#season-episodes-list div.resultList tr.column-headers div {
  border-right: 0 none #fff;
}


div#season-episodes-list div.resultList tr div {
  vertical-align: middle;
}

div#season-episodes-list div.resultList tr div p {
  /*padding: 0 5px 0 5px;*/
  vertical-align: middle;
}

div#season-episodes-list div.resultList tr.column-headers div p {
  /*margin: 6px 5px 5px 13px;*/
}

/**** Digital Copy Requests See All ****/

div.resultList-wrapper div.dcrequests-col-0 {
  width: 311px;
}

div.resultList-wrapper div.dcrequests-col-1 {
  width: 139px;
}

div.resultList-wrapper div.dcrequests-col-2 {
  width: 187px;
}

div.resultList-wrapper div.dcrequests-col-3 {
  width: 110px;
  text-align: center;
  border-right: 0 none #fff;
}

div.resultList tr.column-headers div.dcrequests-col-3 {
  border-right: 0 none #fff;
}

/****** Add Film Territories and Languages ******/

div.animated-blue-box {
  margin:0 auto 0;
  padding: 30px 0 15px 0;
  border:1px solid #cbd0d4;
  background-color: #f5f7fa;
  color: #36424a;
}

div.animated-blue-box p {
  color: #36424a;
}

div.animated-blue-box h2 {
  color: #36424a;
}

div.animated-blue-box div.box-buttons {
  text-align: right;
  margin: 0;
  vertical-align: bottom;
}

div.animated-blue-box div.box-buttons input {
  margin-left: 5px;
}

div.film_new_territory p.instruct_text {
  width: 600px;
}

div.film_new_territory div.territory_fields, div.film_edit_territory div.territory_fields {
  float: left;
  text-align: left;
  margin: 0 0 15px 0;
  width: 450px;
}

div.film_new_territory label, div.film_edit_territory label {
  font-family: 'Lucida Grande', Geneva, Verdana, Arial, sans-serif;
  font-size: 13px;
  color: #36424a;
}

div.film_new_territory label.req, div.film_edit_territory label.req {
  font-weight: bold;
}

div.territory_fields label {
  margin: 0 0 4px 0;
  padding: 0;
  display: block;
}

div.territory_fields p {
  margin: 0 0 26px 0;
  padding: 0;
}

div.territory_fields input[type=text] {
  width: 280px;
}

div#film-new-country-form div.animated-blue-box {
  width:868px;
  margin-bottom: 8px;
}

div#film-new-country-form div.box-buttons {
  width: 807px;
}


div.film_edit_territory {
  margin:30px 0 15px;
  padding: 0;
  color: #36424a;
}

div.film_edit_territory p {
  color: #36424a;
}

div.film_edit_territory h2 {
  color: #36424a;
}


div.grouping_header {
  height: 32px;
  background: #fff url('/images/labelconnect/grouping-header-bg.png') top repeat-x;
  border-bottom:1px solid #e7e7e7;
}

div.grouping_header h2 {
  font-size: 16px;
  color: #265984;
  padding: 8px 0 0 10px;
  margin: 0;
  text-shadow: 1px 1px 0 #fff;
  font-weight: 200;
}

div.grouping_header h2 input[type=image] {
  margin: 0 4px 0 0;
}

div.film_edit_territory div.box-buttons {
  width: 807px;
  text-align: right;
  margin: 0;
  vertical-align: bottom;
}


/****** Film Language ******/
div.film_new_language div.language_fields, div.film_edit_language div.language_fields, div.new_language div.language_fields, div.edit_language div.language_fields {
  float: left;
  text-align: left;
  margin: 0;
  width: 504px;
}

div.film_new_language label, div.film_edit_language label, div.new_language label, div.edit_language label {
  font-family: 'Lucida Grande', Geneva, Verdana, Arial, sans-serif;
  font-size: 12px;
  color: #36424a;
}

div.film_new_language label.req, div.film_edit_language label.req {
  font-weight: bold;
}

div.language_fields label {
  margin: 0;
  padding: 0;
}

div.language_fields div {
  display: block;
  margin: 0 5px 15px 0;
  padding: 0;
  font-family: 'Lucida Grande', Geneva, Verdana, Arial, sans-serif;
  font-size: 12px;
}

div.language_fields div.label {
  float: left;
  text-align: right;
  width: 120px;
}

div.language_fields div.field {
  float: left;
  text-align: left;
  width: 354px;
}

div.language_fields input[type=text] {
  width: 350px;
}

div.language_fields textarea {
  width: 354px;
  height: 203px;
  resize: none;
}

div#film-new-language-form div.animated-blue-box {
  width:530px;
  margin-bottom: 8px;
}

div#film-new-language-form div.box-buttons, div.new_language div.box-buttons {
  width: 405px;
  margin-top: 5px;
}

div.film_edit_language {
  margin:30px 0 15px;
  padding: 0;
  color: #36424a;
}

div.film_edit_language div.box-buttons {
  width: 405px;
  margin-top: 5px;
  text-align: right;
  vertical-align: bottom;
}

/****** Create Software AddOn ******/
div.new_language div.language_fields textarea, div.edit_language div.language_fields textarea {
  width: 354px;
  height: 83px;
  resize: none;
}


/****** Manage TV ******/

div ul.top-box-managetv {
  text-align: center;
  list-style-type: none;
  padding-left: 33px;
}

div ul.top-box-managetv li{
  text-align: center;
  float: left;
  width: 300px;
}

ul.manage-tv-date-matrix {
  list-style-type:none;
  width: 350px; /*200px*/
  /*display: inline;*/
  position: relative;
  /*left: 15px;*/
  padding:0;
  margin:0;
  float:left;
}

ul.manage-tv-date-matrix li {
  padding: 0 10px 0 10px;
  display: inline;
  width:30px;
  float:left;
  text-align:center;

}

ul.manage-tv-date-matrix li input {
  width:40px;
  float:left;
  text-align:center;
}

div.hour-minutes input, div.hour-minutes select {
  display:inline;
  width:50px;
}

div.tv-fields {
  width: 650px;
}

div.tv-fields div.label {
  width: 100px;
}

div.tv-fields div.label .req {
  font-weight: bold;
  font-size: 13px;
  color: #36424a;
}

div.tv-fields div.field {
  //width: 540px;
}

div.tv-buttons {
  width: 800px
}

div.tv-add-country-radio input  {
  width: 20px;
  position: relative;
  left: 1px;
}

/****** Content Flagging ******/

a.flag-rollover {
  background-image: url(/images/labelconnect/flag_link.png);
  width:16px;
  height:12px;
  display:block;
}

a.flag-rollover:hover {
  background-image: url(/images/labelconnect/flag_hover.png);
  width:16px;
  height:12px;
  display:block;
}

/******* Image Uploader  ********/

div.image_upload_component {
  float: left;
  text-align: right;
  margin: 0 0 15px;
}

div.image_upload_component div.image_upload_controls {
  width: 170px;
  text-align: left;
  float: left;
}

div.image_upload_component div.image_upload_preview {
  width: 180px;
  text-align: right;
  float: left;
}

div.image_upload_component div.image_upload_controls h2 {
  margin-top: 20px;
}

div.image_upload_component select {
  width: 160px;
}

div.image_upload_component p {
  margin: 0 0 5px 0;
  padding: 0;
}

div.image_upload_component div.image_upload_preview img {
  margin-top: 3px;
}

div.image_upload_component label.req {
  font-weight: bold;
}

div.image_upload_well {
	background: #fafafa;
}

div.image_upload_well div.top {
	background: url('/images/labelconnect/uploadimage/top.gif') repeat-x;
}

div.image_upload_well div.top div.left {
	background: url('/images/labelconnect/uploadimage/ltop.gif') no-repeat top left;
}

div.image_upload_well div.top div.right{
	background: url('/images/labelconnect/uploadimage/rtop.gif') no-repeat top right;
}

div.image_upload_well div.center.left {
	background: url('/images/labelconnect/uploadimage/lfill.gif') repeat-y left;
}

div.image_upload_well div.center div.right{
	background: url('/images/labelconnect/uploadimage/rfill.gif') repeat-y right;
}

div.image_upload_well div.bot {
	background: url('/images/labelconnect/uploadimage/bot.gif') repeat-x;
}

div.image_upload_well div.bot div.left {
	background: url('/images/labelconnect/uploadimage/lbot.gif') no-repeat bottom left;
}

div.image_upload_well div.bot div.right{
	background: url('/images/labelconnect/uploadimage/rbot.gif') no-repeat bottom right;
}


.image_upload_well .top, .image_upload_well .top .left,
.image_upload_well .top .right, .image_upload_well .bot,
.image_upload_well .bot .left, .image_upload_well .bot .right {
	width: 100%;
	height: 10px;
	font-size: 1px;
}

.image_upload_well .center.left, .image_upload_well .center .right {
	width: 100%;
	height: 100%;
	font-size: 8px;
}

.image_upload_well .content {
	padding: 7px auto;
  text-align:center;
  vertical-align:middle;
}

/******** Top Header Box (TV) ********/

div.top_box div {
	color: #36424a;
	border: 0px solid red;
}

div.top_box div.col1, div.top_box div.col2, div.top_box div.col3, div.top_box div.col4 {
	padding: 0;
	margin: 11px 0 8px 0;
	float: left;
}

div.top_box div.row {
	height: 20px;
	margin-top: 6px;
	vertical-align: middle;
	clear: both;
	display: block;
}

div.top_box div.label {
	font-size: 12px;
	text-align: right;
	float: left;
	font-weight: bold;
	margin-right: 4px;
	min-width: 50px;
	width: 100px;
}

div.top_box div.field {
	font-size: 12px;
	text-align: left;
	text-overflow: ellipsis;
	word-break: none;
	overflow: hidden;
	min-width: 120px;
    display:inline;
    float:left;
}

div.top_box div.col1 div.label {
	width: 80px;
}

div.top_box div.col2 div.label, div.col3 div.label, div.col4 div.label {
	width: 150px;
}

div.top_box div.col1 input[type=image], div.top_box div.col1 img {
	margin: -4px 0 0 22px;
}

div.top_box div.field input, div.top_box div.field select, div.top_box div.field textarea {
	margin-top: 0;
}

/******** Ticketing Badge ********/

div#ticketImage {
  background: url('/images/labelconnect/icon_tickets.png') no-repeat;
  width: 30px;
  height: 47px;
}

div#ticketBadge {
  position:relative;
  top:-52px;
  z-index:2;
  height:26px;
}

div#ticketBadge div#ticketCount {
  color:#ffffff;
  position:relative;
  top:4px;
  font-size:11px;
  font-weight:bold;
}

/******** Top Header Box (QC Status) ********/

div.top_box div.qc-list-container {
    float:left;
    width:750px;
    position:relative;
    top:17px;
    left:20px;
    padding:0;
    margin:0;
    *font-size:11px; /* IE Hack */
}

div.top_box div.qc-list-container ul {
    display:inline;
    padding:0;
    margin:0;
    text-align:center;
}

div.top_box div.qc-list-container ul li {
    display: block;
    float:left;
    padding:0 5px 13px 0;
    margin:0;
    min-width:235px;
    text-align:center;
}

/******** QCStatus ********/

div#QCStatus-Details {
  margin:30px 0 0 37px;
  padding:0;
  max-width:880px;
}

div#QCStatus-Details div.QC-sec {
  padding-bottom:10px;
  margin:0;
}

div#QCStatus-Details div.middle {
  margin-top:10px;
  padding:0;
}

div#QCStatus-Details div.middle div.left, div#QCStatus-Details div.middle div.center {
  min-width:33%;
  color:#45535e;   
}

div#QCStatus-Details div.middle div.left span.label-name, div#QCStatus-Details div.middle div.center span.label-name {
  color:#6e7c87;
}

div#QCStatus-Details div.middle div.center {
  min-width:34%;
  text-align:center;
}

div#QCStatus-Details div.middle div.right {
  min-width:33%;
  text-align:right;
}

div#QCStatus-Details div.QC-sec div {
  min-width:50%;
  float:left;
}

div#QCStatus-Details div.QC-sec div.status {
  font-size:14px;
  font-weight: normal;
}

div#QCStatus-Details div.QC-sec div.align-right {
  text-align:right;
}

div#QCStatus-Details div#border {
  border-bottom:1px solid #dbdfe3;
  margin-top:15px;
}

div#QCStatus-Details div.clip-notes {
  padding-top:20px;
  clear: both;
}

div#QCStatus-Details div#notes {
  padding-top:20px;
  clear:both;
}

div#QCStatus-Details div#notes ul {
  list-style-type:none;
  margin:10px 0;
  padding:0;
}

div#QCStatus-Details div#notes ul li {
  padding-bottom:5px;
}

div.currentNav span img, div.availableNav span img {
  float:left;
  position:relative;
  top:10px;
  left:5px;  
}

table.nav td.qcstatus-tab div {
  font-size:11px;  
}

div.QCHeading-border {
  border-bottom:1px solid #e5e5e5;
  clear:both;
  padding:0;
  margin:0;
}

h2.QCHeading {
  width:98%;
}

h2.QCHeading div.left {
  min-width:50%;
  float:left;
}

h2.QCHeading div.right {
  width:50%;
  float:left;
  text-align:right;
  font-size:13px;
}

h2.QCHeading div.right img {
  position:relative;
  top:1px
}

div.resultList-wrapper div.qcstat-va-col-0 {
  width:295px;
}

div.resultList-wrapper div.qcstat-va-col-1 {
  width:192px;
}

div.resultList-wrapper div.qcstat-va-col-2 {
  width:150px;
}

div.resultList-wrapper div.qcstat-va-col-3 {
  width:109px;
  text-align: center;
  border-right: 0 none #fff;  
}

div#qcstat-problem-list {
  margin-top:13px;
  margin-bottom:37px;  
}

div.resultList-wrapper div.qcstatproblems-col-0 {
  width:160px;
}

div.resultList-wrapper div.qcstatproblems-col-1 {
  width:226px;
}

div.resultList-wrapper div.qcstatproblems-col-2 {
  width:100px;
}

div.resultList-wrapper div.qcstatproblems-col-3 {
  width:260px;
  border-right: 0 none #fff;
}

/**** Digital Copy Downloads Page ****/
div.dcdownload {
	margin: 42px 0 52px 78px;
}

div.dcdownload .header {
	font-size: 16px;
	font-weight: bold;
	margin-bottom: 12px;
}

div.dcdownload .seperator {
	height: 1px;
	margin-right: 78px;
	background: #e2e5e9;
}

div.dcdownload div.request-details {
	height: 45px;
	color: #45535e;
	clear: both;
	margin: 12px 0 12px;
}

div.dcdownload div.asset-details {
	min-height: 225px;
	margin: 0;
}

div.dcdownload div.status {
	font-weight: normal;
}

div.dcdownload div.label {
	font-size: 12px;
}

div.dcdownload div.request-details div.col {
	width: 280px;
	height: 45px;
	display: block;
	float: left;
}

div.dcdownload div.request-details div.col div.label {
	color: #80888e;
	float: left;
}

div.dcdownload div.request-details div.col div.info {
	height: 45px;
	float: left;
	margin-left: 4px;
}


div.dcdownload div.asset-details div.art {
	float: left;
	margin: 0 48px 0 0;
	padding: 0;
}

div.dcdownload div.asset-details div.downloads {
	margin: 0;
	padding:0;
}

div.dcdownload div.asset-details div.downloads div.asset {
	padding-top:24px;
}

div.dcdownload div.asset-details div.downloads div.codes {
	margin-top: 45px;
}

div.dcdownload div.asset-details div.downloads div.label {
	font-size: 13px;
	font-weight:bold;
}

div.dcdownload div.asset-details div.downloads div.details {
	color: #45535e;
}

div.dcdownload div.asset-details div.downloads div.details div {
	margin-top: 9px;
}

div.dcdownload div.asset-details div.downloads div.details div.region {
	width: 220px;
	float: left;
	margin-top: 0;
}

div.dcdownload div.asset-details div.downloads div.details div.status {
	color: #80888e;
}

/**** Digital Copy Requests See All ****/

div.crashReportSectionWrapper {
  padding-bottom: 26px;
}

div.section {
  padding: 0;
  width: 750px;
  margin: 48px auto 24px;
}

div.sectionTitle {
  margin: 24px auto 24px;
}

div.sectionTitle div.header {
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 8px;
}

div.sectionTitle div.seperator {
  height: 1px;
  background: #e2e5e9;
}

div.sectionTitle div.summary {
  color: #45535e;
  margin: 8px 0 0 0;
}

div.crashReportSectionWrapper div.resultList-wrapper {
  margin: 24px auto 24px;
}

div.crashReportSectionWrapper div.resultList-header {
  height: 28px;
  background: #9ca4b7 url('/images/labelconnect/boxstyles/default/matrix-head-bg_28.png') top repeat-x;
  padding: 0;
}

div.crashReportSectionWrapper div.resultList-header div.title {
  font-size: 13px;
  margin-top: 6px;
}

div.crashReportSectionWrapper div.resultList td { 
  border-right: 0 none #fff;
}

div.resultList-wrapper div.crashlist-col-0 {
  width: 38px;
}

div.resultList-wrapper div.resultList div.crashlist-col-0 p {
  text-align: right;
}

div.resultList-wrapper div.crashlist-col-1 {
  width: 303px;
}

div.resultList-wrapper div.resultList div.crashlist-col-1 p {
  width: 285px;
}

div.resultList-wrapper div.crashlist-col-2 {
  width: 269px;
}

div.resultList-wrapper div.resultList div.crashlist-col-2 p {
  width: 251px;
}

div.resultList-wrapper div.crashlist-col-3 {
  width: 140px;
  text-align: center;
  border-right: 0 none #fff;
}

div.resultList-wrapper div.crashlist-col-3 p {
  padding: 0 5px;
}

div.resultList-wrapper div.timeoutlist-col-0 {
  width: 341px;
}

div.resultList-wrapper div.timeoutlist-col-1 {
  width: 269px;
}

div.resultList-wrapper div.timeoutlist-col-2 {
  width: 140px;
  text-align: center;
  border-right: 0 none #fff;
}

div.resultList-wrapper div.timeoutlist-col-2 p {
  padding: 0 5px;
}

div.resultList-wrapper div.memorylist-col-0 {
  width: 341px;
}

div.resultList-wrapper div.memorylist-col-1 {
  width: 406px;
}

div.bargraph {
  margin: 0;
  padding: 0;
  height: 39px;
}

div.bargraph div.bluebar {
  background: #fff url('/images/labelconnect/bargraph/barblue.png') no-repeat;
  height: 39px;
  position: absolute;
}

div.bargraph div.yellowbar {
  background: #fff url('/images/labelconnect/bargraph/baryellow.png') no-repeat;
  height: 39px;
  position: absolute;
}

div.bargraph div.greenbar {
  background: #fff url('/images/labelconnect/bargraph/bargreen.png') no-repeat;
  height: 39px;
  position: absolute;
}

div.gelbargraph {
  /*width: 750px;*/
  margin: 0 auto 0;
  padding: 0;
  height: 55px;
  clear: both;
}

div.gelbargraph div.steelbar {
  width: 448px;
  height: 55px;
  background: #fff url('/images/labelconnect/bargraph/barsteel.png') top repeat-x;
  float: left;
}

div.gelbargraph div.graybar {
  width: 298px;
  height: 55px;
  background: #fff url('/images/labelconnect/bargraph/bargray.png') top repeat-x;
  float: left;
}

div.gelbargraph div.steelcap {
  width: 1px;
  height: 55px;
  float: left;
  background: #fff url('/images/labelconnect/bargraph/barsteel-cap.png') top repeat-x;
}

div.gelbargraph div.graycap {
  width: 1px;
  height: 55px;
  float: left;
  background: #fff url('/images/labelconnect/bargraph/bargray-cap.png') top repeat-x;
}

div.gelbargraph div p {
  padding: 9px 0 0 0;
  margin: 0;
  color: #fff;
  vertical-align: middle;
  text-align: center;
  text-overflow: ellipsis;
  font-size: 16px;
  text-shadow: 0 -1px 0 rgba(77,94,115,0.44);
}

table.bargraph-legend {
  margin: 10px auto 0;
}

table.bargraph-legend td p {
  padding: 0;
  margin: 0;
  font-weight: bold;
  text-align: center;
}

table.bargraph-legend p img {
  margin: 0 5px 0 0;
  padding: 0;
  vertical-align: middle;
  position: relative;
}


div.image-upload-well {
  position: relative;
}

div.image-upload-well div.overlay {
  padding:0;
  margin:0 auto;
  position:absolute;
  z-index:100;
  top:0px;
  background:#fafafa;
  opacity:0.9;
  width:57px;
  height:57px;
  vertical-align:middle;
  text-align:center;
}

div.image-upload-well div.transparentOverlay, div.image_upload_well div.transparentOverlay {
  padding:0;
  margin:0 auto;
  position:absolute;
  z-index:100;
  top:0px;
  background:transparent;
  width:57px;
  height:57px;
  vertical-align:middle;
  text-align:center;
}

div.image-upload-well div.checkImageOverlay {
  position:absolute;
  z-index:100;
  top:0px;
  left:0px;
  background:transparent;
  width:57px;
  height:68px;
  vertical-align:middle;
  text-align:center;
}

/**** Manage Test Users ****/

div#test-users-list, div#test-users-list div.resultList-header {
    width:880px;
}

div.resultList-wrapper div.testusers-col-0 {
    width:155px;
}

div.resultList-wrapper div.testusers-col-1 {
    width:182px;
}

div.resultList-wrapper div.testusers-col-2 {
    width:287px;
}

div.resultList-wrapper div.testusers-col-3 {
    width:125px;
}

div.resultList-wrapper div.testusers-col-4 {
    width:126px;
    text-align:center;
}

/**** App Add-on ****/

div#add-on-list, div#add-on-list div.resultList-header, div#add-on-list-with-submit, div#add-on-list-with-submit div.resultList-header, div#add-on-list-no-ticketing, div#add-on-list-no-ticketing div.resultList-header {
    width:880px;
}

div.resultList-wrapper div.add-on-col-0 {
    width:200px;
}

div#add-on-list-no-ticketing div.add-on-col-0 {
    width:240px;
}

div.resultList-wrapper tr.even div.add-on-col-0 img, div.resultList-wrapper tr.odd div.add-on-col-0 img {
    margin:1px 5px 0 0;
    padding:0 0 5px 5px;
    position:absolute;
    right:0px;
}

div.resultList-wrapper div.add-on-col-0 p a {
    color:#33a0d6;
}

div.resultList-wrapper div.add-on-col-1 {
    width:140px;
}

div#add-on-list-no-ticketing div.add-on-col-1 {
    width:311px;
}

div#add-on-list-with-submit div.add-on-col-1 {
    width:230px;
}

div.resultList-wrapper div.add-on-col-2 {
    width:125px;
}

div#add-on-list-with-submit div.add-on-col-2, div#add-on-list-no-ticketing div.add-on-col-2 {
    text-align:center;
}

div#add-on-list div.add-on-col-2 {
    width:215px;
}

div.resultList-wrapper div.add-on-col-3 {
    width:138px;
}

div#add-on-list div.add-on-col-3 {
    width:120px;
    text-align:center;
}

div#add-on-list-no-ticketing div.add-on-col-3, div#add-on-list-with-submit div.add-on-col-3, div#add-on-list div.add-on-col-4  {
    width:200px;
}

div.resultList-wrapper div.add-on-col-4 {
    width:142px;
}

div#add-on-list-no-ticketing div.add-on-col-4, div#add-on-list-with-submit div.add-on-col-4 {
    width:120px;
}

div.resultList-wrapper div.add-on-col-5 {
    width:129px;
}

div#add-on-list div.add-on-col-5 {
    width:110px;
}

div#add-on-list-with-submit tr.even div.add-on-col-5, div#add-on-list-with-submit tr.odd div.add-on-col-5 {
    text-align:center;
    position:relative;
    bottom:1px;
}

div.resultList tr.column-headers div.add-on-col-5 {
    max-height:26px;
}

div.resultList-wrapper div.add-on-col-5 p, div.resultList-wrapper tr.column-headers div.add-on-col-5 p {
     overflow:visible;
}

div.resultList-wrapper tr.column-headers div.add-on-col-5 img {
    position:relative;
    right:6px;
    bottom:1px;
    margin:0 0 0 0px;
}

div.add-on p.instruct_text {
    width:650px;
    padding:10px 0;
    font-size:14px;
}

div.add-on-uploader div.image_upload_component div.image_upload_preview {
    position:relative;
    right:26px;
    float:right;
    width:0px;
    text-align:left;
}

div.add-on-uploader div.image_upload_component div.image_upload_controls{
    position:relative;
    left:322px;
    top:50px;
    margin-bottom:75px;
}

div.add-on-uploader div.image_upload_component div.image_upload_controls p label{
    position:relative;
    right:318px;
    top:-50px;
}

div.add-on-uploader div.image_upload_component div.image_upload_controls p {
    max-width:150px;
    font-size:11px;
    color:#666666;
}

div.in-app-purchases fieldset ul li div.help-info {
    float:left;
    min-width:350px;
}

div.in-app-purchases fieldset ul li a.info {
    float:left;
    margin-left:10px;
}

div.in-app-purchases fieldset ul li div.form-note {
    position:relative;
    right:355px;
    top:10px;
}

div.sign-off {
    max-width:475px;
    margin:0 auto 40px;
}

div.sign-off h1 {
    color:#2B333A;
    font-size:15px;
    font-weight:normal;
    padding:0;
    margin:0;
}

div.sign-off hr {
    margin:19px 0 22px 0;
    width:930px;
    position:relative;
    right:228px;
}

div.sign-off h2 {
    color:#2B333A;
    font-weight:normal;
    font-size:13px;
    margin-top:6px;
}

div.in-app {
    height:60px;
    width:960px;
    position:relative;
}

div.in-app div.col1 {
    margin:27px 0 0 17px;
    min-width:360px;
    overflow:hidden;
    padding:0;
}

div.in-app div.col1 div.row {
    display:inline;
    max-width:360px;
}    

div.in-app div.col1 div.row div.label {
    max-width:75px;
    min-width:75px;
}

div.in-app div.col1 div.row div.field {
    max-width:300px;
    max-height:15px;
}

div.in-app div.col2 {
    margin:27px 0;
    padding:0;
    position:relative;
    text-align:center;
    width:250px;
}

div.in-app div.col3 {
    padding:0;
    margin:27px 20px 0;
    position:absolute;
    right:0;
}

div.in-app div.col3 div.row {
    max-width:300px;
    display:inline;
}

div.in-app div.col3 div.row div.label {
    width:50px;
}

div.in-app div.col3 div.row div.field {
    min-width:200px;
    max-height:15px;
    float:none;
}

div.in-app-ticketing {
    border:1px solid #d7d7d9;
    background-color:#f6f6f6;
    padding:17px 0 5px 10px;
    min-width:520px;
}


div.language_fields div.field span.cancel {
    position:absolute;
    display:inline;
    right:0;
}

div.in-app-ticketing div.new, div.language_fields div.new {
    padding:15px 0 5px 0;
    margin:0;
}

div.in-app-ticketing div.new label {
    font-size:11px;
    color:#f77622;
    font-weight:bold;
    padding:0;
    margin:0;
}
div.language_fields div.new_red, div.in-app-ticketing div.new_red  {
    padding:15px 0 5px 0;
    margin:0;
}

div.language_fields div.new_red label, div.in-app-ticketing div.new_red label{
    font-size:11px;
    color: #ff0000;
    font-weight:bold;
    padding:0;
    margin:0;
}
div.in-app-upload div.resultList-wrapper, div.in-app-upload div.resultList-wrapper div.resultList-header {
    width:670px;
}

div.in-app-upload div.resultList-wrapper div.addonlist-col-0 {
  width: 190px;
}

div.in-app-upload div.resultList-wrapper div.addonlist-col-1 {
  width: 360px;
}

div.in-app-upload div.resultList-wrapper div.addonlist-col-2 {
  width: 117px;
  text-align:center;
}
_Chttps://itunesconnect.apple.com/images/labelconnect/manage_apps.css‘*+,-Oebplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Lhttps://itunesconnect.apple.com/images/labelconnect/nav/globalnavbgblack.png“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫jòïû»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:00 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:21 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/pngU29475_Wed, 15 Jul 2009 18:30:37 GMT_"2ca4d9-7323-4a4cdea8"Uclose“./de£ef2_NSMutableDictionary\NSDictionarys#“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
]bkvyàëìö¢≠Ø∫ºæ¿¬ƒ∆» ÃŒŸ€›ﬂ·„ÂÁÈÎÌ˚	&3BGLWwÖ•´ƒŒ‘Ù2?BGK_             l              mYimage/pngOs#âPNG

   IHDR  ÷   ò   Sq3   gAMA  ÷ÿ‘OX2   tEXtSoftware Adobe ImageReadyq…e<  rµIDATx⁄ÏùÄ≈’«g•sÔö1¶Öé±È%Ù:‰É °0-	Å–íê@BÔ¿tIË`öÈ≈Ä¡L3¶W\p≈æÛÈ€ﬂìﬁj¥∑:ùÕù-Èﬁ/'m”Ó¸ÁΩyÔÕõô ì…∏“oºÒ∆Y,8&¸‹›*555Ó≥œ>spuuuV ∆©¡85ß„‘`úßCÛbz:ùæj‡¡gÑüH}‘z˘⁄kØçùÏ5≠å*J¸Õ`úåSÉqj0N∆©qj04+∫◊’’ù˙–ª:tΩ{éuzÃò1Á,X∞¿úÍ*@}}Ω(˛≤åSÉqj0N∆©¡85NÜ¡ö¯“CÜ9«∫}Ëm∑(Ou@ïãEÓåSÉqj0N∆©¡85NÜñæt¯ÁLÎv,ËbER∞»ùqj0N∆©¡85ß∆©¡∞ÿÄ/›NR¡[[ÑgŒú9n∆åÆ_ø~U˜nπs∆©¡85ß„‘`úß√‚D«:hMû˜ﬁ{œç=⁄Õõ7œy‰ë.ïJU’˚Y‰Æ˙`úß„‘`úåSÉqj(k5Z)[ﬁ}˜]˜‘SOπN8¡Mú81ƒjÇπ3cúåSÉqj0N∆©qj0¥<Zçc={ˆl˜Ù”OªªÔæ[z©y‰∑‹rÀU]⁄àFÏ,rgúåSÉqj0N∆©qj0òc›¨;v¨;ˇ¸ÛeÒ¯«\íØ∆˜6cçÜ¡85ß„‘`úßÉ9÷?åüû<y≤¸Ì‘©ìÎ”ßè˚ÓªÔ§◊˙íK.q?¸ÉÎﬂøø˚Ë£è‹RK-Â:wÓl
∆`úåSÉqj0NçSÉqj0òc>˛¯c˜Í´Ø∫)S¶H 7Ô∂Ï≤ÀJOı_˛ÚWSS„~¸ÒGoÕ±ˆÌ€ª°Cá∫5÷X√A`
∆`úåSÉqj0NçSÉqj0,ºcΩ`¡Ç™xô?¸P∆Q{Ï1n˚Ìwê}uuıÓñ[nñÙoz¶w€m7∑k∏µi”∆Õû=◊=˜Ï3Ó⁄kØëÔ+≠¥R≈óÅ‡¥Rx’@«‘©S]á‹Í´ØÓzÙËa“Y¡ú˙xÚ…'ÂÔä+Æ(õÇ ÿv€mç”Eƒ7ﬂ|„|A)C ◊/W∞Ù“KãL-
∏œ’W_ÌvÿaáüÃ—C=‰ÊŒù+˜y˝ı◊œÈŸ≥ß<x∞…i3„ç7ﬁp„«èwªÓ∫´ËVæ£oñ…‚jnŒMNõÜi”¶»Ì ≤¨ú,N¥$ˇÂP∑ QN·˝àD_”Èch6í°
Îjò¿k÷¨YÓôgûq˜›wüÙ</XPΩ◊aá*®≠≠sì&Mr”ßˇ:›Û√∆k†1bÑ;˜‹s›†AÉ*æ*m=?“Û·åqÔü}ˆô§ÍÔ¥”Në”¿9ãÍT*}ç∆«{L˛2Y‡Ò«Ì˘Âó›∏q„‰Û6€lcú.">ˇ¸s	*Æ∂⁄jn‡¿Å≤Ú¡|‡~ˆ≥üπ9sÊH˘/≥Ã2Ó∑ø˝ÌBﬂª]ªvÚ∑c«é?˘9«å#√q6ÿ`É®Nƒ¡;¨∑ﬁz&ßÕÍ√€oøÌ∂‹rK◊Ω{wwÁùw 0©Âó_ﬁ}ˇ˝˜¬«[l·~Òã_4+Á&ßMs¿¿m Â'ÿ2k≠µñ€wﬂ}´ì’í¸óC›*79≈°æÈ¶õdXbÔﬁΩ•vÿa¢ÀÂfóŸ:÷Ü≤s¨´!¬Û +Ø∏ã/æ‘’áB5~≠K{i›°/ÌÊœ˚—Mô2ÕÕù;[ﬁ7ì·ù3.ùNªkÆπFz´´°xﬁC£wÂú ¢¥∑‹rã<;QmR˜¡≈_ÏV]uUŸZ+*ç”$ÙÌ€◊}Ò≈2D√û,újˆËjmQÊÊ‰tªÌ∂sÎÆªÆî%9√]¿ü˛Ù'˘ùx¿›q«‚ÿ.¨”™iu+ç='éº‚ÿ√Ö^(=»˚Ω˜ﬁ+˚ûÛ÷[oEﬂ	(09m^u‘QR∂î?=¢ßûz™dk˝˝Ôwœ=˜ú€x„çõÃπ…iÛ;úárà[eïUÑ≤ÏÆø˛zÈΩﬁsœ=€;∑$ˇÂP∑ MN…6¢SÁˇ¯á´≠≠ï≤¡qU®QnvY5ÿHs¨À
<?—≥Å∏≥fáBVÑFD*Hπ©”¶∫ô3fàatŒü?_†◊¨WØ^)¨ÅÙïK%ºœåê@∫0¿®‡Ÿq Ω-ßùvö6lò[aÖ$3Å¥98'≠ëﬁNu&H1õ>}∫8å8qè>˙®|CÜq;Ó∏c≈§ZUßI ≤ç˝˛˚ÔÀúÔΩ˜ûÏß˜√BÓ—£Gª_|Q∏≈†‹t”M›œ˛ÛË>qÓO<ÒƒV/ßÙD“À±Œ:ÎDr >˘‰˘K*8¿°Â∑ìÄ¨º¬R˛‹≥)Üõoæ)é=†≈Äsˇı◊_ãÛŒ;Ô8øÌ—ÔÄ"&ñDvïsÙÉ ?2é#ø˙úªÏ≤KÙç…;«Ë≠Â˛`ü}ˆ)x˜jï”Q£FIÉ‹~˝˙ENé÷t/≤Ö40CvéeÖ·øˇ˛˚G:9&(
üîˇ˙ÎØ/e¨¸ëfNΩz¯·á•ﬁm∂Ÿf—qÂ9Á˜&CIü´5Í^ÌeC*'â†lò3f˚Ì∑ó≤ˇˆ€oe∏õ )¸8›#pE˝˛„ˇ(«Æ∫Í*)_’ë{ÔΩ∑Jvz~—pÄpê‰¸6¶3>˝ÙSYæî∫ê‘æ6¶OZR+EN·úrÄg⁄@ÏT}ŒR∫ê„pº…&õD≤Êó©„Mëe@@ˆøˇ˝Ø¸.u'….3…`»"•JÆí7“¿◊^{]W[6ı,ÜÏDdåÀè›Ïxó.]‰\f
gC¡`@`»„TWz¯õüSÓõ*pz¨Q‚>8ˆ∑ø˝Méa\ôﬁ0å
_ˆ—»£1‘8·8ﬂI£cΩa|ßwÊ√ÉGƒ8m˘ç»;¿``éR˝Ÿ?a¬·Uçàô3g ~&¸’Ø~%‹“{ó‘	éç9Ræcdr|˜›w79Õ®§Çcú˘ipz£êä_J~8Œ˘Œ»ãÚW™ù@ó∂m€∂—sXôa‚ƒâ˚íÓ≠ü~'e∞_ØAÜyû±k◊Æbÿ£”K…;1T9ˆõﬂ¸F2ïZÉú“KM…fkñ;ÂÜQØuDÅ„Àú$»eFVÁ#è∑›võ≠rJùA>ï?∞Øæ˙J =Ãqïc⁄\Í é:«qqÆZ≥Óç;Ÿl8\:ﬂ ´ú¿”7‹ é¨÷mÏoºQŒ'x¡9»,qî‡¡ﬂ8GÂg
~ëé©åƒü•îŒ@∑ì5√1ï7≠+•ÙIKÀc%»)ÚEÎÇ.›E÷Ω’M—Ö¸ÖgÙ*eH9S˛œ>˚lìé7Eñ·æëc∏N≤ÀÃF≤Õ∂º.Øäk¢ÏÀÜ¡¨9sCTÔ⁄§⁄∏⁄⁄n¸¯∑$=ß≈•Nµ:÷()Ì≈©hƒÆR"w:Ó„ Œ∂◊^{πµ◊^ª†—ﬁ&ìKîπˆÑN√pÂïWñc\w≈WH⁄#Ác|l∏·ÜÄ¡π£gç}Ùrß-Mg„πÈù∆ò€cè=Ñó_ˇ˙◊íY æê+Œ°ÁCõﬁ,‡À/øÁ	C£ç6íq¢»3ëuåOìSWPÜ™‹µÁê2∆†¬hΩÎÆªïMœﬂoø˝‰:dë¥ø§kz8ï?úf∏&@+ ÊCW]Ô£œ⁄ÿ>ˇªÓCÜÈÖ!Ûà˙p˜›wKΩ°û4&Ô⁄G`áÃ	û	ΩRÌrJ›üS{©#ÍàQ¸TJ&:C?3÷Û˛˚Ôó}éë!°uΩåÉL˘"ü8X ˚©c‹ákêcÓGñò∂ÀpW⁄c∆˛÷®{ìÍ8†¸ Hz·âÚd	QÊM@Æ…F`¯îfã‡ò!óî%ÂoÍ†ë∫ãÓ\‘ú&8Ú_eæTõK«\2VXÂ_ÎJ)}“íÚX)r∫ÛŒ;Ky0dávèr$´ár+•ı;Ω∆‘ ôI
π¸ñ:ﬁTY>Î¨≥Dü£+4Ó€eK∫+ŸF2T™¬±V·Øﬂ£&≈˚‘âb4hEQ¯( ë{æ”∏ËXœjs¨+)%&õ¬?P“ãûx‚	q∞I#≈M”ƒ·W?„H≠πÊö‚0~DZÅ¶èÓGœ(ﬂı:"ËlÒ≤2Nò›Ve“Ÿî'f'ŸÕΩôcœ–¿
+è‹G{=t_kó”b„Èa¬"†Å√âcSJ~8éÏÈ8g5rìkÓ°\†O˝ﬁ.&‚)ˆ^I˚€ÈwœÈ√†£†œ•1´©))Ô8%î√=˜‹#Ω2tP≥9sÂ,ßIeà|QGò¥ßÜ6}¨ıâ∂R{:’πÛu*C¯ÃÜsü+AÎòø®k˛˜K/Ω¥AÆ‹ mqßÇ««à™RG	Ñ úYÂÑ¿ëñ≠¶„¬‹··®2∑E∑n›ÑoxRÁócz˝MﬂŸUô/•3»@`¢5&$”å≠+•ÙIK c•»)ÔOÊA⁄?ÇLÃw¿˜¶ËB¶®l&…b±„Mïe8ß◊;^gÀ•∂TpCŸ9÷ïæÓŒÛ˜ﬂOv5ÈW”&Ì˘∞DoiLhDË’¿¯B©˚Œ5©j4R8a~
\%£◊Û£Òe#jNND’vMÛQÉ„4DL¯¢6ç∫ûÉb’1Ùjx–Äx‡ÅøKèõq∫xzå8ùu«ö^DzJt“‰ëGújz∞é;Ó8I5<Áús‰4ˆÄûôjò!æ99’2ˆ”·ÄéM«¯ÒÙ∆‰„áUüI{∑|T0[1cÚ „7ôÖúﬁu™‘hOrf_¸˝í>ÎﬂRÚŒ;ìrâ3pÂïWJ ñäjó”§2$¯AA_bxk‡+È\ˇ;Ω•åÀ|Ìµ◊¢,!ú>Íé_ˇT«Ô«y‘C&kÚÅl”√⁄uoRô#áËC⁄Dˆ©§‹	Ühπk†âatßf –„à≠√$h*	∞Èêˇ›‚2ñR:ÉtnŒ9˚Ï≥Eß3£µœuc˙§%Â±í‰[î`ƒ/˘Kq¨ıŸJÈB˝é‹h[Jy√GSé7Uñ5Ø≥ÂR~∂éµ°ÏÎJèd£iπn];∫GFéî»7c51(˘¨©ﬂ42Í\”Ë£,Há°Å'≠ÁZ”\*Ÿ`Ø§ŸIdù5_≠∂⁄*zv?Å“‡‡gÛÕ7óÒ>Ùncp–
ˇ}ı3kBrÈr‘ÍçL•S*ç”∏±êC _'åÂR> ∆†6Ï»&YöÇ®◊2I3∏CæÈiÌr™ÜD¸^:ôêèRÚÉc¸üˇ¸G∆Tí:Œ…§{z¬¸g@øí“Y
•z¨·ñ†
œ¿g}∆¯3Ëgˇ˝K…;Ωÿ‹õﬁ6¿x—Êí©rñ”§:¬Á§:R¨>iô3˘=jå≈§I'≈a¢Óî‚«Øc]të‘1˛î£,/.Nµå‡É≤§«'á	Ω∞Y–è|'çózç#≠ìRÔ©ÔdëRå,“v,!hç√ãŒı{§ãÒ?^Jgpoú,∆Ì“V˚˜*•OZR+ENô_Äåtî.Cà= ≥5U>Ù–C24
YdXu¶)«VñqªLùv≥ëÜ*ZnkÓ‹9ÓÀØæqoÜ∆8JÉq◊Ëæc≠Ω’46ÏßA`ÚÜ·√áÀí[ÙrÖ≠dTZJ–h¿Ω_ÃT òIMÛ$z}˚Ì∑K√Œ¨•48\CCÅQAØ≥û“ √9”Vâ‘qƒíj¶≥–Ú;ÃBk©‡-5òx~‰é¨kCﬁ≈O„•G˛·cÇ¡Ô•,¡#)ácp^Œk}..N„©õI„ñ•‰G'–E/=^öZ˛DjçùÆ§}[oΩµÙ‡¿3é:˙Ä4Qtw|¸ß °îº„î®3âc¿ƒA™k™YNìRHãÒUlhÅ~'∞Eù!m›LõIOÚJZkú”¯˝®cd∞¸–t}ú∑r‘mã;πåü&õÄˆY‡∑©ˇßü~∫ÃÆO{Bì2¨Ω»8ŸúGZ8ré#éDg«í¯ı9ã/•3Hﬂæı÷[ecn~«Á∫1}“íÚX	rJ@	˝§|íYp¡KÇ2*•ï7d–óEÊ"!X]Í¯¬ ≤"nóÈ f#Œ°‡Ùπ˛˙Î'U˙ã†‡Iaa∆`îŒ¥ÛÍXÎXku∏UÈÒFQqå¥ÚJÜ¶jë
Øüî3H¶Ã˝1Y4¥™ih4ìÄÜÖ,∆Ÿ‚ò±èw§–Iîà réﬂs∆y‹Có≤‡ﬁ∫¶≤q⁄≤Ä+]Â#O£»‹3aú”–sås¥.Yè≈y§,p“[ªú∆ÀêœÏ√h-∆I1˘>ÙúiÔò¶ù&ÅﬂÑ_÷ﬂ§s‚œï¥èÁRΩ¿Û°€y&6‰9‚2Øcç…;ÈÍ<’wj.C¨úÂ4^FIz≤X}J“´î-Yaº≥÷=7Œi“˝xtªüûÍg@¥6›´¸(–çâ¸∂P$ ]ÌÍ4Â¶Á`Àº‰z]“ê^fﬁÉ ŒK‚√Á¨_≈tÜﬂF≥O«“k]iLü¥§<VÇúÍÿxÂìÁA4∏PJíÒG*7iÙ»d\K_XYV$Ÿef#2Q`_q¨ØΩˆ⁄I’Bå”açSkÅçsçS≠ü’±÷ûk’Ûœ?_c7M¡TåS„‘`úåSÉqÍÉ!S§cˇˆ∑ø]§„∆©¡–º8Í®£˙V≈‰e
z™â¨·√iˆßﬂ'’î¥RS5Mât4RúpÆIk™Ür∞I™∆©qj0N∆©¡8ıAO3Ω∆≈ﬁ£‘q„‘`h~TÕk¿x&–`‹%©P «ôT#Î…ƒåk°◊õuè«ﬂj(_πÿXìÍk4åS„‘`úåSÉq –GÏ[M˚_ÿ„∆©¡–Béu5ExpêØªÓ:wÃ1«Hè4—:∆å0qìó1ûÖmÑè%*ò¥ÅûÓj)ã‹Uw£aúß„‘`úåS&ﬂ˝)«çSÉ¡Î&G˘ÚÀ/óŸ+oA5ìo‡d”£Õ¨äÃ@ÃXlñ∞–mM¡åSÉqj0N∆©qj0Ns¨s–5qÅÆïX∆B¡∏Íjr™M¡X£a0N∆©¡85ß∆©¡∞ÑkìP=∞ı¸åSÉqj0N∆©¡85NÜ%‡XWSèmkáŒx^m=Ò∆©qjúåSÉqj0N∆©°¨kKù®.£çW„‘`úåSÉqj0NçSÉaÒ8÷ô fÖï±≥Gu(ã‹ß„‘`úåSÉqjú-èT*5ãÍàcΩ†WØ^wOö4È0+ñ áM‚`úåSÉqj0N∆©qj0,,µ‘Rw„Sß¬ˇÕ6lÿÖÌ€∑ˇÿä•:`;„‘`úåSÉqj0NçSÉ°eÅç/çOçc˝c∏M>Òƒ˜]vŸeoOß”≥≠àL¡åSÉqj0NçS„‘85ßCC‡3„;„C„K„Sπ HJx˜pÎì˚€6‹+2É¡`0É¡`0"‡@œ∑È9ßöøuÅÂIá[˚pkó˚léµ¡`0É¡`0Öé5ßœsŸÏoYD=r¨Øø˛˙Aù;wæaÓ‹πõŒö5´∆ ´2—æ}{–ªÔæ˚Œ˝¯„èV ∆©¡85ß„‘`úV5ßpuuuV Ü≈âÈÈt˙™¡Éü°éuç:’a≈3yÚ‰ÓVFï]n¿ñ0N∆©¡85ß„‘85Z›ÎÍÍNÌµ◊v:tËz·˜:Ît«éGòS]`©ã-;`úåSÉqj0N∆©qj0¥(÷3fÃ9CÜ9«∫˝ú9s6±2©.%c0N∆©¡85ß„¥µ8◊÷cmXR®´´˛9«∫›å3“V$’•\,rgúåSÉqj0N∆©qj0¥8∫‡SK*xkãÃõ7œÕô3«ıË—£ÍﬁMïãEÓåSÉqj0N∆©¡85NÜ≈Ç4éu–ö"<ü˛π{ÔΩ˜Dw‹qG’µ™òEÓ™∆©qj0N∆©¡85ßÜ≤F ≥Ç∑ñœgü}Ê>¯‡˜óø¸≈}¯·á≤‹Bµ¡"wŒ85ß„‘`úå”V∆©9÷Ü%q¨,XPı/ zÖ8”è?˛∏K•RÓŒ;ÔtÀ-∑\’ΩßFÏÿZØ≠∆©qj0N∆©¡854Œ©9÷Ü≤p¨[C‘Ó£è>r◊\sç,ˇË£è∫ööö™|oã∆:„‘`úåSÉqj0N[ßÊX ∆±Æ∂äX[[Î¶Oü.;tË‡∫uÎMXv¡∏7ﬂ|S&.˚˙ÎØÂÁT,rW}0NçSÉqj0N∆©¡85TÄc]MÈ0ﬂ|Ûçõ0aÇõ;wÆÙJ„\wÔﬁ]"ZG}tî˛3i“$˘À˜UVY≈0†*&2”w‚o•J„›I◊á≥•ñZ µoﬂﬁ§≥Ç9ıÒ…'ü»_‰–üâ⁄¥i 4N3gŒîa.î!ÂÎó+Ë‹π≥»‘¢Ä{Ω˛˙În–†A?ô#û}º‚ä+äûNrﬂøì”h—±¥uî1ﬂ—∑äﬁΩ{ª.]∫4;Á&ßM\¯2A;àæTN'Zíˇr®[Â(ßè|b!üËkÍÄa·85«⁄P6éuµ§√|ı’WÓ˝˜ﬂwßü~∫€ißùrN[ΩªÒ∆‹<‡˙ˆÌ‚ˆ›w_∑Á^{π6m⁄∏Ÿ≥Á∫güy⁄]x·Ú}È•óÆ¯2®¥4'fiﬂ|ÛÕeÃ;/∂k◊.r8gQÉj@•ßÆmµ’VÚóâ˝Á«p\oΩı
úo„t·—µkWw÷Ygπë#Gä¨`åSÆh¸∆ªÔæÎ^yÂ∑¡,ÙΩWZi%w…%ó∏˚Óªœç7Ó'=Á^°ﬁÌ‘©ì<ã÷â8fÃò·¶Lôbr⁄ÃX{Ìµ›:Î¨„Fç%œàSC{◊∂m[1Êü~˙i…‡¬ÒnNŒMNõÜ˘ÛÁãL¿s¿¸√Ó’W_Ω¯≥ü˝l±:Y-…9‘≠rìSÍÔøˇﬁm≥Õ6íA˘Èßü >¢Âär≥Àî”JÌ|0T°c]ùúÏπÁûìûÁÍ#•y‰ëG»jkÎ§∑z˙ÙBÉbæ4hE˜ﬂˇ˛Wz≥˚ıÎWÒÂPi)1(Ë€oø]áoø˝V83fåL2Ëy£1&°µ¢“”ú>¯`˘À<◊^{≠8|Û;Ôº≥€l≥Õ‰ÿgúaú."6⁄h#qö¶Nù*“ˇ˝ﬂˇπ5◊\S4 zˇ˝˜ó≤?ÔºÛZ«˘ÜgcœâÏÛ3‚ ÿ…∞8≠qÃ7ﬁx£…i3ßçl.úµSN9≈Õû=[x\pÄ¥É8sMÂ‹‰¥˘@`yè=ˆêŒÕ≤;Ú»#›/º‡n∏·Ü≈:—jKÚ_u´‹‰¥oﬂæÓ +Ø[á˝}€m∑â¨ñ+ Õ.S.m‹º°lÎjà–À9bƒÕÆ>™˘Ûk]⁄KÎ}i7ﬁèn îi°"ò-Ôõ…ŒóNß›≈_,©p’P±´î»ΩXDfO8·◊±cGŸáqŒ≥„$ºÙ“KŸ>Êòc§ÉÉe”HõC©c®Ø∞¬
ë√¿5§örås0(q‚&Nú•⁄ëjJ£P)©Vï∆i0‡Iˇ”w †ÇSM§Ÿ√»«	¸ÚÀ/eÉ?≤H0(¶°àsèSŸ⁄Âîûjä}«˘_ˇ˙ó¸›t”M%à1tËPq\ìÄ¨|Ò≈R˛⁄≥å±“ÿsÆ±∆¬![1ú|Ú…2œøı«?˛Qˆ·Ù–Ô`Ïÿ±b∏ÈoÛº¸q$ˇ»82å¸Ís"œ˙ç…;«ﬁ~˚Ì(Ug≥π™Â,ßW]uïúŸ¥'õ’1¿A‰ˆŸg)u6xÇúîÂæ÷ZkE:π•.!«î?eH+ÃiBΩÇE‰Xè+ßpßN‰ +Ø\ñ=tããSunLû<π@ngÕö%uû≤Á≥ˆhzW[m596zÙh©ﬂ¨Ñ;æ´é‰8‡|8¢Ãπ¸¢êC8P˛}ôoLgp=<Sí⁄◊∆ÙIK c•»È±«+ÅOdî6Pá¡Òl•t!«9oŸeóçdÕ/ˇR«õ"À )ôÖ¸.˚íÏ≤rêSõÈ›P6éu•G•y~îƒ¿Å‹åY≥Cgπ∆•R§R.§‹‘iS›Ã3ƒâÊ<“ÆP0Äà0©á§‡TCtæ“÷Û”H<çıoº!∂>7 ¨ªÓ∫ÚôY›ü}ˆY∑˝ˆ€ª_¸‚bT`Ñ—ß±¡A„º#FHö„;Ï‡N;Ì4˜˘ÁüKÙüÔÍà`P.≥Ã2∆iCP_ÖFf	)ßj¸Ì∏„éT¡»⁄eó]$%ÆWØ^‚§›}˜›“ãF√çaÄ°πÎÆª
◊»-ì∂v9•«Ér!≈…◊ãÄ˝«`zÍ©ßïÆ«¡b»F4˙—ﬁbÄ3zX^{Ìµ¢Ál∑›vn˘Âóww›uW¢Wú˛˘b‰#ª|c#Öî‡2é£œyÍ=>8	Üç…;Œ¡9Áú#:ê-3~¸¯™óS s√7tè<ÚH‰ iπ”"á8\–˛ÿk Y≈àæ‚ä+§Œ`Ë#üÙzƒDNπ/≤äA‘•ˇ˝Ôr∫˝?ˇ˘è‘=‰ò^YÍ=s»=ìâ‚Th`µ5Í^u¨˝ﬂy˛˘ÁÖ7Ù„O<!eMÄ
ß[Ìóã.∫»≠∫Í™"W8e»Ÿ#»é2ô*Z◊±ËÂ2	ødúú}ˆŸ—ª˙œÇNhLgPoN=ı‘®-Gﬁ‡ûsKÈìñî«JëSÙ7Cdpöy…Í\ó“ÖÁ\ \eçœ»"˙æ‘Ò¶»2Ì2◊¿˘Âó_.ı&nóÒÏÂ ßñ
n0«∫ôÄ2ÿp√ç]m]¯ıa£‘ª 4∫\¯ÒìO?ñ∆ÑqáúG$]7ˆ—`— TK [••Eßaßq≈xª˛˙Î•±•±πÓ∫Îƒ@¶gûh¸I'˝ıØ-Ü‡Ω˜ﬁ+ç=çŒﬂˇ˛˜»`<Ù–C•ß·ßáå®Í‡¡É•†°ëßÁÜ^ „¥e°Ωc»Ω$åµ¶Q∆“N≤00Íiƒ9∂Ò∆ó‚8MˆÀ_˛“=˘‰ì¬-¡ìJï€Ê‰√âÚ§◊ÉrQ√X{1ƒÛîíéSŒL0ƒÜC^Ã±VæÙ}¯¨cÂ	T∆{1◊KØßˆí˙ÖÔ¯>ˇªÓ„9zË!wÀ-∑»3“ÎÛÁ?ˇYúƒ∆‰˝êCë≤¬0•n“[”\u®úÂà˜∆πe¸.–1 f¯·≤Àò}-cÌA•tÎ≠∑'áâ1˝dñ†£◊_})cx¢Œó≤≈ëøı÷[•∑ç„»=uLÂgõ‡ΩÂgûy¶˚€ﬂ˛VvΩ÷ãã”§:Tå"(D`ëz_‘˚û={ä¸R÷ˇ¸Á?•˝‹v€me?≤ÆΩé†¥'˛ı˛»0ú¬œ·á.≤ÈÀüKÈŒÅ˜;Ó∏Ct2|Ú˚‹∑î>iIy¨9%ÿÄ|!k¥}t c»B)]»wxF∆ê5dë2ß]•Óî:ﬁYÜ6⁄~3….[“Âh©‡Ü≤s¨+=¬ÉÛ¥¸Än÷úπ°Ê©wmRmBkÅ?˛-q–íúj/¢ÑLñSM.ç⁄UJJÃ[oΩ%—Qz!QﬁDUœ=˜\i`uå=R˙ô»9`2:xø˘Êõ•ëﬂ}˜›Â≥Zà“séøFÙ_#·§.—ê·†ß-] √#.àzÛ#Õoy7=2år"ÂÄ∏ƒ©∆∏czPŒc–ñßÒtmÜ∏`8·TQn»⁄I'ù‘®¸ _8RÍ¸r?ÊüHJg24hÄûıçR?ë·$$Ωoc˚‚u`‘=ÛÃ3ÚôûNz≈êÚõç…;eò Í¶õngQÌröTÜÕ†é–CF¢á—µÍX”sEùa£¸äêU¥≈[»q&BCŸ({‰ìÏÖ÷1Ó˘˚ﬂˇ^‰ò@Íû{Ó)∆8ŸGÄø8\Ùñ˚≥Ÿ∑&›õƒ ª–Õt8[î;ú lõ-∑‹Rz¨	@™,¢wëcÍ6¸Í}|ù…Ω‹–˛“õ◊'•⁄\08D W@ÎJ)}“íÚX)r Dn √ÈE1ØˇlçÈBÄÏ¬ç "Yö˙ﬂÿÒ¶ 2AJ;>|ª¨\‰‘z¨ÊX7w¥7|èöÔSÁ^|ÒEôòåÜ'göîﬂqæ0‡´M+qi¶ó_~Y∂üˇ¸Á“Xw‹q“˚îdd’∆A#"N&Ç?õ¥ûCdU{Øµ·¶±b+eÃßÕˇÏÍhÈ∏jM—}ÁùwdLùêπé:Í(1≤ôàK{≥ëoåE5´e.ÑÊ‚‘7∫¸{—ÎœÜÉIèDS‰á„Ù4È}¥w3…±&EQáS`ÛY{È%£Gª9kø¨0ÍíéóíwzXo¯õﬂ¸∆vÿaí¬⁄\ı©úÂ4©i©»„\u6ˆbı…Ø#ÄﬁOzG“ıÈ”ß‡|’¡Ò˚ÈıQ}pØrõ~qqöƒ˙è∫™Â;d»ê(°Á®3Ë±fR@zçÈ•DÊu9Q2~∏Y∫˙â/C˛˚&Ò’òŒ@á„hcWÒú£OZR+IN	(”[ÕvÃÖ¡‹8√M—Ö@πd¸1ôeSé7Uñ©7M’Âf#Ã±vïü
N*‰‰…ﬂ∫ötç´iìvèç|X“ßËM°q'=•ècÌ;◊4JDiR-À9UZ⁄0„m·	ˇ˝ÔoÙ0˘œé¢ƒ‡¢'Å„ÌÛÙÑ8éß∞˘äüFäT+ÆaÜøˆÃß-cçQßŒ)á»\j∫"=D q™â§3{8Œ4Ÿ©F<RgêeÄ÷.ßÒ1ë˙ù«8J…<QÓß0¥TFíR¡1p 8zö%†ç§}k]– ôÍ¯3ƒ?«¡bÚNœ=Å∆®6L“VIa≠v9M√KØqRI:◊ˇÆ≤»|8Ê‘%zø©;~˝K‚GÎ∆;ŸjÃó´,/ÓTpÏzÌ)#≤¯@èb∑h@ãaîΩˇæcA˝ÜÍ=¡j⁄Uz%·à‰§1‘q9å/•3é?˛x9FJ1N€=˜‹S¿uc˙§%Â±R‰î 3¡x'Ω˛˛˚ÔóNû≠î.TÆê' (o8k ÒÖïÂ∏3´v˙’l$É¡s¨+=¬ÉPO¯`ÇÎ÷µ£{d‰HI!≈ ßåœö˙M√§Œ5çJäîò?¸·rΩ™»*ï6É4≥Å3÷áM∆ﬂ“Ä„XÈ≥ì⁄©3˛¬1ÈRåÕz¡›â'û(Áëéñî:ÖáÛŒ§XíÃlI£Ö—R¨GÕ8m>¨æ˙ÍQ√¨©Ã>å>ﬁE'€"]Q?”{çßF#ç;ÈÑàëHJuÜûø«¶µ i“,æ≈Ùz)˘!=î„Ùò0ˆè±∞ ˝XÍ9KÕﬁÿs˘˚‡öIÓxzRô‰J˘∆“#)Ç7ç…;ÅTÍô¶06ıô+]N˝2*UGä’'=ü∫Ç#Ñt·ÖJÜôa§Ê'›;~?≠cx†ÙîÙ~9ÌX‹≥Ç„§‡”;çåb∑0dÜﬂ¶ÁùH9∆C¢uÚ(0 >òåîp“ziﬂÍÄ7∆o¸x)ù¡òouÙòXÀøW)}“íÚX	räm ‰s§‡”>"Ä œ÷T]Hêäq˜»"∂ΩﬂM9æ∞≤¨à€eÂ"ß6+∏°lÎjà`4}˘’7ÓÕq„dºë8îèÔXko5Ü;˚q¢Ik"çâ1π(∆2U2*mi¢ß8◊ pƒCD„ıŸi ‡ìŸ)/ΩÙRiÿy7&„¿¿ b d§¡)∏óˇÓå¬∏8‚à#¢ﬂ°7Kó„1N[»îœ	éé5r«wÉÕyá∑§√È1éqÆÚàëA⁄ ‹«á¥F9ıÀ–/”§˚ñíécÿÔ∑ﬂ~2,>êQz1tFﬂbœ†ø_Í9˝síˆ!ˇFyf-f¨œKVëR|è◊±∆‰√U”◊q4ò@´πd™úÂ4^FIz≤X}äÎU2®3{ÔΩ∑ª˙Í´•|È˘Ü∑$N„˜”:»dhLî®g‹∑µÍ^ÂÁwø˚ù¸•ûSÔ)S]+ò^k⁄@m3˛ìù°œFÔ/uüÎuŸ.dèÎ‹8GI«KÈz®y&Í2≈ok])•OZR+ANôWÄ≤R>)[2Å4Ûßî.‘ÄÅË$Y,u|aeY∑Àä•ä/n9µTpC9 +dü·√áO™ÙA!tÇwÿA"i8”N¥:÷:÷Znƒ∂m€J£EdVó9®T†@IπÚ«®úqj0N∆©¡85N´ÜS&Çcº¥ŒÍø∞«´çSÜb„K
√ÜÎ[©‡ Á¯À/æêﬁ0¢~:÷GZ◊≠&mI7ﬁõ„$ëTÓQÈeQ…i√„‘85ß„‘`úñÜ],ˆ•éßCÛ£jR¡ΩÕåΩd¨.=’æ†1#"È"Lº°„xpÆQ<úK‰RgM¨dÿ$’„‘85ß„‘`ú˙`$√ãΩG©„∆©¡`éu£`ÇfîdfEùA«ô˝:ì%4ìö—ÉçÉÕ˙èW^ye…ÒÅ¶`∆©¡85ß∆©¡8-0A›O9^çúZèµ¡ÎfFè=‹9Áú„Œ8„Èë÷ıTYágõﬁl&Œ@¯Ë·æÏ≤ÀƒÒÆñ20C¿Éqj0N∆©¡85Ns¨2Ëù>ÂîSƒÅf¬2ffrzØGç%é4KU∞n_ÁŒù£Â"™ï<É¥¡85N∆©¡85ßÜÖÂ‘kCŸ8÷’‚T˙Ë÷≠õ¨µXüZ°Ài1#$NuµΩøﬂhT#Ø≠›0NçSÉqj0N∆©¡kCô:÷6&°z`cMåSÉqj0N∆©¡8mMú⁄¨‡Ü≤q¨-jW=–œ-kúåSÉqj0N∆©qj0,F«⁄úÎÍR0˙◊85N∆©¡85ß„¥5pj©‡Ürp¨3:tX0k÷¨¥GÂC”al¨âqj0N∆©¡85ß≠ÅSñ ≈±^–Ω{˜q°cΩæGı(Éqj0N∆©¡85ß≠ÅSñ ≈±û∑Ì∂€ûˆ»#è‹3m⁄¥ŒV$ïñ#b«_6Éqj0N∆©¡85ß’Ã©¡P.éıèªÏ≤ÀÿNù:Ìˇ‘SO˝}Í‘©kÕõ7/eESôË–°É´´´ìøπ3N∆©¡85ß„¥⁄95 A. ÉÉ›=‹˙‰˛∂Âòè¡`0É¡`0E1=‹>	ºÙ	&/knÌrüÕ±6É¡`0É°8Êá€Ï»±2d»…ù;w>eÓ‹π=˘ûJ•d”œÜÚ)L:¢Nÿ¿¨à]∫tq'úpÇª¯‚ã›Ãô3]:ùé∏Ç@6„”85ß„‘`úß∆iµp:`¿ K	7,nLu»UÉ>#¸ºÄ≤éılprx‡º˘ÛÁª∂m€∫öööH…®Ç·≥°<†äEïã.ÅBÒ'Êh◊Æ]ƒ•6⁄pü∆©¡85ß∆©qjúß’¿©-∑eXË÷¡”_{Ìµ›Ü∫^¯Ω«:›µk◊SÁÕõ'ï%ÉÇ—ÕL˘*U*(6¯Jj4îK?`b0N∆©¡85ß∆©qZú⁄r[Ü%à5«åsŒê!CN√±n_[[€£}˚ˆR9µ«:Ó\S6Â•\T±†dÿé–PpÃˇü>ß÷pß„‘`úåS„‘8≠N≠«⁄∞$÷«··ü3q¨€i‰ßöÕÔπˆ«Z S¡‘÷÷ FC oÁ/¡ÂìÕ„‘`úåSÉqjúß’∆©ıXñ0∫‡SK*∏ˆT„\≥≈S¬´M¡0ñú(T*¸Ò%¸–Ù&ˆÛ(ü˛ÿy85ß„‘`úåS„‘8≠N≠«⁄PH„Xö£Q;U0Í\W”8ÎØø˛⁄}¯·áÚyã-∂®»˜BqË}~ç¿¬üı/˚‚Y¸µh¨qj0N∆©qjúß∆i5pj=÷Ü2@ ≥Ç«k>≈´∂Î/ø¸“}˛˘ÁÓºÛŒÁ˙ìO>©X«öHù*B¯‚≥F\ïœx™ì5∆©¡85ß∆©qjúß’¿©Ó3ñ$ƒ±÷eµtKZ~†“AÍ˜_|·ûzÍ)yß;Ó∏√ıÌ€∑båØh‚KD†X¸Ô>∑6~»85ß„‘`úß∆i5qj=÷Ü≤q¨}•¢ïUïKµDÓ>˚Ï3w›u◊ItÎ—Gç¢íï¨`4Jotüœ≠?)áEcçSÉqj0N∆©qjúVßÊX ∆±˛íZ™p*uô-f
ú>}∫¸e÷«Ó›ªãC=gŒw¡∏7ﬂ|”ıË—√Mö4…uÎ÷ÕuË–°‚åœMúü∏bÒœ±•”åSÉqj0N∆©qjúVßÊX ∆±ˆg“”1
˙WS,*ﬂ|Ûçõ0aÇõ;wÆ§¥„\„XÛ>G}t4]?NµŒ0∏ *´∏Tå"UæÿÙ‚|≈y‰<ù‡°‹∆°Ù¯ÓªÔ‹è?˛(ú-µ‘RimçF5qÍÉπ rH@K1m⁄4	ÄÅÅßã»ÈÃô3eŒ êÚıÀtÓ‹YdjQ¿Ω^˝u7h–†üÃœà>^q≈EO'πÔﬂøø…i¥ãËX⁄: òÔË[EÔﬁΩ£U2öìsì”¶.|ô†D_.âïKZíˇ≈U∑*MN·˘ƒB>—◊‘√¬qjéµ°lÎx•çoïÇØæ˙ Ωˇ˛˚ÓÙ”Ow;Ì¥SŒi´w7ﬁxÉ{‡Å\ﬂæ]‹æ˚ÓÎˆ‹k/ô§bˆÏπÓŸgûv^xÅ|_zÈ•+N¡$m˛≤ÂŒ) {ÔΩÁ6ﬂ|s∑‹rÀI√áLûßNÁ,™cPâçF•s«V[m%?¯‡ÉÇÁƒp\oΩı
úo„t·9Ì⁄µ´;Î¨≥‹»ë#EV0∆)W4~„›wﬂuØºÚä€`É˙VZi%w…%ó∏˚Óªœç7Ó'ï«^°ﬁÌ‘©ì<ã÷â8fÃò·¶Lôbr⁄ÃX{Ìµ›:Î¨„Fç%œàSC{«l»ÛO?˝¥¨òÅ„›úúõú6,äL¿É?¸É{ı’WE/˛Ïg?[¨NVKÚø∏ÍV%…)ı˜ﬂÔ∂Ÿf…†¸Ù”Oe—r≈í∞Àö¬©Æqm0,q«⁄Øò˛¶„*°'!ßG‰πÁûìÁ]∞†>RéGyÑl†∂∂Nz´ßOˇ!4(ÊªAÉVtˇ˝Ô•7ª_ø~cƒπÚä¯Á¯ ÖSÙÌ∑ﬂ.Ü√∑ﬂ~+å3∆=˛¯„rúû7c2™›∏´N„8¯‡ÉÂÔG}‰ÆΩˆZq¯0Êwﬁyg∑Ÿfõ…±3Œ8√8]DN7⁄h#qö¶Nù*“ˇ˝ﬂˇπ5◊\S4 zˇ˝˜ó≤g5ÑÖ’qæÅŸXO ≤K0ÃœHàÉ`'√np‡¥Nƒ¡3ﬂx„ç&ß-‹¬A#õgÌîSNq≥gœû ◊ Ì Œ\S979m>N	,Ô±«“9†YvGy§{·Ö‹7‹ AÁ≈Y-≈ˇ‚™[ï$ßL¢{ÂïWä≠√Ü˛æÌ∂€DVÀK¬.[NÜ%ÓXk§«Ø¨æ:•}%8÷Ùréq≥´üw˛¸Zóˆû9Ù•›¸y?∫)S¶Öä`∂ºk&CT+ªñ·≈_,©pïÈÚó9”eîÀJ‡î^,"≥'úpÇÎÿ±£Ï√8ÁŸq^zÈ%âlsÃ1“á¡¡Dt§Õ°‘1‘WXaÖ»a‡RM9∆9îº˜ƒâ£T;RMi )’™ö8M<ÈQ&†ÇSM§Ÿ√»«	dI<6¯#ãÉíaä8˜8ï≠]NÈ©&†H¿–wúˇıØ…ﬂM7›TÇCá«µ1˘»
+(P˛⁄≥¨Èw≈∞∆kál≈pÚ…'À<¸÷ˇ¯GŸá”O@øÉ±c«ä·¶øÕÛ~¸Ò«ë¸#„»0Ú´œâ<Î;4&Ô{˚Ì∑£TyúÕÖ	6T™ú^u’U—∏DÌ	√¡æÛŒ;ÂÛA‰ˆŸg)u,xÇúîÂæ÷ZkE:π•.!«î?eH+¨¬AΩÇE‰Xè+ßpßN‰ +ØºƒzË ÅSunLû<π@ngÕö%uû≤Á≥ˆhzW[m596zÙhy&V¬ﬂUGrp>QÊ‹~—»!(ˇæÃ7¶3∏û©IÌkc˙‰ß c5»È±«+ÅOdî6Pá¡Òl•t!«9oŸeóçdÕ/ˇR«õ"À )ôÖ¸.˚íÏ≤ríSÉ°,Îb€íä∞/xNîƒ¿Å‹åY≥CgôÂ¬B≈»¨ÅA Mù6’Õú1CúhŒ#Ì
àìzH
N•DÁãEÓ¸Ü"ﬁ`î+ßâß±~„ç7§¡÷gDyÉu◊]W>_sÕ5ÓŸgüu€oøΩ˚≈/~!FF}4Œ1bÑ§9Ó∞√Ó¥”NìµÀâ˛Û] eñY∆8ma`j‡æp¿»,!ÂTçøw‹QÇ*4òªÏ≤ã§ƒıÍ’Kú¥ªÔæ[z—h∏104w›uW·πe2¬÷.ßÙxP.§Xc ˘z∞ü„L,7ÿò¸p=Cf0¢—è˛ªú—√Ú⁄kØ=gªÌ∂sÀ/øºªÎÆªu∏‚¸Ûœ#Ÿ’‡)§êqd}ŒªP«ËÒ¡I¿0lLﬁqŒ9Á—)ÄlôÒ„«WΩúRûn∏°{‰ëG"HÀù∂9ƒ·¬Äˆ«^SÊ»*FÙW\!uC˘§◊õ &r }ëUr¯£.˝Ôˇìk–Ìˇ˘œ§Ó!«Ù R_ËôCÓôLßB´≠Q˜∆Á∏œ?ˇºÜ~|‚â'‰(kT8›jø\t—En’UWπ¬)Cn»A&pî…T—∫é˝Co(«ÿêI¯%„‰Ï≥œéz˝¸gA'4¶3®7ßûzj‘ñ#opœπ•Ù…Oï«jêSÙ7Cdpö˘m…Í\ó“ÖÁ\ \eçœ»"˙æ‘Ò¶»2Ì2◊¿˘Âó_.ı&nóÒÏÂ"ßÊXñ4RZaì“bS<Â¥°6‹pcW[*ƒ˙÷BV)fà ÏfáÜ„y?"Èl:π«*·=„∆OÅÒ#ŒÂŒ©F—i\ˇÒèà±LcÀ1ñG”û>”¯ìNzË°á,üF£Cc§ÔÕÒ-∂ÿB~z»à™≈ß¿¿„ø˙’Øå”≈∞iÔ∆rJ/	˚iîqÄ¥áì,ˆc‘”àSp®·á1Œ¯éë˜/ø¸≤…i∏a8QûπæaLœÚ•=VÃ_PJ~8N93¡–≠∑ﬁ*=H≈å‰ŸdSÓÙ;iÈÒÛ◊Às∆À#‹çÔã<'“[nπE~ó^ ¨îºr»!Ú¶ˇ˛˜ø•∑¶5»)uÉ˜÷q˜~èÿ;Ôº’t¨_∆‘ú!Æ›zÎ≠ÂÚ…x`ÍA3Íõñrè#O"ê∆1‰ò„oº±‘¡á~X8¬Ä?ÛÃ3e|}k’ΩIr¿¶Å*’Å‘[∏†ﬁ?Ù–CRœq~ê7Ù"étœû=E64ãÉ6ﬁ˘¸÷[oEÔÉ,¿/2¬±√?º@∆Ù]KÈ6Ù<|sæ÷ïR˙§9‰±“Â˘Ç7≤é8‚	<©,î“Ö|ágz¥)_ ô2'@›î„Mëe¯ÅoÏ©bvYπ»i©qÿ∂Ÿ÷“[‘cÌ+ñ∏í©ÑkúÂC%?kŒ‹eÍ]õTW[ª¿çˇñDqú1‡’©V«ö(!
¨“"\qé‚¸eS›+ÉSz¢£ÙB¢¿â™û{Óπ“¿Í#z§Ù3ës¿dt~ÛÕ7ã“ﬂ}˜›Â3Äkyé√1„◊à˛k$ú‘%í'ü|“8maËRvÙ$bƒ√Qo˛ﬁ{ÔΩ„°xGz:Ë’¬(«ÄÙà¿Â/˘KÈYczPŒc–ñßÒtmÜ∏`8·TQn»⁄I'ù‘®¸ _A4Eò˚1ˇDR*8ì°ëÈ£Ω.~√BÍ'2úÑ$}€ÿæxQ£ÓôgûëœÙt“+FèøŸòºSQN•‹M7›$Œ>:¢⁄Â4©öA¡A¢—√ËZ&√Ù\Qgÿ(?R¡…*"h	òd£ÏëOÇa
≠c‹Û˜øˇΩ»1é‹û{Ó)∆8ŸGÄødT–[Óœfﬂöto? –Õt8`î;ú lõ-∑‹Rz¨q»T—ª»1u~ı>æŒd¯àﬁnhÈÕéÎìRm.Œ¢t©V≠+•Ù…Oï«jêS&r»N/˙ã	x˝z–ò.».‹®,íÂ†ùço™, #c,ûç∂8€‡¶pj=÷Ür@ç
®üFÅí”ÒXï0∆:äXÖœ^ì‚}Í‹ã/æ(ì—‡D„L”≥År·;Œ|%
b|D›äE¯ ùSzŸ~˛ÛüKc}‹q«π?ˇ˘œâF6ëu4zﬂ»8gì÷sà¨j∫£6‹4Vl•åy„¥y°eå£•„™5Eóû2Ì¡¿#»u‘QGâëMåˆfÛnãjV⁄\-Õ©ot˘eCF &„÷õ"?'5WÔ√ÏƒI˜§(Íp
åa>Î8Yz…HUlN«⁄◊’uI«K…;Jå7¸Õo~„;Ï0Ia]ò˙T©röTÜ¥Ö‘däqÆ:{±˙‰◊@j7Ω£Ä	È˙ÙÈSpæÍ‡¯˝ÙzÇ®>∏◊íòæ8M‚˝G]’Ú2dHà–s‘ôÙX3) √†Ë•DÊu9QÜIp?Vf–’O|Ú˘M‚´1ùÅ«—∆Æ‚9Fü¸Ty¨9%†L¶ÿ1sO‡7EÂêIƒdñM9ﬁTY¶ﬁ4Uó/I95«⁄P6éuRÙ«ÎSÓé5iNì'Îj“5Æ¶M⁄=6ÚaÀGo
ç;c»P˙8÷æsM£DîñßJZŒ©ÿ¨ñ•"zÂ»)iÇá§Ç¡=L˛òK%=)«h«òß'¿q<ÖÕW¸4R§ZqçÆW©=3∆iÀA«Xc‘©sG !2ó:I
Fërúj"ÈÃé3MˆÔ®F<RgêeÄ÷.ßÒ1ë˙ù«8J…<QÓß0¥TFí∆Xc*‡î4Bö%†ﬁ}íˆiØœ†:<˛ÒœqG∞òº”sO†Å1™√ÜìIªÓ∏„é™ó”§1ºÙ'’ë§s˝Ô*ãÃáÅcN]¢˜õ∫OWM∫Áaºì=°∆¸íîÂr‡TÀªÑ^{ à,ÇC>–£ÿ-–"ú2£˜ﬂÔ°~√ıû`5Ì*ΩípDr“Í∏∆èó“«ºc…?ú∂{ÓπßÄÎ∆Ù…Oï«jêSÃ;‡˝Ôˇªªˇ˛˚•”GWÊiL*W»eî7ú5Â¯¬ r‹©Vª˝Z.rjÎXñ4R*4~‰'*˜°û¡◊≠kG˜Ï3OI
)8=`öˆÕF√§Œ5ç)J§ƒË≤Ï´¥wèÛVlrér}vf'mÄø4‡8Vzú‘N+¶≥‘∆fqπ “—‚©Sl8p8Ôå)¢∑îkËYc¢„¥Â∑’W_=jò1
XS`Ùq\'€"]ëq^Äﬁk85i8ëUxƒHdx$5“‰tA‚,ææ¯[)˘!=Y£«[	–©ç=Éˇ˚çùÆ§}:+2œ@∞ÖIÆ‘êO∫∆7˛J…ªé3÷∆Rœ\-rÍóQ©:ØOÒÛ©+ 'à≤$√àÃ0∆'›;~?Ís-x‡Å—,»åªnÕ∫W˘¡I°<HÔfí(ÏÜÃp=øÿ0:·&õl"˙êÍ=Á‡Ä·Qæ|¶wôsq¶–µM·7~ºîŒ–^Æcb-ˇ^•ÙIsÀc•…)|2˘eD9 Ä »¬ËBÇT*ã∫diSé/¨,≥À MNm≥mImQèu|ÅuU˝ÍJXnãH€ó_}„ﬁ7N∆€âC˘†¿’π÷ﬁjwˆ§·!çâ1π(∆2UJèu\±[£±ú9•¡«πfL±¨—xm‹IèÇO&hπÙ“K›É>(Ô≈dDLô@É48˜Ú£ñåbÃÉËÔ–õ•ÀÒß-d ÁÑ%;p∂u¬+ÉÕyá∑§√È1ù\Pyƒ» mÓ„CZ£ú˙eËóiR‰æî¸pkø˝ˆìaÅåb¨Îåæ≈ûAø‘s˙Á$ÌC˛	åÚÃZÃX?ûó¨"M}ıe<^«ìwWM_g|)7-LG• iºåíÙd±˙◊´d&Pgˆﬁ{owı’WK˘“ÛoIú∆Ôßuê	Æò$	Pœ∏ok’Ω œÔ~˜;˘K=ßﬁS¶∫V0Ω÷¥Å⁄f¸';CÀöﬁ_Í>◊´SÜå„ !„qùÁ(Èx)ùA5œD]@¶¯m≠+•Ù…Oï«JóSÊ†¨îO ñL Õ¸)•5 C–"IK_XYVƒÌ≤b©‚ã[N-‹P¬
Ÿgõm∂ôÑ —c§„1P4:Ó§‹ÅBË6;Ó∞ÉD“p¶4úhø◊öœÍp´ Úæ4ZDÒtôÉJp¨uHﬁQ7“¥ã≈ªûïÃikÇqjúß∆©¡85ßM¡1^z¯·ãtº⁄8e(!6æ¡∞§0lÿ∞æ—k**J≈èieÆÉR¸Úã/§7å®üæÔÖÚ‘u´ur
]Pû„å˝!í =*!⁄Â+?Ç«ª–(Ë˛JÁ¥µ∆©qjúß„‘`ú6É]Ãn-uº⁄8µkC9†A*∏V\u>’≠–€Ãÿ∆≈ÚÂ…;Ÿ“q<ºäásô¨AgM¨W2≈“ú*ô”÷fß∆©qjúåSÉqZ
Åd¯b±Ù˘R«´çSõºÃP6éµ?V!Æd*©—`MfîdfEùA«ô˝:ì%4ìö—ÉÕ˚≤˛#ìÑîXé
&Æ\˚[©ú∂6C¿85NçS„‘`úå”R∏˝ˆ€“Òj„4>9£¡∞ƒk≠¥⁄≥´8T r[>zÙË·Œ9Áw∆g»sÎz™¨√à≥Mo6gÆÙp_vŸe‚xWRî+i…ùY4ç≠N[ì!`úß∆©qj0N∆©a·8µkCŸ8÷IÎ¡—”´ëüJS0ÙNür )‚@3a≥3+"Ô4j‘(q§Y7êu˚:wÓ-QI
FJck˘Uß≠°—0NçS„‘85ß„‘∞ËúK‹±VßR#?∫©”≠ T∫uÎ&kÌÅﬁΩ{G˚u9≠©SßäSÌø•¿_g2Œóç≠6N´∆©qjúß„‘`úçSs¨e„X'E|¥r¢\*ÕÒ¨vƒ”ôí¢Ø≈ˆÎ‰∆©qj0N∆©qjúß∆i5pj≥Ç ∆±ˆ+Æ?ˆƒè O¡ƒ#v˙W”e‚˚çO„‘`úåSÉqjúß’»©Òg(«⁄ü¿¡è
ÈD6÷§<å?bRc°úÚóÃo„‘85ß„‘85NçS„¥Z8µTpC98÷?Ö¬W&TRúâ)öÚQ0™\ÍÍÍ"Óí÷¯ÛüS„“85ß„‘85NçS„¥8µk√íD®7fQUq¨¥oﬂ~FmmmWÃW{∞M¡îüÇ)6∆§±/˝…åS„‘`úåS„‘85Nç”j‚‘`XXj©•Ó∆ß∆±û◊øˇÎæ¸ÚÀìP$©c˝Á§îS6Â°`¸I6‚õ6
≈6ã∆ß„‘`úåS„‘8≠NÜ%ÖˆÌ€<lÿ∞Ò©q¨º˚Óªœw‘Lö4È⁄⁄⁄.¨çcÕ¶©‡¶d K¡Ëÿ?}	ﬁ4ÀÄø £ˇŸòåSÉqj0NçS„‘85N+ùSÉaq#‘≥˚˜Ôﬂ¡|Q¯u2>uê´å8ÿ›√≠OÓo[|i+2É¡`0É¡`0"‡@œ∑È9ßöøuÅÂIá[˚pkó˚léµ¡`0É¡`0Öé5ßœ∑sü]Åc˝∆oúµ`¡Çc\∂◊⁄PÅ %Ê•ó^r∑›zõs©`°¢#ì˙‰œø®hé{4öc¬ãÖπGì”ñ¬”Í√ˇt‡Å∆©qjúß∆©qjúß∆iå”SO9≈0@&^6#¶ß”È´|Ü:÷5ÍèΩˆ⁄kc√äº¶ïQÖáOr„P>˚¸≥h¨ê°≤˘‘e$åS„‘`úåSÉqjh»©-∑eXË^WWwzËCÔ6tË–ı¬Ôu8÷È1c∆úVLs™´ ∫Aá\€vÌ\J&·@˘‰#≥°ÍqÒ∂DTQFœı∆ôÏµgËÑ.{^Ó  w≠r{‰∑ºìÇËÙló\ MÂ	˝.˚0Ÿ[Ÿ'Á}2ŸÁÚØÁ∏¸eß|Œ‰N	rÔö…?ªú˜`ŸOﬁ˚E•î{ÔLˆ∆^˘E=ªO-wí˜1{Ôú¢óg◊Ú˜~;[T◊‚∞¡˘ú?æqjúß∆©qjúß∆©qZÑS[nÀ∞±&æÙê!CN√±nz€√- S=—;Kª∂Ì\˚∂Ì]∫M:÷44Stv°nï|rÉΩ±≈¬WªMÑL‡Ú÷b#‰ß˝†ŒÄiúß∆©qjúß∆©qjú&sj=÷Ü%	|Èœô8÷Ì¬äŸ≈ä§:† %ïNπö∂ióÆ…f˚K¥2’¿i&–xaŸÄjˆ\oo>JsëRßQ«± |4RÉå	Á8Oëg£ºA.bö…Gn˝q‡ÚG¥!»›;÷ﬂÚøpçC9S¢µıû,wQ†O‰ ">s&˛A·>Ô	¢àmTÑ±gqôÇbŒG≥ÔC∫öqjúß∆©qjúß∆©qöÃ©ıXñ0•€I*xkãÃô3«Õò1√ıÎ◊ØÍﬁMïKVŸ˘tö £j5ßƒ
é‚≠Üsâ—Œ†·ÈÆ0(ók‘ d±£ô|äUîÇïOF“å©¸MÉhgP
AÉﬂ ˇ~aò7∫ªﬁ#ﬂÊ⁄á\∫TÆ!Û^0wV√≤pç∞ñuæ1—Ù∞ Sò3xJ‘H∆X0NçS„‘85NçS„‘85Nì9µkC çc¥¶œ{ÔΩÁFèÌÊÕõÁé<Ú»≤öu±9†;Q*ß‹Okd2RûæŒè é∑…)qó€£ö,äÊFZ9»'q^*?.&ï”îëéÇçÄDπ:ÂµYA·=≤—c/ƒîmÓlTéé’—`ÉÛæÎ£©†aTü€oR„ñ<X.&ú—8hãñ“‘®7|Öø%<§Ú—ÿ¿{Ô@9
ÍÂd„‘85NçS„‘85NçS„¥!ß÷cm(5Íåµº˚ÓªÓ©ßûr'úpÇõ8qb$à’ÿc- ù*ûî´g›Wü˝#]*˜ﬁı,Zû=◊’gUf}*ªêπ®+Æ	ˇ«æî” D∏≥>‡üúüVMõ+Kπ.¸!˘âtv}*ÆyJNHÂπO˙√©ÏùÍÎs◊§Îs˜Kπ¸ºY}·sÂ^§æ>Ø˛”ÈÏ}¢ﬂ„yr≠TÓlQËŸ£©‹ªÍwﬁ5∑Ø>WDÈÏã•]Ï˘SŸrqπwÕ>õsz±>©| r∂åÎsˇ˘Ÿ«ƒ*YŒåS„‘85NçS„‘85Nç”$N´—¶7TZçc={ˆl˜Ù”OªªÔæ[ÑÒëGqÀ-∑\’•çD=÷¢~≤
GõvŒ˚˚úﬂa€ïÚ˛WÿØü“ÖH•
oô ÔO5<≠‡«S	œ!ø=SÏ£ﬂJ∫0UxøË{*˘y\™·{ÁK-ˇÆ)W‰LØLSÔ/Cˇ]R/_Ï˘„‘85NçS„‘85NçS„¥ß÷cm0«z1bÏÿ±Ó¸Ûœó≈„¸qYHæﬂª@±ÿ˙åM}2NçSÉqj0N∆©!ôSs¨ÊX∑?=yÚd˘€©S'◊ßO˜›wﬂIØı%ó\‚~¯·◊ø˜—Gπ•ñZ uÓ‹πÍÎ@«¨¯aΩ|MAHi⁄ìó∂ìqıN+º"·/®ﬁ¨·ΩöÛˆπt¶SE7ÈÎÛÂî*Ú∞•^!ê56„‘85NçS„‘85NçS„¥ßÊXÃ±n|¸Ò«Ó’W_uS¶LÖ…ª-ªÏ≤“S˝óø¸≈’‘‘∏¸Q∆[s¨}˚ˆnË–°nç5÷àMÙPŸéµé=	t"	^MókåñmLª¥˜ŸG:ù|ˇL:?OE ≈Ê¨êøio_:7—Fó*LX¥1?Og:6ıFxj⁄-ƒàŸO˜ø•ã ;ûéóP“…ﬂ”â]¨¥bGd.ëÏ˚j=6NçS„‘85NçS„‘85Nrjéµ°lkXØ|¯·á2é˙ÿcèq€oøÉÏ´´´w∑‹r≥§”3Ω€nªπ]√≠Mõ6nˆÏπÓπgüq◊^{ç|_i•ï*æT¡†ÏD©ﬁöåŸ^¥ZÑ.õÕ&ôÒ÷Zåfï‘e≤3M¶2πôe˛	o≈å∑xBê—I!]&x≥UÊ◊ÜÙTøÎ‹•ã€bÛÕ]ﬂæ}CNfπÁûﬁ}˚ı7Ng‘‘V'¸’ Û3x™ñÕŒ÷ôªo&>•s:ˇH~»îÛÕ[#ì_+1’Y(3˘Ö"£e7¢ı*˝5 ¢≤ı÷îtﬁJÂ‡›?zØ‹˚¶SQ4∂í8çä'|‡C=Téº˘ÊõÓç◊_è8]`∑Œ:Î»±#n4Në”UV^≈w‹1ÓÊõoqØø˛Ü[˝|π2sû}ÓπE‚é.º¬Páﬁ‚n1"‚4Z€4z∏“rz¸Ò«ªŒù:π7›Ïv⁄i«D˝5i“$˜#õú6≥úÓ≤Û.n”M6qó_y•˚ˆõo‹Œ;Ô,˙VÒ‚ã/∫	>êk◊º~Á¶{[û”˛K˜w;ÌòóâY≥fª7«çuL¯'ÈﬁEë”¡ûÃèÄˇf‰t˝ıÛukƒç7öúÊ8]∫_?∑Ÿõá˙±≥Ë@l†Y3g6ß≠ENÒe™≈ü1T∏c]xÕö5À=ÛÃ3Óæ˚Ó![∞†>zØ√;T6P[['äk˙ÙBß{æ[q≈Å“xú{Óπn–†A_º3äEîg*ïk<Çhπà ˜9Rvﬁ∫ŸI Ûk
˙Î(®Ó÷∆H’` k|Ú+
—D¨GòUî˙[∫îaV{ˆ_zw›5◊DÅÇ}˙ÙuW\qÖÏ√∞oºÒÜ+l2º5~;ﬂÿﬁ“πáÒ÷A¢H±«S⁄Öát9ä|€‡ü†«ÚKCDÌØ◊ò¯´a8oIGˇ˛˛}5™í8ï#⁄á€Ø˝kπ3Òqƒ—€ÌπÁûn≥Õ6À9÷#å”E‰tÌµ◊
∑u‹ökÆ)rr–Aπu◊]WÊï òH˘:◊á∂–ú¢/¡¸⁄⁄¸˚Â∏ˆóYÒØbr∫›v€π.]∫∏GFéåÍDc«éè?br⁄Ãr∫—FπM6›‘›˝ﬂˇÑéı∑Ó¯ÉõÓ»$√¢‡„û{Óqó_~y»ymñÛ˘Ûc´˜òÓm)Nw‹a·Ä6[Né9Êh˜“K/âm"N÷"ËﬁEë”⁄∫<ˇÕÕ©_∑LN≥∑‹|K˜◊3ˇÍæ˝ˆ[˜Õ7ﬂH=ò9k¶{˛πöç”Êñ”UWY’ıÎ◊œ=óÿñÉú⁄:÷Î±nfºÚ +Ó‚ã/uı°PÕü_Î“^Àåm8ﬁèn îinÓ‹ŸÚæôÃëÿt:ÌÆ	;∫j(ﬁ'?‰GT™ﬂ.L≥	
bÃ;ÏÖmHÅr+í®i«¸o4∞ñ‹¡°ÄÒø·ÜÜ‹ÃïÜwÂïWñÁ^oΩı$∫}”M7âìPxáL¡ª$?Dæ
Zó¸µAÑµ45‡5@Å_v	Ø^–5hÀ¸1a¿i>Ãü?Ùı◊_ãå-≥Ã2ÚßöœK/Ωti7NûSz∆å„ﬁyÁ…˛P=v¡ÀosÃ1≤Ì≤À.≤¬¬px=cÅäæ;=†Öç…È^{Ì%Fræ *´»˛;Ó∏√2$˙Œ–úﬁΩ{õú6≥úû~˙È2üAÂvÌ⁄…æ>¯¿vËaÆnAù‘!¯¡πˆüﬂe∫∑Â8e®8ÔºÛd(ﬂ9‰wÚ…'ªcè=6‹Ó¢Èﬁ)¿Iú.ôˇÊ‡¥h›j≈r:¸Ë·"ãö™à|ˆË—#W&Õ√isÀÈµ◊^Î∆çÁû˛˘≤ëS⁄=Ìµ6Ã±˛â‡˘ßMõÊ‡fÃö:ó5.ï d◊	RnÍ¥©nÊå‚t¢∏àñj‰ÙÂó_vΩzıcÆ“OÖ!Rú
olO°÷
b 7E/F)55™FÖw-<¯∫Ωp†ëw6∆ÿq«›/d#¥3BÆ0∂/∏‡9ÜÅ¡∂Õ6€DﬂwÿaôîéIÍnπı˜Ë##Âÿì£Fπ[oΩU¢©ÙêqN∆	ﬂ¡O<·Æ∫ÚJ7CR≠º¥íÀ+Ò]ºó¢Njƒ2w
~+¡Ω©(Nìp?Üal≤…¶Óˇ˚ü€lÛlO5C78‡ qÆqÃˆ›w_1·ñûõ˚ÓΩ◊ç∏È¶Ë>qÓµˇ˛çlÉ◊húí∫yÙ—Gª'û|¬çÃ…PŸ?˛˘ãû„∫C√2‹>&?—u·˝é;ˆ81Ú(ˇ^x1__RAë¢‹∂€nÎ∆Ω9Nå≠bfœ∏“†AÓ˜øˇΩ,uËt—˜pªË‚ã›⁄kØÌ∂Õ…˚¡·Û““…'π±Øèu£û%2ÃÛÈs9r§‹°KóŒ‰˝ ´Æî⁄.ùª∏≥Œ:KÓ–1ŸÎ™[Nw€}7∑˝v€ª´Øæ⁄}¯·ƒ®ÏóÍì≠#d:†sIW'ØsXVLˆIYΩı÷[Óå3Œê2‰Ü[l±Öp≤‚ä+J˘S∆öetq»˙g}¯·8Ω7îcéÎ´¡)‹qå{_u’’n‚áZπÓu2Ÿ™ Ì=°û‹}˜›Eﬂ]}Õ’Rˆ+Ø¥≤Ùhn≤…&r=⁄¨v2sÊ,wÁùw∏é; 5‡_ˇ˙óîÔ˛°éwﬁyß¸=ˇÇÛ›Á_ 2√}‡= øÙòv2âz˜÷ê[‰FÜ¨∑û~Ã1R"yªÚJy&J·ÿ„|}ÚB¡Ωiõ‰Ò¬ú<∂¢ˆYÅ˜¡Îñ6∞~AΩÿß©T:î•ã§l|€Gt·I'IYÉ„{ÓΩ«?*+k˘ÚüYÚ8HíÂ+s≤å.è?Ò∏;Èƒì¬ﬂ=9‘ôÁÀ>≤¢ûzÍ©ËYñ¥úZ*∏°\ê±ëKü®‘e∞ˆ⁄Î∫⁄:¶%Ã»tçöZÚ…'ªŸ·q8Á2S8Ω&8Ÿ£Gèß∫“À¿ﬂ¢hln ëŒ~©(Rú€˚ûãW±Õ≈>ßb◊Ëo§bÁπFæÁÆΩ˝ˆ€•"ûyÊô“0æ^ò\Óüˇ¸ß{‡Å‹aáñu
=T2ÿ7}˙tQ¯õáçÉ6T'ıgékà˙Û˝∑ø˝≠‹É˚Ë–h¯~ÒÚj¯ºA¸∏K(3“ºÇÑr‘1A±˝.Ò‹¸å•|¨$N˝M{"1∆h»◊ZkMnÈ6ﬁhcâ“3ë ¿†Á¸œ?ˇ\}∏•—>0‰íqy;.4–‡#ù„Ó~Y∏ƒ˜´~N;tË c™{ıÏU–§úÓ:U⁄Câ¸ò ?WYß˚P1Çë9‰e–†·ƒ˙ì{óuﬂY∑Å∫µ˚/ø+|fuÏÙÂ5%µn~]t>2L]·©W8p]ªvïKí‰˝ò£èëg¶ÁCïc˛ÛüEœ¥9Ì›´∑‘ÍJÚIπmΩı÷≤ÔΩ˜ﬁã xÁùwr7ﬂ|≥ªÌ∂€§Ãˆﬁ{o9Ü<2(<©úRgêOé≥å°	î3zò„\«èÔ˚À_ä„‰súzqÊôm’∫7I∆:wÌ"√€¿†πÆ]∫J h≠µ÷äÍ6éÒE]$ø˜‰ìOä„ÑŒÖS%x h…∆gŒAé¿Å(¸"#•œ‰?ORõ{‚IŸ6ó„S√Ô™ìUﬁ≤u%tçÎìA˜n èÔº€Í⁄S‰˚Ù∂[osßûr™L∂K'ß´.‘k"]XW…<o¥aVﬂQŒî?¡ó¶/&ÀC\Óz¯°ç@éßOü*ÁE/·Áº]ÚrZMvºmïπUMè5Àg-ª‹rn÷úπ°3]Ô⁄§⁄∏⁄⁄n¸¯∑ƒ`Gi±‘ñ:’ÍX%‰o5E∏¢à]êKKúÈ<¢ÅôÇt•LîEòâz¸≤¡∆¸‹ìsSh(2öÃ‰fù(ñ UpM¯iÙ´ØJÉä1å'˙~—Ö∫á~ƒ}˛ŸgëSF$Ω}˚v“3¶Ω"Du˜ªﬂIzÎÓ{Ï·ûœE√1¥∑ﬂ~{·ñ{b|–3
0∆i6ﬁx„Ç≤)ËıÃƒ“ò¸Y;£˝∑íıÚñäelîqÏ¶?K©6 ïƒ©_"€wÃF¬ﬂÑz≠˘}“¿IÛÔ—£{Toy/RÀ
@ÉüŒMª å˝å?£¡Á7ﬁx£k€∂≠8˛Ry˛å®≠âSUÊôLa∂¿≈],˙£ÉÍ≈üy—ûà:ëüﬂÜÚ3“Ì ΩI»Ω&gûuñÎ:aÙj¡ìÛS7søÕdK}r`1&î„öfL/§¶ÖÁÀ(º◊0Î/·˝u,^¡±‹gd¯Œ;ˇÌ⁄¥©ëw;Í®£ƒ˘ò¸›‰òºV Ô§ö&|{‡¡§-`‚ jóSøéËc!gËQ[‰=</Ë=—œå£ƒ	√QÊù¥˜åtPÙ2uÖï5êœ´Æ∫*∫]éé¶Áîﬁp‰ò:Aè*u]åQ¨zápÇL÷’˙toÉ¥Ëß5π∫…3l∫È¶¬ºêa@ ¯™´Æ*eG÷
2˜´_˝J)zA)cŒ_'lô „ËNpˇ˝˜À=∏7ú¿Q\÷¯^¨ÕUù¡8˝i”ßπÜnê∆BÎäÍz•;x˙Dù¢HWY9î„Cy¸1î«∂≠™=ΩÙ“K£@N/∫
{Ë√'4–èIÈÍ‡è˙ì´ﬂÈ¨≥ŒY‰>Æ
èÛŒ*´z<.Àgy≤Lñè˙ı∞ŒıËﬁ=≤óÈ–‚Íô°Â ß÷cm∞TfÇ(ñöÔS'≥ú“€ÇSçÉÖEÔÿú9s‰;év˜PI∞ØkôT.˙öîö4Px^'ë™˝†aRTêò‰$é+*ñ‘Á'¯tÍ–Q¢§˜‹sØ;‰êÉeRù#C#˘—«ãå
å/eMõ"r™˚‡UπOÂﬁu¬Ñ	ÆSßŒ¬=Nÿj´≠d+fÃ<q±±>yIAæ¿2À°1A#	MÅ_êAA£Q)ú˙Nv}nÕŒâ}‰æ,å@“Ÿ √0õÎG‰âûcå1î!ZßïGf∏Ó÷≠[É˜Àdí∆¬µN˝kSA~≈O≤qà‚”KıÈßü ∏=ïüt(?mD~Ê68˛˙ÎØª^={:øm¢ﬂ…Á<.?`@¥íº:◊Ä±Û≈ñ/Lq¢ìˆ≈{œÙZÙw◊Æ]‰≥:∆Í∏~%‰˝∫ÎÆáÚÿ„éuá˙ÊîSN…¶ø∂9ÕÀY*2å©#èÖ∫ñU3(SÇÕ˙‹Ãù¬:“)ß{’†UYƒ)C≥¡∑œøØ∑IO]üØcÄâ“|pn*¥Z›[¿OÓ¿*a]˝:Ø§ﬁ“øµ=¸ÓªÔ‰/Ôò1o»g%¥}î‡lÕµ÷}J¿ôyÁ&≈ˆ—˚ËZŒY$πÔ≈⁄\)óê/t:√;®O<ß_WTüÙl†O≤z í«cès|HL[G{ä^æÏ≤Àd®s!Pû8Ÿ˝Î_cÔLˆÂg:¥©©q©P^U5À+2Ù√„mO5*À~[Bª€7wn‡=ì÷üç≥Ñ‰‘R¡eÂXW˙∫o4"ﬂ?Ÿ’§kBg,Ì˘∞[~˘Â≈ ß1°—¡ô¶!ÒùÎØæ˙Jî˙gü}çÒ´t®râßZQ_≈B…»4y=ƒ“ø·˜mbîÎ8<åaçú7lÏ3˝Ê8‹“êØ∂⁄jr<˚i•ÈtˆZuŒàÚü}ˆŸœê»y¶pàbPÏMÇ&c£—†xT∑Xì7*âS=G9Dﬁ¥ì1’}§bÃRëEújz∞H[#rO$ù˜˝Í´/Â<¯Nv¬/ÎjÊ4…(ÙÏ´√¢Üm)˘·/ÃÈ}∫ÊÇAõ‡&iü:WΩí–◊‰f¯«ASá™∏ù)ÈX˚≥)IV˛¯ÙÚé—»XQz€Ëù°.2•⁄Â‘/CÁ?®#É+Õ˛(Vüt◊1±$YA:fñﬁÊl ü´'z?5Ç9è{–+Ê£œR}\ªˆÌZ•ÓM™„≠6ﬂ|sqjqfë]@/£:∞ÙXKê$‘£;∂›I∫5\ﬁu◊]Úwø˝ˆìå“ È!V>R©d~„¸7¶3xÅ#è<RŒ!˝˚äﬁtΩﬁ◊'ºnÕ›{°Â±JÂÁ€Ìo˚õ8÷‚∞&Ë∫b∫Pπ·(o¯H>Óº„ÆÑ,ÁØ◊ÃÇò⁄nê}¥$Â‘÷±6îïc]È"q'~‰∫uÌ(Kπ0.Ñq*8U|÷‘ojuÆ1Q4Rˇ¯«?$}√KçÅJv¨U±DcLLQ¯-Øø2—Rô»!ÒR¢4≠›XË≠H*î¶;ÈR KS±F)êâ/∆è€Mö4ŸıÈ€GpR;≥çn÷ê¿∏†zlÿ`?¯‡É“ê?˙h7Í…Q·Á#‰R”‚Èt¸Ïƒè&∫◊C√ÑT7¯ˇË„èe-]∫7BG/û¶ÂdùÊº¸◊ÕË˝3˘Ü%üªΩo&Z3ÀÀπ†,ÔëKãb=»†¡⁄yè∞í8ıﬂQ◊S∆@œåÛz»Ò˙¬QÙâπﬁâA+ÆËæù4)2»wŸyg∑ÎnªF%Ò›wSB«må§êˇ˙‡_ªÒoΩ÷ó~Ó±«m0yY´„¥HÑ°k◊n8U˘9z¯p7j‘SÓ_~\vñn“™˚8zÙÀÓ`oY,}∆lù\˜Ó=ÚŸ·zé•$„Mó´`Ò\÷ÉUör˚êuz’xÜ∑ﬂ~[&¥K∂’ˆ}∂8¯»˚ÏŸsdéú∆Ÿ°ÏèÂ}∑]w]£YNLzÈZÉúzHyFz∑n]8MË„n∞Ù’√a]aÜy“éÁÑztõm∑ï‡6u'ø¯ç+ú–…„^ÎÌ.uåÌ Ú£è>⁄juØg∫mõ∂n≈A+ §cÿ(ó\tâËœÁûN∆±„Ω˚Œ;Æ/ká˙êı«YN˘{ÛÕ7›·á.|ºıˆ[ÆKß.—èáz8yñÔôÚøGm.:„©∞Õ=‚»Hg∏h©&Á6€Èus˙^Ø-‘'£ñŸ„Yp"ø˝vRÅ<™TZI{z¡?/p˜ﬂwüÿ$mºqé´EN’ÖóÿQÿMÿ≥d	ê	‡ø?<æmtú√?¸p$ÀËÀm∑›&íÂb√¯ácN |ãêÛq„∆∫ô≥f/q9µY¡ÊX73ÊŒù„æ¸Í˜Ê∏qnü}ˆëq◊8œæc≠Ω’L ¡~´O>˘DzZvçÆbΩ,ïMÖâí(£tJm2c∫2ë)î…)9o¬‹öÜ)ÎËtôÑåøhc4Ã(_$ÎA¶Ú
“;∑`úQ¯ô1ô√Ü!ëu"™(tzQHü2Âª˚Ì°“?@å∞w‹Iñﬁ™Øœ∏<¿mtD‚O8·ôçX£™˛DÌ⁄∂s8˘d9CEÁÍ´ØqQ&U&˛ÀG†«„Î)fd˛ëli§‘qà SO»_5¬Íá¶∏65—FAñ	ﬂ)Ã©hÇèJ‚T'ãÎñTË0ø¬Û‚Xè?^Óç!ƒè&Nå¯∆ò†—W0ñña∏˚nªª¬sHo|ÏÒ«r30Êﬁ[-˘Vƒi‹Ø÷}©ËÑ¸=êåzÜ∂›n;O~∆ä¸0ôÜÜF3	„,g”|s=YŸÇéN .üù»Û•¢cy#©`yõ¸ºAπgMEcÍnÂ£ÁòI»0yfÙV°ÕOh≤∂kÎ˛pRXO~Bxç'ÔÙ§á'ÔÚ:Å“3œ<-„FqHZÖú∆Ç/ŸÙ˛Üúúö
"Á8[)˜˛{ÔIù!m˜¨±ñ/ô%ÃﬁœÃ8ßqGç:∆Óæ˚—÷¨¿oµZ›õàIÄ(tî©˜L‰ÿ°C{w\_W∂ï√d¸Ìü˛¸g9Ô¡î1ÀÌ;vê{øÙ‚K‚H„êMü:ÕMù2Uú ‰wÙË»e¸—TÉr:£>‘Ÿ1¿™3∆ÜmnáPg˚'ûx¢;ˇºÛ§◊ìﬂ÷U‡öŸÂ8 AüÑˇasEÚ¯Ù”2˜ÚÿZ⁄”˛˝˙á∂hmƒ'eÀuO>> uË‹—›pC]Íh_ˇaÎb#â,^s≠ª˘ñõ•ó∫xVVØ	eıñõoñ†⁄˚ÔÁe˘‹sˇ…ÚM#nr›<YÊY˝ˆ«úÙ∆nüzÍ©–Y“rj©‡ÜrAY}Æø˛˙Iï˛"8“å#$öK‘gA√âV«Z«Z´√≠ÇHè77«DaU0pTô 
«•cßNÆ-éã˙ëíÃOÛT)I©çE	cÛI4ú≤ ¶Ò‰~84<Ô˚ÔøóÄ\Ë Öî!;÷.ê∂.Az?ó√ıÃY3Âz=I£¢ÅGÅÒ˘Á‚ ÙÈ≥TÙfúG⁄1ÎÔê€Q”≠ädem”LAØllzíÜÔö∏ﬂπÔÆëÛ\.RÀÏu…f2òJ·‘ø‡áf_L¢’.tzXÇN1¨0†ê9‰n]ªÖy∑àoæNù;…gÍF ‹Mõ˛Éõõ„ÓôÌ6qñ≤VƒiTÜauÎ÷]&˚C¶ñ_n˘DN·Ñrï2LáÚ”≥áÔ˙√LD$ÑrÇ>‰3«l:y¬ãÖﬂ˘MtOîÍôiÿ≈¨œµ\(«jMû¸]ˆYëm/ÎFıì…3∞ü?èd<;ÊozXøfDu¨ùåÂÕ÷ìŸÑÀÀ{G7iÚ§hå®æS∞
Ât˙å¬2*,√¬Îô@ä^˝Æa}Íﬁ-;π`t˛R}‰T⁄RdU‘2É5ÁvK‰4.„“^3$îcùıòzÜo≠∫˜áêÙdæo⁄%Ìrma*∫§∂v~XÓ”£’:á:íÃMﬂ¶<IÔÂz≤  ﬂ5ãgw˛º˘9}—M8Ÿ¸nrƒŸºÁâú0D9ÂŸfÑ∫;„∑π≤Œ¸úπs‹‘©SEnë)Y ïãØ:ùÂOªvÓ∂›≥r≤◊√}÷≥˘EÂ±˙€S÷êßÏîœtX∂]CYP;¥P¶√2ÔËÈ¬ˆÓÏ≥œëTÓ6ÿ@Ï—Ÿùªdıp¯Sáë„C7ûÑÉ.]rô*Ÿ°}Y÷Îsr⁄†-…ÅﬂRŒ{›.J_rrJœª‘ﬂ\}2ñÜ÷∑jz¨µgbı’WwS¶LâR¢Q8“:–W√{seŒ¯OÆ≠Ü5Ω≥KIxIy4T©ÏTR2óT*Ì$·Ω>˚øz÷rLÂ«•‘ÁÆdW}äoi=ÀIUê·Fó§8D◊p∞>»ﬂ-˚˚·ı)π≥Lhï{∏ﬁΩ˚dœIÂ˛§RëÛÀﬂΩz∏^=zÖœëªW¯Ø[ÿ ˜ËŸÕew÷gè'ØY~˘úãˆ‰û3U#˜ÓŸ[ﬁ'˙q˝X}»˛Æñ ˜Ogèg?-eËóá\xøòJÂKP /ï˚ùÏu˛oe/áòÏæîæNö∫‰z˚ú∑<HepÒí
§Å◊ÒcÍ®uÈ÷%º4%ßµÎ–.kÄß‰IÑÎ^b`gÀ≥GØ^πwrÆ&ºüL™’ªßÀ^ˆ˘”≠õ”Ì:∏ÂWX>[·§˙E√Ã8Ì÷#‰DÊîÛÔ¶úˆzEúræœi°ú¶Âoü~}"N]Ù¸Ÿ'“k˚ıÈó/œ‹3Ÿò ©rZ +˜Û9Õ÷ÉlôR_|N{vÎ·zRgrú¶Rm\Ø∞é§\ÔBNCÙÔ€øU iw (‹îSÍK1N1ﬁ≥2È"N≥ÁÁ9Ì‘°SnR≥TINq‰Wı≤Ø{ªuÔÍÒû¶{súvÎoèn=<N]"ßÙ\˜	Â(w≥∫∑¶¶mƒùrJQπeV_¨P ß˝ê∑\}Ë–æC§ìıAztÎ.A;_NU˜vm/∂b∫W⁄^=≤˜ˇë’PüªOø˛}#ΩÂÀikiO·+ÄH%rJ˘	ﬂûç‘+‘Ö⁄û*˙ÑvT¢Ó’„Kıi ßj#uË‘!‹:Â9ı‰4[◊r⁄±3s2tå8-9µY¡ÂÇ™òºLAO5„ÎH-¢ß⁄4¢¨§@J⁄_¯W'Ø@I‡\´Ò_È–^¯îÀØÒóù¶r©îô»ËvY’Á4≈&üˆî;=:™û∏¸˝º£›)Ô÷˜ÕJôÏŸÅé1Jπ•“ŸΩ˛%˙ùäûø‡·¢ãR.U˚¸XJ«ÌdrNCöÒ∆ jYDT·ªF˜íF6ìÀxNEÔ‡H·uﬁı)ﬂi»›+;ò4ÀK*Âó∏<`æqö>ï6NçS„‘85NçS„‘8ç∏ú·Ñlê†ß§Âk@•⁄9µ…ÀeÂXWKÑáﬁ±gü}Vf≠$U%+”)I1“%YHaR3z∞q∞ôUÛû{Óëø’PërqÒY]É‹ƒ≈◊˙u.)+ßX˙SêòÓÈÇ‰‹¸AÏwÉ‰4©¬·ª˘gnêZ•Î-¡•uÈ™\Jd&*ÜÇY¢]Ú¸ûÆWby?›%Á!gÚìöL®Âç+Ã4ºyv÷ggúß∆©qjúß∆©q›Û≤K/sÛÁ◊∫~˝˙&rzŸeóä≠ÀêV¡©M^f(«∫ö"<8»L¨¿,äŸeó“2ûË≠∑ﬁí±"+¨∞ÇÙh#|åªÂñ[§ßªZ @ïã.«P8ceê®„eTL\zsoÛZähüÆÈ®”U$@ìåNdëU‰rE‡
öçhÜ⁄@¶∞»ç„-ú‰9;±dêN[dù‚ÇV-»øX·¬AÒ1?æ“œè
Ú-©+ú:”†!p3]∫‹DÅgƒ∏ÇF(>Åu¥hï7ã©qjúß∆©qjúß∆)úˆÏ’3«m2ß={ˆnUúZèµ¡ÎéÚÂó_.<0ë=‘LñÑìMèˆ»ë#]ÔﬁΩe,63.“sùIXñ§Rkù&OÓ≈fIÊo*#È9ÖÀ˘ -ﬂ8dıeJ *Æ$±`o è¬5ÑÉºöR—5∫˙B*–4+ù^:ïü÷ÂåÇ‹√Î¨ﬂö$T@_™`.Œ®°À‰fˇ
⁄Üÿ#)ˇ9uÀî◊0˘¿oÆAKebìwm/˝•{Éìöƒ¢·ø!…5NçS„‘85NçS„‘85Nrjéµ¡Î≥B“`rXfôe¢œå´Æ&ß⁄W.ë‚Ãi®Ç®c¡Ú˘•W‚⁄Kl¥&m~ü¬uMs—“@óKà≈@É¸á|ì*T§πq4DÃµ˘ ∫<Ö*‚ÏçRŸáèâhYüTP¿cÙ\ﬁÏ’'ŒØÜ°kI¶
ò†`≠≈¿Â_=VñÅÛñÎ(,òå∑JoÙ;^Éñ—QUÅ6òÅ7âo>˘*;$*eúß∆©qjúß∆©qjú·‘kCŸ8÷6&°z†≥ÇßÚ!…ÿËòL¡:¶—æ|bMlËK‡≠eX–4¯ñ◊ô^4„˝F&(7äzŒ‰Öºb.åFcÄº_ÇÑ¶˜Ïôÿ˜¯°¿_é&£Î‚æ[&HWxî
“£2˘ﬂ~œÂRÌ
‘\Û·∞ﬂ¯DÎãÊ∆ß∆©qjúß∆©qjúß9µY¡e„XWSèmkáˆ¿g'tHGiNyu(Z_QÊSrXÕ·â∑x 2„ØaÏ´—†∞¡≤cª$y…W‘Å6
ymMÉEJ˝≤ü¨ïük#•—`_î4ëHlªîÉñ[;5…M˘m∆‹D]?˝)µ’ÒTÆ`úR‘¯FÂ–r≈ñoÃD„¿åS„‘85NçS„‘85Nç”Üú‚PW[™°ÇkKù®.«Zó_p.ó§√qºà_4QâjﬂúäRÖëQ"…Ï2
ô®	Ç ÛˇgÔvúÜÅ0ÏI%ËÅRUN˚Zº ÍÙ9x.˚P‹Àâ√"±‰çœx∆NA\®v˘~)J’÷â„?kÔ¸˝3§Q±IVº ª(èS2„T]‡ÙaôIìu‘Séáü¡b uÅ´%D¥?jﬁZ≤{JÎoKV2’ÔLù⁄jOi˚bÀ™ô?u·îÊ˙ZW—≈∆-Üñ&€òßË®™v¨\˚ ÕÊTN]v‡N·N·N·N·t‰‘ˇˇ¿≠Î˘>óá˘f|√pºú¿⁄&Y≥	π9›©ïÕ
4ñÊ∞≤}z∆‘pÀîÇ>ÎﬂÙ4E‚qB)êçÆµÓH≥ˆ®Tìz‰ÌTò)fìœπ£¨ÛæD5’}7äŸN9Ó«\bÇí∞zkèß‰ívH‰`~N·N·N·N·NGN˘≈‹”4=îª≥÷øá√˝Âr˘¿∞<îcòX™™∏ÓƒïJ»¶&f?Ê⁄Öâ2∑äÖŸMùÎWõRÎ(ﬁı§ZlÓTbgµjßvgÈD_ıi-jfÕÄi˚Âd9πé∫DQ•µtÈ—j"ídcÂ¨\Ó˘ü•÷e-a‚›[Õˇ‘îX]8/“∆Aœï|?ÜM0ÅS8ÖS8ÖS8ÖS8Ö”»)…À¿≠q<ÔKL]4†«”ÈÙqøﬂfX^Np›´ùjIZÏ@YçGbj´>Œ¢ÂÙπ#Òô'Mï¨*oL[j@⁄g2™®‚TW©÷ À	‚≤KZÇ≥˚àïêhSoSo•SN’&§ˆ'ª∂.áhrùÛ]…âuA[`í≠ùÇÎ€∏$Ì›d}icl	J¨ÏÑÿ∞y!N·N·N·N·NGN˘•‹%Ü.±tâ©K`˝}ﬁæúœÁ˜wwwüvª›7ÜËy£ü`$ºê≠ì˚–⁄TRˇY?πâ´!CÎç„ Ôæ ¡:%·í∆&26ñÕK
3¥\±{˘Œ 0®]πrır˝eõ,8ÖS8ÖS8ÖS8ÖS8˝N¯(1sâùK]bÈSKΩã%¸ÌºΩ´˚WÈÀ        ¿Ü@ˇò∑Ø5®.˚ü‚Tû›ºÌÁÌu}M`        ƒ¿∫NL´˚{)¢˛$¿ †1Ñò!∫¬    IENDÆB`Ç_Lhttps://itunesconnect.apple.com/images/labelconnect/nav/globalnavbgblack.png‘/+01OYbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ahttps://itunesconnect.apple.com/images/labelconnect/icon-help.png“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫Éµvﬁ»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:01 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:46 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/pngT1174_Wed, 15 Jul 2009 18:31:02 GMT_"1c81065-496-4a4cdea9"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryñ“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
RW`knt}Üàèó¢§Ø±≥µ∑πªΩø¡√Œ–“‘÷ÿ⁄‹ﬁ‡‚˛(7<ALlzö†π√»Ë&36;?S             l              aOñâPNG

   IHDR      (   ˛1⁄€   tEXtSoftware Adobe ImageReadyq…e<  8IDATx⁄¥V[oSG^;õ8v.‡&ìL
X-ÅBRzç*ıÅJ®/ïx·ﬂ'/Ö–Ç(ë™H π4úêõ„_àSª'6ﬂw:kkVG˙‰={fÊÃŒŒÃg€ØóÆ*ÉÿÅœÅ^`;∞SˆgÅE‡!(¸rÍ‰:Cá¡úvﬁGÄ¿9˘@Ilû ~úÌ˛Ì≠¡]ùª}ﬁ¶v∑À’ÃóŸ\.ï~µãæòyã/&∞ïÆ" [&áßÄ~.¬˚zBzB}6õÕn G±X,åNDG∆'"≤uN/Î\Qkg˝ﬂˆıá?€˚çvñYYQ…T⁄B)
º£ue´ˇ¬Âkáuâü˘–wÏËÒ÷f_)wÉ∑U~uµ‰»Èp®Æ@ßÍ¸wG‘•Õ‡ù{∑ÒxNárìﬁÆ¿Œˆü˙˜ómOHµ¯| Èt®¯“K5<:Æ"—I8Ú*Oc£•CÿNMM≥ T/è∂ÆoGGweÆ¸€⁄,g:.ïÜ√π˛ÍﬂŸÜÌRä∑©6êŸÿÇıÀ„∫∂l^˜Æ≈Á’u⁄Õœ{¨¸8ùÆ™ŒÊ¨£ÜÇ›•¸ïKCCÉ∂ı⁄U…˝ÛZç=çX«79£
≈Ç,◊Ë0√U>üœôîy}	&yììïÂ+yöÌ∆ÿ‚ﬂÏ≠TfT’"”B[YN3¬k57?Y-˜=±~´IôÌà]&«Í(6∑´Tfa'”Èu^.¥°-ñÏÌátHÕk|…äG¯≥ïG˛·ªØç«¶Æt	Â
˙yUﬂÚ`MåÎ^g„s lê∂"u®+œ∑‡l®rrZ∂~|2ˆ◊D"ôJª!_ì«ø’Ìn•¬ﬂŸl"ΩúâGß¶#2æx∫ﬂÄ¶Àà~p¿¬@âQ5·Ä=è»jMlN‡≥¿¿!†M∑ßîX∏K5)¿ ãT¢XñµíõLÀs—dhr»‚˛ÿfx◊&±‘Ä? >f‰Û+`8≈Ni«jß4
ß¨†TR‡îÚÀñ]Ó"è√&á«ÄÉ¬)‡îı∂*ú¬≤ßÃÀ÷#8ΩSŒ){¥3D/¯"¨ùU·u®+[1˛˜Ë7·˜4‡?Ï√HÔ|_Në÷õA∑åÀÂ]‰•Èº–RÓÏ8•∂ã¬)¡Ä¸upä∂ÿuy6Î‡îV?ÔN˘§N—∂[ˇN…	ß¸[ßh€¨CZ»À ß∏?íSR≤\≤À!/ƒÎ‡îx9IEYî®£$ãÙ#8eÜ∂B«Qª4¯=·îqÑü¯ NIHó(k˙ñü…fr ü†ßåRWû√Ÿ≥ yHˆz|	Nôßd¿)‡8≈#úíß§¡)Û2æ
2ΩòlQÿÔ9¨pJfÉ(Yà,Ukbs_b˙Ä›@ìLi KI>è7i¢Å∑ c…"±Gˆvª    IENDÆB`Ç_Ahttps://itunesconnect.apple.com/images/labelconnect/icon-help.png‘3+45OUbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ahttps://itunesconnect.apple.com/images/labelconnect/lc_tab_bg.png“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫É¸;»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:46 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/pngS183_Wed, 15 Jul 2009 18:31:02 GMT_"fd9948-b7-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary∑“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
RW`knt}Üàèó¢§Ø±≥µ∑πªΩø¡√Œ–“‘÷ÿ⁄‹ﬁ‡‚˛(7<ALlzö†π√«Á˛	#027;O             l              ]O∑âPNG

   IHDR         b˜„ê   tEXtSoftware Adobe ImageReadyq…e<   YIDATx⁄l√
D @—ÓÏã"íH/"Ú}3òS!ƒá)%J)¥÷c∞÷‚ú√{OÅ#œÛêR"ÁL)ÖZ+≠5zÔå1òs≤÷bÔÕ9á{/Ô˚˛˚` ;lRmfÜÆ}    IENDÆB`Ç_Ahttps://itunesconnect.apple.com/images/labelconnect/lc_tab_bg.png‘7+89O^bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ghttps://itunesconnect.apple.com/images/labelconnect/btn-choose-file.png“./01X$classesZ$classname¢12UNSURLXNSObject#A∞√gìwØ»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:01 GMT]max-age=86400_Fri, 17 Jul 2009 02:09:42 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/pngT2262_Wed, 15 Jul 2009 19:08:58 GMT_"2ba301-8d6-4a4cdea9"Uclose“./de£ef2_NSMutableDictionary\NSDictionary÷“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
X]fqtzÉåéïù®™µ∑πªΩø¡√≈«…‘÷ÿ⁄‹ﬁ‡‚‰ÊËˆ!.=BGRrÄ†¶ø…ŒÓ+8;@DX             l              fO÷âPNG

   IHDR   a      î∂(   tEXtSoftware Adobe ImageReadyq…e<  xIDATx⁄‰XKlT◊æÁŒœ€ÿŒQ;Í'F•Ç,®»H Å°∫T(VYuo”M7,∫e¡ÇÖ])T5JA`∞#h;à ä^∂Ç†ı¡Òkwﬁ˜Ù;è{Ázfll≤i≈Åπú{ŒˇˇÁ|ˇˇü°îÊÛ˘˚'&&C·»´x"°º›√ÎÒ‘kõﬁ{wK[ìÕf√
…Ârˇª=ø›º±q}∞ŒÎ©P(%D’ùPÖÇBQ(QTÖËs VÅgâ¬˜6ÁS¬_ŸÆÆÎƒ‹‚‘
Q9ßTU¸CA£p˘ÑH∞À~TßR˛∞∞]A¬éUÿå¬
ÏTgF0˝ÖUDËMÑI¬&UIƒµ©»´'°ÁÅÄÔ7ùÔ√M‰ÓwﬂOÜ^tæˇÎ
∑SX
Uï¬T!ó	‘Âa:ïªBM·@EöIÑ
Wêk.Ùù.úŒ]¿≠cZ2S9;Wó™åêÍ´g6ÉÄET1¢»5·îÃœÃ6]ÁB∞*b@MBN&ZK¶Fø˝ÓΩ∆øÍh≥èˇ¥a}PœgZñ“2ÿ#¶à≈+JÈ´B>Á>Ê~,√W†,Hí!]º∂:é+ZPáÖïEW`
 Hü»!¸nx€¢-á}m5ú”—÷lˇ˜‘À-MÔFcQÉÿJWqH BAïSËTbØz¡Ü~\cb…?9∂≠ÀXrZlÈ2cVÀ¬Ë%•Œ’&,BÑ‰π&i©b*…ÎÅ¿¢ ß>Ô8µ»û◊ıX,n≥©¶_8Jç*√“©"ÄÇT$°iŸl÷a∑{º>˝gj Îı.Y à$ÁÂIW
•¿®TÊõƒró∞“≥4K&ìJ&S&<ûL.;;3≥a√ÜT*5==]SS„rª?W7‡c‘8›d±TYaìx—‡.BFR8Õm¢±òJ®Ã∫8ªà^Q&âû<©™¨\≥fM2ôÙx<’’’ïïïz4UañQf©Ï‡UV¬g)ñx<û‘í&®ìæ§]µ„ÙH$‚t:´*´†^:ù^Ò·Â∑Xt6Ï8&ãR^ÑpY©&ÚçªYµ ô)ïMgêõü|¸1‘‚FGG#ë|¯ÕÿÿT8Ã˜∫Å>˘î05Ç¡∞-À#ÃSY¿YJXÇ•æææ≥≥”4Ê´Ø˛¨›∫uÎ»ó_Ê2ŸÆﬂv!Tåãòö(<ôàQ¬%ZYi‡s£ä ⁄Ò[XX∞TA¢∫Äb]7WÄÛûûè4Mº0g˘˝æ4é/ÌˆÌ€x©÷◊‘’B
¿èBc’f{ßÆ∂¶¶VúéÑ3Èå”ÈÇ¡ÅÄê~Ò‚»êı--≠Ë∏ú&íIß}~§π›n≥6#ï<wÓúŸ›Ä¨—Øøvπ›UUU\√$ÿÊ"/√PÃÔ˜ÉA&·çÜ] :Ç—>eöâbOîB'ª[∂¥WTT¸u ìJ„¿¶FÔØ^W›◊◊|}˛˘ﬂüNÜN‘=vÏÕÕMò\Ω:4>˛ÿÂr˘|ææﬁ>ÿ3Û”(·Ïvˇæªµ•ì˛Å˛Öπh¿ÔÔÎÌÕƒƒƒï+WÚπºôôã«√áè∏“‰7n‹¥i”»0√3??ÁÛ˘{?Í+H»Á®b)êÚ˛¢àãòb÷!√∫·UóÓ◊˚±)˚Òı8ñ±Æiqˆ`Î¡`˝„«èggfŸ"€≈ËÿΩ°°·Í–’>|jLøöÓÈÈÒ˘ºÁœˇ,Gé^∑Æ:ìÕû8q‚Ÿ≥güùˇ,ïN˝Æªb∑oﬂˇ¯‚HŒgs†πuÎ÷©SB…€∑o;@™œÂ≤8Î”OO≤?'OB	‡Æµµz
˜·ô-H8%$ÎÑ©ö4+©iI!9¡%ã˝∏§Ip¥®º-N´“u<UUÖ>QD36661>Å#⁄€€˝?“yq·¬¿'z∫m€6¯Ay„∆H»f≤«èØ´´C>b(%sssªwÔ∆+p«éÌ@§öß‰ry<·eÒöJßA…Aˆr°€∂µµv	/^,- •U≈:N√GE^(Â±z(∑ˇ~á√ÅîGA/¬≈ßÕ¢æ@©p¢∆G,cÁŸÌp1&ÛÛÛ»àè=zt˙ÙiÿÉT=sÊÑ!ê
ÖLwXÖµÄZ≠≈§TB©]Àx«:‘7‡πwÔ"”€€€——Å“”ÿÿOï•úúúúôôŸ≥g»<à\^∆««1ÈÍÍ¬‚Å 
 ¬’]ˆ˛˝˚ÿ⁄ºyÛÛÁœÖs¸Î◊ØﬂºyìêÚ›{ÒUæ0–L	◊Æ]ÉÑ’ñjS¨Ωl69ã˜+±Ö¯ü={v◊Æ]›››hxÌÔÔá√†¡+h|ƒ*:tËòùùΩtÈºÜELvÓ‹	ﬂ¡;ê i{˜Ó≈jbÄÙä»—£G±;<<|˜Ó]S1—°ÃW<ÕûeçÉ._ælJπsÁŒR…Q∂ºvˇ¸ó3ŸËèÀ◊†
-À¯Z ˇÂ·◊˝Òìc(™’û¢_
’V≥À“[K√2d+D˚jYﬁÄ±àKÃEÈT◊˙Ωƒf∑z¡jQ∂óˆÖ"p-c·2hrñqÙjYJUZ kÀ Bµ;òs–«õ75GÖº‰/v–k[cQ,[≈VbdŸf˙3Y¨ Ø§í+åÔGúÉ~≠∂∑¸≤≠•ŸÊˆ©7Uñå¸
—˚⁄∏ï 7≥c)h¨ä≈\PÊÂ°-wqˇs∏·∏Œ¡Ç†;¢„|ˇpbÍÂ´Ÿ˘®¯ÏzõáÀÂ¨ZÎ_ˇNmG[æc–"	n¢h¥ÏÀCcyº˛ˇ∂°ü? %$Æ{∏{Ω^8àı4xDÁˇìÑÎ2ûòøÂ8ÇS‡&\˝Y%‚}Ìø ıx3-Õsƒê    IENDÆB`Ç_Ghttps://itunesconnect.apple.com/images/labelconnect/btn-choose-file.png‘;<=>OZbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/btn-upload.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞√gŒ#û»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:01 GMT]max-age=86400_Fri, 17 Jul 2009 02:09:42 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifT8734_Wed, 15 Jul 2009 19:08:58 GMT_"c78a25-221e-4a4cdea9"Uclose“./de£ef2_NSMutableDictionary\NSDictionary"“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ…È'47<@T             l              bYimage/gifO"GIF89aP  Ê  ıˆıÍÍÍÒÒÒîïîööö|||FFFåååŒŒŒttt···lll‘‘‘´´´999RRR°°°⁄⁄⁄ccdÂÂÂ∞∞∞∂∂∂|Öé]]]………ÖÖÖ¡¡¡———∏∏∏ΩΩΩÜéó≈≈≈••¶¶¨≥ÅÅÅ›››+++ü¶¨œ”÷W]cáàá~ââà~~~áàààÜÜ===>?>@>@˛˛ˇº¡∆ñû¶ËÁËÚÛÚÛÛÛÛÛÚÁËËèêèËËËÙÙıÁÁÁèêê‡ﬂ‡‡‡·êèê≥≥≥ËÁÁ¥≥≥êêê¥¥¥ﬂﬂﬂ‡‡‡ÁËÁÙÛÙÙÙÙÿÿÿ†ü†ééé¥¥µ_`_£££≥¥≥¥≥¥∞Ø∞‡ﬂﬂØØØ∞∞ØÃÃÃﬂ‡ﬂ~nnn@@?†††áááØ∞ØØ∞∞vvvªººªªªxwxiii???___◊◊◊àààvwv```yyy„„„‰‰‰ÀÃÃ?@@ÀÀÀVVVpppûûû@@@&&&LLLYYYzÉçfff333ˇˇˇ!ˇNETSCAPE2.0   !˘   ,    P   ˇÄ2'!|áàâäãåçéèêâ!'2Ç3! öõúùûü†°¢£†!3É%™´¨≠ÆØ∞±≤≥≤%Ñ#∏π∫ªºΩæø¿¡¬Ö≈∆«»… ÀÃÕŒœb”‘’÷‘c”Ÿ”€◊··‹"›Âÿ÷ÒÚd] dAÛcB¸∆c@û2É¯≤P†C|HúHë Ö? $˛˘PQ‚≈åCJ‹ Ä¢õ?(˘”‡£»óáº»Ùí&ÕL/)@¸!êÊ¿1^÷H∏paãùº, Z&Éó-Le& äÄMôHê\-"dR/	 l)ÉìÊÕôi!\Àaù?ˇ»¯SÅÃí («î! ∑œîêA Xlîñ∞≈ı‡A+p˘ÿÖÅÜ}⁄j>T¶≥Áœe¸QÜŒø27v$8L@tùE
‹‡–'√îuº∞,3‚∆Áà≠ËÃ‡:≈üñ4 Õ¸PüÁ–£˜·+‚9À>74XRd4Ü$Dë‡_å˛–Ò{#zÑ–uäË."ΩHﬂÔ|t:KT`@wA`◊√Ä;—ókÃñ¡E§ÅQ–õ{='}aÄk¯]">G  (5\j(—∆W}`Åœ…àDA}pÄ DótÈebÈ°câ}êà‰F~7|∞‰ìPFÈüíRÄÖîXfY"hÈÂó`Z@òdñ˘$'†`ÊölˆÅB%3®ŸÊúZ¢pä Ñ…û|ˆŸÁ$ï¸ !˘
   ,  N   ˇÄ%ÉÉ;ÑáàââÜäçéèè%ìîïñóòôöõúùü†°¢£§•¶ß®©´¨≠ÆØ≠Q"∞µE∂Q*Qm¥∂∞Q√ƒ≈QE	Q]	+∆√Ωœ‘√ ≈	€+—¥“’·:EE::>AÈEA]AA‰A„ÏM‰>‰˝Î„Ê÷m ÄŒá °Ú'JªwÙ˛≠≥7qüé3j,–ÂOë˛p(∞Á¬ú9}8z, ·§å}\b\p√çGé∞¿∏ÇBõéHËÛr£—Hì*]/√ÇÑ,∏±#aÖ5M/hH∏A¬9	úë–$·üJGD–£ÁBªMı…2Ë∞·¬“ªÚÍ›{·¿2˙Hª`£Gô:¯eÉxEÇOˆàËëp ã? .D∞±7ÇŸ˛∞Y‹FdÉQ¯™ﬁ√∫µÎ=AD≥n∏«ÜÜŸV¸	£¡∆É9ìvÂOü=Ω]Oj›1åÓ0≈R‰µıÎÆ%‹√oÜ⁄∫{|‚ù=€Ÿ¸9 ¬]»06+è¿|˜Û˜0`<¿Œﬂzë%	Å¿ö$$ƒE»ÜAB∞∂‡K(DB6π6¬≠ï«FÇlÏQ^Bˆ'"v∂çh‚â(¶h›®Ë‚ã0∆(„å4÷H#
6Ê8#
3‡®„è)Ú !˘
   ,  N   ˇÄ3!KK< K âàâÜÑéÜáëíê<Ü<ãççâíáÖõ îù¢õ!3%C=5=9=;Æ;5;C9Æ=I;≠¥∞;¥≠==CØ95®I±∏59∫∞™ÃC±5Õ¥I”∏´¥%LLh€hﬁ⁄››‹ﬂﬁÂ„Ê⁄ÁÈÊﬂ‚Ó·€ÎÂÒ‚ˆ˜¯˘˙˚¸˝˛ˇ )H∞†AÇu
Ä8»ê¬Å6Çh¢∞!CÎ`‹àÒ¿Ç"à‡∏Q»$Síd Äcò0Eò1ìÄ∆ç7U‚%ÖO/.2Ã ‚˛t‡ô∆≈–¢;[Ùí&Õ–ûSΩ XT*í?`14¯SjVùÚt⁄‘©T/	ˇ‚ ùõÄ¿ü	ÿ¸yí‡¡ú.‘Ωõ‡‡=t
é+á%sGåê+¢Aªx%Ïπ∞áÆÁkBãΩ∆…ük ¸±≤Ê∆∞FÊò.@X÷`∏˝`è]∞7FGà`¿¿É(ßg˚ﬁ¿¡“–Kü8√üΩO>∞1·¬Ä?N¨”±€¶è
zÿº˛ÑÃü."ÿòŒÏvÈXﬂ‚ﬁuP'†h†^¸Aá•á0xí◊i`CqhD∞ÜvFŸuÅÿ`†6⁄%“uvÅ–@iË‚ãÓqÉ~XW¿Éo‘¯G.–≈u€5@«`îë¯¡ÑeàíH†â="Èá¿h•ãi‹ VrVz§°†∂˝Å Å∂Epóc˝°¡W‡ètàπ‡è`-xÂû0B»ÁüÄ*®ã7h0Ë°à&™Ë¢å6Íh£(<*)£(ÃÈ§ò
Zi  !˘
   ,  N   ˇÄ%ÉÑÖÜáàâäãåã%êëíìîïñóòôöúùûü†°¢£§•¶®©™´¨™d≠≤i≥Ø∏≥≤ΩæøeEe¿ΩVQ…Œæ øte’ÀQÿœ€Zm*Z‡,‚m,,c,*‰›,]Emm›*""ı,ZﬂXK˙Å;Úß†ÁÃ°c!B?r€’W≠¢≈j˛£ÛáB=zòS&£∞Ù<®6G‰ 2{Rj∏aqƒàä∂∂dQÊ¬É9//^úC¥®—9i˛$òs·OÉ96&§†'i=
b˘˘°†ê⁄0Å…ãÍ(µ™g Ç
XÒF=*≤Æ]ë,˛Ù1Äôo8˘≥"oüåj.hÄ'ÅT¬[˛0ÄFÄ]4%gÏc82Ö(6&ﬂΩãß¥È”x⁄¸)É«¿9<∆¥fV‡è1º`ÄfŒÆ{˝yÄgåÄ”h–òŒ(°∂Ñå@ÄÅ∫∫ı”zl4 !B)l7‹ˇàpN@Ô_}ƒ'8∑^â »ïófÓº=	/ÆÎØ.¬FA•Vxt◊hUZÇÑÜBh`√iD`Zy}àGy∏ﬂá◊≈‚à$ñhbu6hp‚ä,∂Ë‚ã0∆(cå(Ãh#å(ÃP„ç<öòc  !˘
   ,  N   ˇÄ3!K77 K<Kä<å7äKJÖãK 7âJèóîÑäñëêèò áúà<é<J ëâé£K!3%o¥onπ∂∂πΩΩæ∫º¥∫ªƒø¿æ«µ∆…≈ƒπ%”‘’÷◊ÿŸ⁄€‹›ﬂﬂb‚·‡Ê‰ÁbËÂ‰ÎÊ„ÁÔ‡‚ÍÛˆ ˘˙˚¸˝˚	¯"Ç 	$$8–…ÅN"F|x@ÑÑ%ÑqÒ°ìÍHú("I' òt≤@ÇÀ0 ÎƒÏË$Méa¬®Ÿô3AOÑ)ßBN59√™3)2=õ&≈∞‰hò≤j®Ûß–>°&Mä‘jò3hœ¨Yìˆ'ˇ
¨)Ûß¡‡ypnÅ3zÙÍπ X0⁄xh∏¡mÑçÄËóÕôz2ªU€6Ìôı‡Õ⁄Äà?<¯BèÄ7Y≠‡9Ω¿Ãò¨2k¿ùx@÷?6BÎAÉ∆è3@Àú.c†à!Ã=›ÅıÎÿÑ˘s¡ÅÅê∏1‡ÂèàÌ|¸ŸÚ@@[‹d—Áœ `g{@ÓË—’@ë›Å∆%®†q€I‡á]˘!@Üî¿{p  	~0¿Ä!Ωáˇ‡G(ËaÇpÌq·ˇ’—Ed,h„ç
‚! yUÜÑ
Ù¯/˛wÅé]\◊m#“U@˘©» ãæËdy‡®ÂçdêU∆	†@V]¯Aw~‹ˆ∆›ÜFÅ~të’)&H\ÇFûyÅˇeµÁñÄ‚( ÅjË°à⁄(¿â6ÍË£êF*È§îNäB•òJä¬ófÍ)¢õ !˘
   ,  N   ˇÄ3!6ÑK6J776âÜä68ÑáäÜKJ87J6KóöÑJÜñö8KâóKÜÑââã§õùáß7!3%n∂
n∏∂ªºª∫Ωπ¡¿¬√≈Ωø∆n%ÃÕŒœ–—“”‘’÷ÿŸ⁄€‹›ﬁﬂ‡·‚]]ÁË‰ÍÈMÁÌÁEtÔÁÂıÈ‰m	ËÊ˜Òˇ˙Òª˜ŒûóRxYx!õ,^†”∞"à?.Ã¿ê„∆ÖñxÙ“ÁÇI:	§L»ëc
è-7fX∞`ãMö8¯33¡!4∑‰‹9ShP£Asb∏QSËà?P«¯≥Çh“úImù√µ´◊9i˛$òsÊOÉ9/Ã8p` ¨ÿ9ˇº¿Û ÓZ<\„æË`√kÑ]∑Dπv¨<~]Ü3ç√à£¿	0Ù¸ÅÄGÄ®∞πÏáTx∏t8Ω÷	‘?ÃpiÃÄ	~vÆΩ∆ÅV0¯iÏ∏∏ôîo+_~{Àü$`$!@ÅÉ6
8∞‚≤ HîQ µ@Ÿ$XŒ‡µìœ∑C˘ÇÄ ÙÃôÁŸœøÁ‰·Uy ÑÄ-‹Ï∑¡x¸1¿Ä+tgFF4»ﬂÉ¸u˜ÄÇ‹IH [¯g‚â˝˘!@wÑÒ«*–‚B=ﬂ@¿ÑQUkÙx«:∏AáœÅd[w‹Å‚ì'n! TÏWT¸˜\@ı¡~]™WÂTTPdµÒﬂ€ÂT@)Áì1ÁùxÊ©ßâT∞ÁüÄ*Ë†Ñjh°(™(°(ÃêË¢êÍŸh  !˘
   ,  N   ˇÄ3!Ñ7766âääÑè8ä8ãì6ïéÜëáÑçâã7ôãå£öùÑ87ë!3%H@@H
G
µ
@
≤µ∏π∂∑∂≤Y±æ±≤º∞æ∑»∞Ø ∫… ∂%X‘’÷◊ÿXpŸ‹›ﬁﬂ‘rŸFDFÊBFBOÁRÊFÎÈOOSÔÈBÍDO˘ËÍRËÓÊ§Ï{"eﬁø|Ê‰Ò„gD î'¸⁄òH±¢≈ãW,(Ç±#6[<j,r`£«é"⁄¥¡í• 6	ˆêQ`œÇî+UäÄg@Kó-WÅeâPkˆ(]¿s@”ú8S™≤è’´≤ˆëP‰è	˛Pê`ïÏ÷Æ,Æ™-ªV¬ájˇ#¸ô[a¿]€h›Z÷¨Ÿ´z¨GƒüzÊ¸°«Å?~`>¨ÁdÅ-˚¡¨d16£a"∏ÑÜ„qÇ3a¬êcÀÜú‡œ?f˛‘Ò#@¡\$jÔ!QaÓá«åì ±bÓ≤0»ìáÑ€¬ôhÅƒÏÔw¬ãßœwHÙº# 		2¬ò◊ì¡ˆÓH@27å‚wl ¿x8ÁE}zòg¿D1Ä  í'·Ñ‚ô˜¿y¸† `¯GúG¡Än‡¿áäPüwåH‡‚f@à‘Wƒ ÙA·é‰Â!@&–Ò«Ï‰[ùWﬂlº`¿tÑ(Çbtò ‡ã1ûG#ï&ò¿„ó
0WÑÌÕ5@yÁ›!ƒ\Ñ∑¶Ä ⁄ıá$Ü∑å·’gÄÇw‘7z`:áÇjË°Ç
 ¢å6ÍË£êF*È§Ö¢@È•é¢0É•òv*®¶Å  !˘
   ,  N   ˇÄ%UG?GYGHâH?HUYâÜHàèãHèàGGUäY?Éùê?YîãÖ•Uå?¶è£ñíÜè%≥¥µ∂∑∏π∫ªºΩTWV√¬WV`¬ ≈ø VœÕT≈ƒ`ƒ¡¡`“ƒ_øƒÕÀƒ–VW_€√›ÍÎÏÌÓÏeÔÙaıÒ^ÚıÙld»∞80 ôË |–†¿ÄlÍ¸9@∞ AÅŸ`XÇëÕÖ ˚H<0Ú°CÄ1º¿≤•À˛xÏÛß¡Kñ1=ﬁ‹…RÉó˛‰OÅú<ì‚Y ¥)û˙‡—Û~Hêp4*û¨XóÇı≥‘ÅVö¢A√tM=Pˇ%‡q‡ßÆ”ªxÚh%ëGo_æ[˛<»„Áë'`!B5d≠πo°ÏÕ≥a√ù;yV^ 8OÜ 4¯’™óØ_∞cÀ6±Êy˛1!‡H:Ë‘∆”F∞ML\8"îŒÉ?"L  f≈Òﬁ$àÄË≥g€OæºùÙÿπc‘éÄÎˇ8Aˇ¬äÄÒêò»æ Tv4py˘ë’ÙAuÄÛôÁ‡ÉÂ›!@vê¶û #T¯Kº¿Bzà9Ò¬†W Uÿ1]yéw }(B(£å „a(îÁuháBu0ê”·ËÑPˆ±à 3y"Ë„áBΩ0„î2æGÂïXf©•ÉX±Âó`Ü)Êòdñifô(ú©&ô(ÃêÊöpjŸf  !˘
   ,  N   ˇÄ%H@@H
G
â
@
ÜâåçäãäÜYÖíÖÜêÑíãúÑÉûéùûä%X®©™´¨Xp≠∞±≤≥®r≠FDF∫BFBOªR∫FøΩOOS√ΩBæDOÕºæRº¬∫RœOR«”Õ∫∆––FRSO–¡ÁËÈÍÎÈ+EÏÒl[ÚÓEÔÚÒ"mm" ˙kì`ˆ,Ë˜œüEXñX±fè«Ñl»∞Eã˛˙®\)°e	E˛hë∞‡	*qæå…b•œú?%|∏·3¬ü£¸≥çÀó9uÍ\©ß™’´zD¸Y†gŒz8„F÷≠z^êuPU≠∂zˇêc„*&V˚@x†ï+/‡b≈J∂∞a≤	˛ÏÒcÊO?A"Òé~ÀA3	+é˛`òÉ<yH8QlÙáHû}ß∂Ì€w˙¸1páDƒ;êê Û'ån=ø ·é$G√xÕpgÉÄ€D{IÆG∑Å=¢@∑˘Û∂u?∏ìÁuÿˇ)"a7ÖÎ’78òﬂ^Dr?w‹á›∂ie@}$Wƒ ÙÅﬁÉ∏Â!@&–Ò«¿Q·/Ìñ‹ê`¿t‘'ÇWtò`›ÄÓÜ ä&ò ·åÈ	pTy¡5@nª›!ƒQ‘ˆ£u‘)ıá¯’∂5Åµ%gÄww$wo4Vy|Vf©ÂñV
 ó`Ü)ÊòdñiÊôY¢ÄÊöb¢0Éöl∆i•õÅ  !˘
   ,  N   ˇÄ3!6ÑK6J776âÜä68ÑáäÜKJ87J6KóöÑJÜñö8KâóKÜÑââã§õùáß7!3%n∂
n∏∂ªºª∫Ωπ¡¿¬√≈Ωø∆n%ÃÕŒœ–—“”‘’÷ÿŸ⁄€‹›ﬁﬂ‡·‚]]ÁË‰ÍÈMÁÌÁEtÔÁÂıÈ‰m	ËÊ˜Òˇ˙Òª˜ŒûóRxYx!õ,^†”∞"à?.Ã¿ê„∆ÖñxÙ“ÁÇI:	§L»ëc
è-7fX∞`ãMö8¯33¡!4∑‰‹9ShP£Asb∏QSËà?P«¯≥Çh“úImù√µ´◊9i˛$òsÊOÉ9/Ã8p` ¨ÿ9ˇº¿Û ÓZ<\„æË`√kÑ]∑Dπv¨<~]Ü3ç√à£¿	0Ù¸ÅÄGÄ®∞πÏáTx∏t8Ω÷	‘?ÃpiÃÄ	~vÆΩ∆ÅV0¯iÏ∏∏ôîo+_~{Àü$`$!@ÅÉ6
8∞‚≤ HîQ µ@Ÿ$XŒ‡µìœ∑C˘ÇÄ ÙÃôÁŸœøÁ‰·Uy ÑÄ-‹Ï∑¡x¸1¿Ä+tgFF4»ﬂÉ¸u˜ÄÇ‹IH [¯g‚â˝˘!@wÑÒ«*–‚B=ﬂ@¿ÑQUkÙx«:∏AáœÅd[w‹Å‚ì'n! TÏWT¸˜\@ı¡~]™WÂTTPdµÒﬂ€ÂT@)Áì1ÁùxÊ©ßâT∞ÁüÄ*Ë†Ñjh°(™(°(ÃêË¢êÍŸh  !˘
   ,  N   ˇÄ3!K77 K<Kä<å7äKJÖãK 7âJèóîÑäñëêèò áúà<é<J ëâé£K!3%o¥onπ∂∂πΩΩæ∫º¥∫ªƒø¿æ«µ∆…≈ƒπ%”‘’÷◊ÿŸ⁄€‹›ﬂﬂb‚·‡Ê‰ÁbËÂ‰ÎÊ„ÁÔ‡‚ÍÛˆ ˘˙˚¸˝˚	¯"Ç 	$$8–…ÅN"F|x@ÑÑ%ÑqÒ°ìÍHú("I' òt≤@ÇÀ0 ÎƒÏË$Méa¬®Ÿô3AOÑ)ßBN59√™3)2=õ&≈∞‰hò≤j®Ûß–>°&Mä‘jò3hœ¨Yìˆ'ˇ
¨)Ûß¡‡ypnÅ3zÙÍπ X0⁄xh∏¡mÑçÄËóÕôz2ªU€6Ìôı‡Õ⁄Äà?<¯BèÄ7Y≠‡9Ω¿Ãò¨2k¿ùx@÷?6BÎAÉ∆è3@Àú.c†à!Ã=›ÅıÎÿÑ˘s¡ÅÅê∏1‡ÂèàÌ|¸ŸÚ@@[‹d—Áœ `g{@ÓË—’@ë›Å∆%®†q€I‡á]˘!@Üî¿{p  	~0¿Ä!Ωáˇ‡G(ËaÇpÌq·ˇ’—Ed,h„ç
‚! yUÜÑ
Ù¯/˛wÅé]\◊m#“U@˘©» ãæËdy‡®ÂçdêU∆	†@V]¯Aw~‹ˆ∆›ÜFÅ~të’)&H\ÇFûyÅˇeµÁñÄ‚( ÅjË°à⁄(¿â6ÍË£êF*È§îNäB•òJä¬ófÍ)¢õ !˘
   ,  N   ˇÄ3!KK< K âàâÜÑéÜáëíê<Ü<ãççâíáÖõ îù¢õ!3%®©™´¨≠ÆØ∞±∞%µ∂∑∏π∫ªºΩæø¡¬√ƒ≈∆«»… ÀÕŒœ–—œd“◊iÿ‘›ÿ◊‚„‰eEeÂ‚VQÓÛ„ ‰te˙Q˝Ù µ¥Q°• ãÉmX@¯3ÄEÜ?cX®H(êEó?E⁄¥®BÑç,¥¨àeâ»ÇG˛®‘ Ç·¬Ü,D®ôê¶DçıÈ‹©o¿üst˛P(£Gès ¯<˜¿Äû˙ÊÖZfèS7vé°s€ü" \x0á*Oûs“™];'Õüsˇ.¸i0«∆ïÙ∏M†ßÉJ,d?®îS‘ßJk#0yÒ¬@ù∑{ı@PR∂lèjﬁ|î≈ü>ƒ3 ‡Õ'VxÓ„SÕ$∏õzÀ–ÿåFÂmü}V€¶≈nŒúÒ(_ŒOõ?e`àG¿ÈÒ
¸ë FÄÉ–Ã˘a∫∏?å¿öÂ>%hó‡"öÎﬂœ\èç$àVun¯áÛi Ùq`A(	∫µ˜ûrÒÕ'!	$º¿ﬂá˙â`ÉJ(WöJ ‡!`xhór.F`-˝°ÅÃE¡r
ˆ±"
™ƒ"àDÚg]ëH&©‰!í˙Ÿ†ìPF)ÂîTViÂïV¢ÄÂñU¢0Éñ\Üπ§óÅ  !˘
   ,  N   ˇÄ%C=5=9=;â;5;C9â=I;àèã;èà==Cä95ÉIåì59ïãÖßCå5®èIÆìÜè%LLh∂hπµ∏∏∑∫π¿æ¡µ¬ƒ¡∫Ω…º∂∆¿ÃΩ—“”‘’÷◊ÿŸ⁄€›ﬁﬂ‡·ﬂu ‚ÁmË‰ MÂËÁÛuÛˆÛEÛ"˜ˆB˛Ä¯G ˜¬,X(" áÍŸìXêÄ/)2zqë·b∏8ß√≈4.<Ç¥ÿ‚¢ó4i<btÈ¡íç-ë¸Ÿâ°¡ü:+3∏àôÚbJî)[zI¿¥©”˛¨H¿ÊœìÊ<xp™‘∂Ó°V,S	[?,q:bDSˇ¬Dù*aœÖ=OÛ&X√∑Øﬂ5N˛XSÊèï57&Ï42'pÅv"∏∞É‰{¢Óº·7BDÏ8Û¸]ΩµµÎ≠˛,¿,Åç	¸qõN‘6}lP–√FÒü d˛ty¡Ük&;ˇ@àJ'ˆñ‰F@ÿ®Û∫ªûÔ‡√ÎÒÚáéû!ıÿËp^†ŸlÄFaMÌêQ/ËÈ`#|-Qı#[T 4–@‚%®`x{‹`Ö±†ﬁ˛ë∆{t!õm–ÒGÑb~0—xˇ} Ü#˙·á∆ò`7Ï‘≈w∑Ì‘ÄiîßGd ]d‹p£OhpC7xûÅß!=öß·NÊ…hÂÇÎ]©Âñ\vô‡x)ÊòdñiÊôh¶â&
j∂y&
3∞ÈÊú]¬ !˘
   ,  N   ˇÄ3! ÑÖÜáàâäãåçä!3%ìì;îóòôôñöùûüü%£§•¶ß®©™´¨≠Ø∞±≤≥¥µ∂∑∏πªºΩæøΩQ"¿≈E∆Q*Qmƒ∆¿Q”‘’QE	Q]	+÷”Õﬂ‰” ’	Î+·ƒ‚ÂÒ:EE::>A˘EA]A˛hB/»<~ö–ÛAØ·æyˆˆm Äœá2 °Ú'JøÓ38r°é(S™,–ÂOë˛p(∞Á¬ú9}X∫, ·¶î}|¢\p√ïGé∞@πÇBõñ/HËÛs•’X≥j]0√ÇÑ,∏±#cÖ5]/h»∏A¬9ˇúë–$„üZGD–£ÁBø]È2Ë∞·¬÷√+^|·¿2˙àª`£Gô:8fÉyEÇOˆàËëq ã? .D∞±8Ç›˛∞Ÿ‹FfÉQÎﬁ√ª∑Ô=AdÛÓ∏«ÜÜ·V¸	£¡∆É9£LˆÂOü=Õ}èÍ›2åÚ0’R‰∑˘Ûæ%‹√qÜ‚⁄ª¸‚ù=ÎŸ¸9 ¬_Ã0¨¶]‹-˜›0¿ zöWƒÅ¿õd$ƒEáAF∂·KH(DFF˘6¬Ω’«FÜlÏQ_F-6(#z∆Õh„ç8ÊhﬁËË„è@)‰êDI$
F&9$

3 ©‰ì92 ;_Bhttps://itunesconnect.apple.com/images/labelconnect/btn-upload.gif‘@ABCOebplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_7https://itunesconnect.apple.com/javascript/prototype.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫d∆f#»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:15 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptV252258_Wed, 15 Jul 2009 18:30:31 GMT_"b5ec90-3d962-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionary Ÿb“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
HMVadjs|~Öçòö•ß©´≠Ø±≥µ∑πƒ∆» ÃŒ–“‘÷ÿÊÙ¸
-27BbpêñØ —Ò0=BGK_             l              m_application/x-javascriptO Ÿbˇ˛/ *     P r o t o t y p e   J a v a S c r i p t   f r a m e w o r k ,   v e r s i o n   1 . 6 . 0 . 2    *     ( c )   2 0 0 5 - 2 0 0 8   S a m   S t e p h e n s o n    *    *     P r o t o t y p e   i s   f r e e l y   d i s t r i b u t a b l e   u n d e r   t h e   t e r m s   o f   a n   M I T - s t y l e   l i c e n s e .    *     F o r   d e t a i l s ,   s e e   t h e   P r o t o t y p e   w e b   s i t e :   h t t p : / / w w w . p r o t o t y p e j s . o r g /    *    * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   v a r   P r o t o t y p e   =   {      V e r s i o n :   ' 1 . 6 . 0 . 2 ' ,       B r o w s e r :   {          I E :           ! ! ( w i n d o w . a t t a c h E v e n t   & &   ! w i n d o w . o p e r a ) ,          O p e r a :     ! ! w i n d o w . o p e r a ,          W e b K i t :   n a v i g a t o r . u s e r A g e n t . i n d e x O f ( ' A p p l e W e b K i t / ' )   >   - 1 ,          G e c k o :     n a v i g a t o r . u s e r A g e n t . i n d e x O f ( ' G e c k o ' )   >   - 1   & &   n a v i g a t o r . u s e r A g e n t . i n d e x O f ( ' K H T M L ' )   = =   - 1 ,          M o b i l e S a f a r i :   ! ! n a v i g a t o r . u s e r A g e n t . m a t c h ( / A p p l e . * M o b i l e . * S a f a r i / )      } ,       B r o w s e r F e a t u r e s :   {          X P a t h :   ! ! d o c u m e n t . e v a l u a t e ,          E l e m e n t E x t e n s i o n s :   ! ! w i n d o w . H T M L E l e m e n t ,          S p e c i f i c E l e m e n t E x t e n s i o n s :              d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) . _ _ p r o t o _ _   & &              d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) . _ _ p r o t o _ _   ! = =                  d o c u m e n t . c r e a t e E l e m e n t ( ' f o r m ' ) . _ _ p r o t o _ _      } ,       S c r i p t F r a g m e n t :   ' < s c r i p t [ ^ > ] * > ( [ \ \ S \ \ s ] * ? ) < \ / s c r i p t > ' ,      J S O N F i l t e r :   / ^ \ / \ * - s e c u r e - ( [ \ s \ S ] * ) \ * \ / \ s * $ / ,       e m p t y F u n c t i o n :   f u n c t i o n ( )   {   } ,      K :   f u n c t i o n ( x )   {   r e t u r n   x   }  } ;   i f   ( P r o t o t y p e . B r o w s e r . M o b i l e S a f a r i )      P r o t o t y p e . B r o w s e r F e a t u r e s . S p e c i f i c E l e m e n t E x t e n s i o n s   =   f a l s e ;    / *   B a s e d   o n   A l e x   A r n e l l ' s   i n h e r i t a n c e   i m p l e m e n t a t i o n .   * /  v a r   C l a s s   =   {      c r e a t e :   f u n c t i o n ( )   {          v a r   p a r e n t   =   n u l l ,   p r o p e r t i e s   =   $ A ( a r g u m e n t s ) ;          i f   ( O b j e c t . i s F u n c t i o n ( p r o p e r t i e s [ 0 ] ) )              p a r e n t   =   p r o p e r t i e s . s h i f t ( ) ;           f u n c t i o n   k l a s s ( )   {              t h i s . i n i t i a l i z e . a p p l y ( t h i s ,   a r g u m e n t s ) ;          }           O b j e c t . e x t e n d ( k l a s s ,   C l a s s . M e t h o d s ) ;          k l a s s . s u p e r c l a s s   =   p a r e n t ;          k l a s s . s u b c l a s s e s   =   [ ] ;           i f   ( p a r e n t )   {              v a r   s u b c l a s s   =   f u n c t i o n ( )   {   } ;              s u b c l a s s . p r o t o t y p e   =   p a r e n t . p r o t o t y p e ;              k l a s s . p r o t o t y p e   =   n e w   s u b c l a s s ;              p a r e n t . s u b c l a s s e s . p u s h ( k l a s s ) ;          }           f o r   ( v a r   i   =   0 ;   i   <   p r o p e r t i e s . l e n g t h ;   i + + )              k l a s s . a d d M e t h o d s ( p r o p e r t i e s [ i ] ) ;           i f   ( ! k l a s s . p r o t o t y p e . i n i t i a l i z e )              k l a s s . p r o t o t y p e . i n i t i a l i z e   =   P r o t o t y p e . e m p t y F u n c t i o n ;           k l a s s . p r o t o t y p e . c o n s t r u c t o r   =   k l a s s ;           r e t u r n   k l a s s ;      }  } ;   C l a s s . M e t h o d s   =   {      a d d M e t h o d s :   f u n c t i o n ( s o u r c e )   {          v a r   a n c e s t o r       =   t h i s . s u p e r c l a s s   & &   t h i s . s u p e r c l a s s . p r o t o t y p e ;          v a r   p r o p e r t i e s   =   O b j e c t . k e y s ( s o u r c e ) ;           i f   ( ! O b j e c t . k e y s ( {   t o S t r i n g :   t r u e   } ) . l e n g t h )              p r o p e r t i e s . p u s h ( " t o S t r i n g " ,   " v a l u e O f " ) ;           f o r   ( v a r   i   =   0 ,   l e n g t h   =   p r o p e r t i e s . l e n g t h ;   i   <   l e n g t h ;   i + + )   {              v a r   p r o p e r t y   =   p r o p e r t i e s [ i ] ,   v a l u e   =   s o u r c e [ p r o p e r t y ] ;              i f   ( a n c e s t o r   & &   O b j e c t . i s F u n c t i o n ( v a l u e )   & &                      v a l u e . a r g u m e n t N a m e s ( ) . f i r s t ( )   = =   " $ s u p e r " )   {                  v a r   m e t h o d   =   v a l u e ,   v a l u e   =   O b j e c t . e x t e n d ( ( f u n c t i o n ( m )   {                      r e t u r n   f u n c t i o n ( )   {   r e t u r n   a n c e s t o r [ m ] . a p p l y ( t h i s ,   a r g u m e n t s )   } ;                  } ) ( p r o p e r t y ) . w r a p ( m e t h o d ) ,   {                      v a l u e O f :     f u n c t i o n ( )   {   r e t u r n   m e t h o d   } ,                      t o S t r i n g :   f u n c t i o n ( )   {   r e t u r n   m e t h o d . t o S t r i n g ( )   }                  } ) ;              }              t h i s . p r o t o t y p e [ p r o p e r t y ]   =   v a l u e ;          }           r e t u r n   t h i s ;      }  } ;   v a r   A b s t r a c t   =   {   } ;   O b j e c t . e x t e n d   =   f u n c t i o n ( d e s t i n a t i o n ,   s o u r c e )   {      f o r   ( v a r   p r o p e r t y   i n   s o u r c e )          d e s t i n a t i o n [ p r o p e r t y ]   =   s o u r c e [ p r o p e r t y ] ;      r e t u r n   d e s t i n a t i o n ;  } ;   O b j e c t . e x t e n d ( O b j e c t ,   {      i n s p e c t :   f u n c t i o n ( o b j e c t )   {          t r y   {              i f   ( O b j e c t . i s U n d e f i n e d ( o b j e c t ) )   r e t u r n   ' u n d e f i n e d ' ;              i f   ( o b j e c t   = = =   n u l l )   r e t u r n   ' n u l l ' ;              r e t u r n   o b j e c t . i n s p e c t   ?   o b j e c t . i n s p e c t ( )   :   S t r i n g ( o b j e c t ) ;          }   c a t c h   ( e )   {              i f   ( e   i n s t a n c e o f   R a n g e E r r o r )   r e t u r n   ' . . . ' ;              t h r o w   e ;          }      } ,       t o J S O N :   f u n c t i o n ( o b j e c t )   {          v a r   t y p e   =   t y p e o f   o b j e c t ;          s w i t c h   ( t y p e )   {              c a s e   ' u n d e f i n e d ' :              c a s e   ' f u n c t i o n ' :              c a s e   ' u n k n o w n ' :   r e t u r n ;              c a s e   ' b o o l e a n ' :   r e t u r n   o b j e c t . t o S t r i n g ( ) ;          }           i f   ( o b j e c t   = = =   n u l l )   r e t u r n   ' n u l l ' ;          i f   ( o b j e c t . t o J S O N )   r e t u r n   o b j e c t . t o J S O N ( ) ;          i f   ( O b j e c t . i s E l e m e n t ( o b j e c t ) )   r e t u r n ;           v a r   r e s u l t s   =   [ ] ;          f o r   ( v a r   p r o p e r t y   i n   o b j e c t )   {              v a r   v a l u e   =   O b j e c t . t o J S O N ( o b j e c t [ p r o p e r t y ] ) ;              i f   ( ! O b j e c t . i s U n d e f i n e d ( v a l u e ) )                  r e s u l t s . p u s h ( p r o p e r t y . t o J S O N ( )   +   ' :   '   +   v a l u e ) ;          }           r e t u r n   ' { '   +   r e s u l t s . j o i n ( ' ,   ' )   +   ' } ' ;      } ,       t o Q u e r y S t r i n g :   f u n c t i o n ( o b j e c t )   {          r e t u r n   $ H ( o b j e c t ) . t o Q u e r y S t r i n g ( ) ;      } ,       t o H T M L :   f u n c t i o n ( o b j e c t )   {          r e t u r n   o b j e c t   & &   o b j e c t . t o H T M L   ?   o b j e c t . t o H T M L ( )   :   S t r i n g . i n t e r p r e t ( o b j e c t ) ;      } ,       k e y s :   f u n c t i o n ( o b j e c t )   {          v a r   k e y s   =   [ ] ;          f o r   ( v a r   p r o p e r t y   i n   o b j e c t )              k e y s . p u s h ( p r o p e r t y ) ;          r e t u r n   k e y s ;      } ,       v a l u e s :   f u n c t i o n ( o b j e c t )   {          v a r   v a l u e s   =   [ ] ;          f o r   ( v a r   p r o p e r t y   i n   o b j e c t )              v a l u e s . p u s h ( o b j e c t [ p r o p e r t y ] ) ;          r e t u r n   v a l u e s ;      } ,       c l o n e :   f u n c t i o n ( o b j e c t )   {          r e t u r n   O b j e c t . e x t e n d ( {   } ,   o b j e c t ) ;      } ,       i s E l e m e n t :   f u n c t i o n ( o b j e c t )   {          r e t u r n   o b j e c t   & &   o b j e c t . n o d e T y p e   = =   1 ;      } ,       i s A r r a y :   f u n c t i o n ( o b j e c t )   {          r e t u r n   o b j e c t   ! =   n u l l   & &   t y p e o f   o b j e c t   = =   " o b j e c t "   & &              ' s p l i c e '   i n   o b j e c t   & &   ' j o i n '   i n   o b j e c t ;      } ,       i s H a s h :   f u n c t i o n ( o b j e c t )   {          r e t u r n   o b j e c t   i n s t a n c e o f   H a s h ;      } ,       i s F u n c t i o n :   f u n c t i o n ( o b j e c t )   {          r e t u r n   t y p e o f   o b j e c t   = =   " f u n c t i o n " ;      } ,       i s S t r i n g :   f u n c t i o n ( o b j e c t )   {          r e t u r n   t y p e o f   o b j e c t   = =   " s t r i n g " ;      } ,       i s N u m b e r :   f u n c t i o n ( o b j e c t )   {          r e t u r n   t y p e o f   o b j e c t   = =   " n u m b e r " ;      } ,       i s U n d e f i n e d :   f u n c t i o n ( o b j e c t )   {          r e t u r n   t y p e o f   o b j e c t   = =   " u n d e f i n e d " ;      }  } ) ;   O b j e c t . e x t e n d ( F u n c t i o n . p r o t o t y p e ,   {      a r g u m e n t N a m e s :   f u n c t i o n ( )   {          v a r   n a m e s   =   t h i s . t o S t r i n g ( ) . m a t c h ( / ^ [ \ s \ ( ] * f u n c t i o n [ ^ ( ] * \ ( ( . * ? ) \ ) / ) [ 1 ] . s p l i t ( " , " ) . i n v o k e ( " s t r i p " ) ;          r e t u r n   n a m e s . l e n g t h   = =   1   & &   ! n a m e s [ 0 ]   ?   [ ]   :   n a m e s ;      } ,       b i n d :   f u n c t i o n ( )   {          i f   ( a r g u m e n t s . l e n g t h   <   2   & &   O b j e c t . i s U n d e f i n e d ( a r g u m e n t s [ 0 ] ) )   r e t u r n   t h i s ;          v a r   _ _ m e t h o d   =   t h i s ,   a r g s   =   $ A ( a r g u m e n t s ) ,   o b j e c t   =   a r g s . s h i f t ( ) ;          r e t u r n   f u n c t i o n ( )   {              r e t u r n   _ _ m e t h o d . a p p l y ( o b j e c t ,   a r g s . c o n c a t ( $ A ( a r g u m e n t s ) ) ) ;          }      } ,       b i n d A s E v e n t L i s t e n e r :   f u n c t i o n ( )   {          v a r   _ _ m e t h o d   =   t h i s ,   a r g s   =   $ A ( a r g u m e n t s ) ,   o b j e c t   =   a r g s . s h i f t ( ) ;          r e t u r n   f u n c t i o n ( e v e n t )   {              r e t u r n   _ _ m e t h o d . a p p l y ( o b j e c t ,   [ e v e n t   | |   w i n d o w . e v e n t ] . c o n c a t ( a r g s ) ) ;          }      } ,       c u r r y :   f u n c t i o n ( )   {          i f   ( ! a r g u m e n t s . l e n g t h )   r e t u r n   t h i s ;          v a r   _ _ m e t h o d   =   t h i s ,   a r g s   =   $ A ( a r g u m e n t s ) ;          r e t u r n   f u n c t i o n ( )   {              r e t u r n   _ _ m e t h o d . a p p l y ( t h i s ,   a r g s . c o n c a t ( $ A ( a r g u m e n t s ) ) ) ;          }      } ,       d e l a y :   f u n c t i o n ( )   {          v a r   _ _ m e t h o d   =   t h i s ,   a r g s   =   $ A ( a r g u m e n t s ) ,   t i m e o u t   =   a r g s . s h i f t ( )   *   1 0 0 0 ;          r e t u r n   w i n d o w . s e t T i m e o u t ( f u n c t i o n ( )   {              r e t u r n   _ _ m e t h o d . a p p l y ( _ _ m e t h o d ,   a r g s ) ;          } ,   t i m e o u t ) ;      } ,       w r a p :   f u n c t i o n ( w r a p p e r )   {          v a r   _ _ m e t h o d   =   t h i s ;          r e t u r n   f u n c t i o n ( )   {              r e t u r n   w r a p p e r . a p p l y ( t h i s ,   [ _ _ m e t h o d . b i n d ( t h i s ) ] . c o n c a t ( $ A ( a r g u m e n t s ) ) ) ;          }      } ,       m e t h o d i z e :   f u n c t i o n ( )   {          i f   ( t h i s . _ m e t h o d i z e d )   r e t u r n   t h i s . _ m e t h o d i z e d ;          v a r   _ _ m e t h o d   =   t h i s ;          r e t u r n   t h i s . _ m e t h o d i z e d   =   f u n c t i o n ( )   {              r e t u r n   _ _ m e t h o d . a p p l y ( n u l l ,   [ t h i s ] . c o n c a t ( $ A ( a r g u m e n t s ) ) ) ;          } ;      }  } ) ;   F u n c t i o n . p r o t o t y p e . d e f e r   =   F u n c t i o n . p r o t o t y p e . d e l a y . c u r r y ( 0 . 0 1 ) ;   D a t e . p r o t o t y p e . t o J S O N   =   f u n c t i o n ( )   {      r e t u r n   ' " '   +   t h i s . g e t U T C F u l l Y e a r ( )   +   ' - '   +          ( t h i s . g e t U T C M o n t h ( )   +   1 ) . t o P a d d e d S t r i n g ( 2 )   +   ' - '   +          t h i s . g e t U T C D a t e ( ) . t o P a d d e d S t r i n g ( 2 )   +   ' T '   +          t h i s . g e t U T C H o u r s ( ) . t o P a d d e d S t r i n g ( 2 )   +   ' : '   +          t h i s . g e t U T C M i n u t e s ( ) . t o P a d d e d S t r i n g ( 2 )   +   ' : '   +          t h i s . g e t U T C S e c o n d s ( ) . t o P a d d e d S t r i n g ( 2 )   +   ' Z " ' ;  } ;   v a r   T r y   =   {      t h e s e :   f u n c t i o n ( )   {          v a r   r e t u r n V a l u e ;           f o r   ( v a r   i   =   0 ,   l e n g t h   =   a r g u m e n t s . l e n g t h ;   i   <   l e n g t h ;   i + + )   {              v a r   l a m b d a   =   a r g u m e n t s [ i ] ;              t r y   {                  r e t u r n V a l u e   =   l a m b d a ( ) ;                  b r e a k ;              }   c a t c h   ( e )   {   }          }           r e t u r n   r e t u r n V a l u e ;      }  } ;   R e g E x p . p r o t o t y p e . m a t c h   =   R e g E x p . p r o t o t y p e . t e s t ;   R e g E x p . e s c a p e   =   f u n c t i o n ( s t r )   {      r e t u r n   S t r i n g ( s t r ) . r e p l a c e ( / ( [ . * + ? ^ = ! : $ { } ( ) | [ \ ] \ / \ \ ] ) / g ,   ' \ \ $ 1 ' ) ;  } ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   v a r   P e r i o d i c a l E x e c u t e r   =   C l a s s . c r e a t e ( {      i n i t i a l i z e :   f u n c t i o n ( c a l l b a c k ,   f r e q u e n c y )   {          t h i s . c a l l b a c k   =   c a l l b a c k ;          t h i s . f r e q u e n c y   =   f r e q u e n c y ;          t h i s . c u r r e n t l y E x e c u t i n g   =   f a l s e ;           t h i s . r e g i s t e r C a l l b a c k ( ) ;      } ,       r e g i s t e r C a l l b a c k :   f u n c t i o n ( )   {          t h i s . t i m e r   =   s e t I n t e r v a l ( t h i s . o n T i m e r E v e n t . b i n d ( t h i s ) ,   t h i s . f r e q u e n c y   *   1 0 0 0 ) ;      } ,       e x e c u t e :   f u n c t i o n ( )   {          t h i s . c a l l b a c k ( t h i s ) ;      } ,       s t o p :   f u n c t i o n ( )   {          i f   ( ! t h i s . t i m e r )   r e t u r n ;          c l e a r I n t e r v a l ( t h i s . t i m e r ) ;          t h i s . t i m e r   =   n u l l ;      } ,       o n T i m e r E v e n t :   f u n c t i o n ( )   {          i f   ( ! t h i s . c u r r e n t l y E x e c u t i n g )   {              t r y   {                  t h i s . c u r r e n t l y E x e c u t i n g   =   t r u e ;                  t h i s . e x e c u t e ( ) ;              }   f i n a l l y   {                  t h i s . c u r r e n t l y E x e c u t i n g   =   f a l s e ;              }          }      }  } ) ;  O b j e c t . e x t e n d ( S t r i n g ,   {      i n t e r p r e t :   f u n c t i o n ( v a l u e )   {          r e t u r n   v a l u e   = =   n u l l   ?   ' '   :   S t r i n g ( v a l u e ) ;      } ,      s p e c i a l C h a r :   {          ' \ b ' :   ' \ \ b ' ,          ' \ t ' :   ' \ \ t ' ,          ' \ n ' :   ' \ \ n ' ,          ' \ f ' :   ' \ \ f ' ,          ' \ r ' :   ' \ \ r ' ,          ' \ \ ' :   ' \ \ \ \ '      }  } ) ;   O b j e c t . e x t e n d ( S t r i n g . p r o t o t y p e ,   {      g s u b :   f u n c t i o n ( p a t t e r n ,   r e p l a c e m e n t )   {          v a r   r e s u l t   =   ' ' ,   s o u r c e   =   t h i s ,   m a t c h ;          r e p l a c e m e n t   =   a r g u m e n t s . c a l l e e . p r e p a r e R e p l a c e m e n t ( r e p l a c e m e n t ) ;           w h i l e   ( s o u r c e . l e n g t h   >   0 )   {              i f   ( m a t c h   =   s o u r c e . m a t c h ( p a t t e r n ) )   {                  r e s u l t   + =   s o u r c e . s l i c e ( 0 ,   m a t c h . i n d e x ) ;                  r e s u l t   + =   S t r i n g . i n t e r p r e t ( r e p l a c e m e n t ( m a t c h ) ) ;                  s o u r c e     =   s o u r c e . s l i c e ( m a t c h . i n d e x   +   m a t c h [ 0 ] . l e n g t h ) ;              }   e l s e   {                  r e s u l t   + =   s o u r c e ,   s o u r c e   =   ' ' ;              }          }          r e t u r n   r e s u l t ;      } ,       s u b :   f u n c t i o n ( p a t t e r n ,   r e p l a c e m e n t ,   c o u n t )   {          r e p l a c e m e n t   =   t h i s . g s u b . p r e p a r e R e p l a c e m e n t ( r e p l a c e m e n t ) ;          c o u n t   =   O b j e c t . i s U n d e f i n e d ( c o u n t )   ?   1   :   c o u n t ;           r e t u r n   t h i s . g s u b ( p a t t e r n ,   f u n c t i o n ( m a t c h )   {              i f   ( - - c o u n t   <   0 )   r e t u r n   m a t c h [ 0 ] ;              r e t u r n   r e p l a c e m e n t ( m a t c h ) ;          } ) ;      } ,       s c a n :   f u n c t i o n ( p a t t e r n ,   i t e r a t o r )   {          t h i s . g s u b ( p a t t e r n ,   i t e r a t o r ) ;          r e t u r n   S t r i n g ( t h i s ) ;      } ,       t r u n c a t e :   f u n c t i o n ( l e n g t h ,   t r u n c a t i o n )   {          l e n g t h   =   l e n g t h   | |   3 0 ;          t r u n c a t i o n   =   O b j e c t . i s U n d e f i n e d ( t r u n c a t i o n )   ?   ' . . . '   :   t r u n c a t i o n ;          r e t u r n   t h i s . l e n g t h   >   l e n g t h   ?              t h i s . s l i c e ( 0 ,   l e n g t h   -   t r u n c a t i o n . l e n g t h )   +   t r u n c a t i o n   :   S t r i n g ( t h i s ) ;      } ,       s t r i p :   f u n c t i o n ( )   {          r e t u r n   t h i s . r e p l a c e ( / ^ \ s + / ,   ' ' ) . r e p l a c e ( / \ s + $ / ,   ' ' ) ;      } ,       s t r i p T a g s :   f u n c t i o n ( )   {          r e t u r n   t h i s . r e p l a c e ( / < \ / ? [ ^ > ] + > / g i ,   ' ' ) ;      } ,       s t r i p S c r i p t s :   f u n c t i o n ( )   {          r e t u r n   t h i s . r e p l a c e ( n e w   R e g E x p ( P r o t o t y p e . S c r i p t F r a g m e n t ,   ' i m g ' ) ,   ' ' ) ;      } ,       e x t r a c t S c r i p t s :   f u n c t i o n ( )   {          v a r   m a t c h A l l   =   n e w   R e g E x p ( P r o t o t y p e . S c r i p t F r a g m e n t ,   ' i m g ' ) ;          v a r   m a t c h O n e   =   n e w   R e g E x p ( P r o t o t y p e . S c r i p t F r a g m e n t ,   ' i m ' ) ;          r e t u r n   ( t h i s . m a t c h ( m a t c h A l l )   | |   [ ] ) . m a p ( f u n c t i o n ( s c r i p t T a g )   {              r e t u r n   ( s c r i p t T a g . m a t c h ( m a t c h O n e )   | |   [ ' ' ,   ' ' ] ) [ 1 ] ;          } ) ;      } ,       e v a l S c r i p t s :   f u n c t i o n ( )   {          r e t u r n   t h i s . e x t r a c t S c r i p t s ( ) . m a p ( f u n c t i o n ( s c r i p t )   {   r e t u r n   e v a l ( s c r i p t )   } ) ;      } ,       e s c a p e H T M L :   f u n c t i o n ( )   {          v a r   s e l f   =   a r g u m e n t s . c a l l e e ;          s e l f . t e x t . d a t a   =   t h i s ;          r e t u r n   s e l f . d i v . i n n e r H T M L ;      } ,       u n e s c a p e H T M L :   f u n c t i o n ( )   {          v a r   d i v   =   n e w   E l e m e n t ( ' d i v ' ) ;          d i v . i n n e r H T M L   =   t h i s . s t r i p T a g s ( ) ;          r e t u r n   d i v . c h i l d N o d e s [ 0 ]   ?   ( d i v . c h i l d N o d e s . l e n g t h   >   1   ?              $ A ( d i v . c h i l d N o d e s ) . i n j e c t ( ' ' ,   f u n c t i o n ( m e m o ,   n o d e )   {   r e t u r n   m e m o + n o d e . n o d e V a l u e   } )   :              d i v . c h i l d N o d e s [ 0 ] . n o d e V a l u e )   :   ' ' ;      } ,       t o Q u e r y P a r a m s :   f u n c t i o n ( s e p a r a t o r )   {          v a r   m a t c h   =   t h i s . s t r i p ( ) . m a t c h ( / ( [ ^ ? # ] * ) ( # . * ) ? $ / ) ;          i f   ( ! m a t c h )   r e t u r n   {   } ;           r e t u r n   m a t c h [ 1 ] . s p l i t ( s e p a r a t o r   | |   ' & ' ) . i n j e c t ( {   } ,   f u n c t i o n ( h a s h ,   p a i r )   {              i f   ( ( p a i r   =   p a i r . s p l i t ( ' = ' ) ) [ 0 ] )   {                  v a r   k e y   =   d e c o d e U R I C o m p o n e n t ( p a i r . s h i f t ( ) ) ;                  v a r   v a l u e   =   p a i r . l e n g t h   >   1   ?   p a i r . j o i n ( ' = ' )   :   p a i r [ 0 ] ;                  i f   ( v a l u e   ! =   u n d e f i n e d )   v a l u e   =   d e c o d e U R I C o m p o n e n t ( v a l u e ) ;                   i f   ( k e y   i n   h a s h )   {                      i f   ( ! O b j e c t . i s A r r a y ( h a s h [ k e y ] ) )   h a s h [ k e y ]   =   [ h a s h [ k e y ] ] ;                      h a s h [ k e y ] . p u s h ( v a l u e ) ;                  }                  e l s e   h a s h [ k e y ]   =   v a l u e ;              }              r e t u r n   h a s h ;          } ) ;      } ,       t o A r r a y :   f u n c t i o n ( )   {          r e t u r n   t h i s . s p l i t ( ' ' ) ;      } ,       s u c c :   f u n c t i o n ( )   {          r e t u r n   t h i s . s l i c e ( 0 ,   t h i s . l e n g t h   -   1 )   +              S t r i n g . f r o m C h a r C o d e ( t h i s . c h a r C o d e A t ( t h i s . l e n g t h   -   1 )   +   1 ) ;      } ,       t i m e s :   f u n c t i o n ( c o u n t )   {          r e t u r n   c o u n t   <   1   ?   ' '   :   n e w   A r r a y ( c o u n t   +   1 ) . j o i n ( t h i s ) ;      } ,       c a m e l i z e :   f u n c t i o n ( )   {          v a r   p a r t s   =   t h i s . s p l i t ( ' - ' ) ,   l e n   =   p a r t s . l e n g t h ;          i f   ( l e n   = =   1 )   r e t u r n   p a r t s [ 0 ] ;           v a r   c a m e l i z e d   =   t h i s . c h a r A t ( 0 )   = =   ' - '              ?   p a r t s [ 0 ] . c h a r A t ( 0 ) . t o U p p e r C a s e ( )   +   p a r t s [ 0 ] . s u b s t r i n g ( 1 )              :   p a r t s [ 0 ] ;           f o r   ( v a r   i   =   1 ;   i   <   l e n ;   i + + )              c a m e l i z e d   + =   p a r t s [ i ] . c h a r A t ( 0 ) . t o U p p e r C a s e ( )   +   p a r t s [ i ] . s u b s t r i n g ( 1 ) ;           r e t u r n   c a m e l i z e d ;      } ,       c a p i t a l i z e :   f u n c t i o n ( )   {          r e t u r n   t h i s . c h a r A t ( 0 ) . t o U p p e r C a s e ( )   +   t h i s . s u b s t r i n g ( 1 ) . t o L o w e r C a s e ( ) ;      } ,       u n d e r s c o r e :   f u n c t i o n ( )   {          r e t u r n   t h i s . g s u b ( / : : / ,   ' / ' ) . g s u b ( / ( [ A - Z ] + ) ( [ A - Z ] [ a - z ] ) / , ' # { 1 } _ # { 2 } ' ) . g s u b ( / ( [ a - z \ d ] ) ( [ A - Z ] ) / , ' # { 1 } _ # { 2 } ' ) . g s u b ( / - / , ' _ ' ) . t o L o w e r C a s e ( ) ;      } ,       d a s h e r i z e :   f u n c t i o n ( )   {          r e t u r n   t h i s . g s u b ( / _ / , ' - ' ) ;      } ,       i n s p e c t :   f u n c t i o n ( u s e D o u b l e Q u o t e s )   {          v a r   e s c a p e d S t r i n g   =   t h i s . g s u b ( / [ \ x 0 0 - \ x 1 f \ \ ] / ,   f u n c t i o n ( m a t c h )   {              v a r   c h a r a c t e r   =   S t r i n g . s p e c i a l C h a r [ m a t c h [ 0 ] ] ;              r e t u r n   c h a r a c t e r   ?   c h a r a c t e r   :   ' \ \ u 0 0 '   +   m a t c h [ 0 ] . c h a r C o d e A t ( ) . t o P a d d e d S t r i n g ( 2 ,   1 6 ) ;          } ) ;          i f   ( u s e D o u b l e Q u o t e s )   r e t u r n   ' " '   +   e s c a p e d S t r i n g . r e p l a c e ( / " / g ,   ' \ \ " ' )   +   ' " ' ;          r e t u r n   " ' "   +   e s c a p e d S t r i n g . r e p l a c e ( / ' / g ,   ' \ \ \ ' ' )   +   " ' " ;      } ,       t o J S O N :   f u n c t i o n ( )   {          r e t u r n   t h i s . i n s p e c t ( t r u e ) ;      } ,       u n f i l t e r J S O N :   f u n c t i o n ( f i l t e r )   {          r e t u r n   t h i s . s u b ( f i l t e r   | |   P r o t o t y p e . J S O N F i l t e r ,   ' # { 1 } ' ) ;      } ,       i s J S O N :   f u n c t i o n ( )   {          v a r   s t r   =   t h i s ;          i f   ( s t r . b l a n k ( ) )   r e t u r n   f a l s e ;          s t r   =   t h i s . r e p l a c e ( / \ \ . / g ,   ' @ ' ) . r e p l a c e ( / " [ ^ " \ \ \ n \ r ] * " / g ,   ' ' ) ;          r e t u r n   ( / ^ [ , : { } \ [ \ ] 0 - 9 . \ - + E a e f l n r - u   \ n \ r \ t ] * $ / ) . t e s t ( s t r ) ;      } ,       e v a l J S O N :   f u n c t i o n ( s a n i t i z e )   {          v a r   j s o n   =   t h i s . u n f i l t e r J S O N ( ) ;          t r y   {              i f   ( ! s a n i t i z e   | |   j s o n . i s J S O N ( ) )   r e t u r n   e v a l ( ' ( '   +   j s o n   +   ' ) ' ) ;          }   c a t c h   ( e )   {   }          t h r o w   n e w   S y n t a x E r r o r ( ' B a d l y   f o r m e d   J S O N   s t r i n g :   '   +   t h i s . i n s p e c t ( ) ) ;      } ,       i n c l u d e :   f u n c t i o n ( p a t t e r n )   {          r e t u r n   t h i s . i n d e x O f ( p a t t e r n )   >   - 1 ;      } ,       s t a r t s W i t h :   f u n c t i o n ( p a t t e r n )   {          r e t u r n   t h i s . i n d e x O f ( p a t t e r n )   = = =   0 ;      } ,       e n d s W i t h :   f u n c t i o n ( p a t t e r n )   {          v a r   d   =   t h i s . l e n g t h   -   p a t t e r n . l e n g t h ;          r e t u r n   d   > =   0   & &   t h i s . l a s t I n d e x O f ( p a t t e r n )   = = =   d ;      } ,       e m p t y :   f u n c t i o n ( )   {          r e t u r n   t h i s   = =   ' ' ;      } ,       b l a n k :   f u n c t i o n ( )   {          r e t u r n   / ^ \ s * $ / . t e s t ( t h i s ) ;      } ,       i n t e r p o l a t e :   f u n c t i o n ( o b j e c t ,   p a t t e r n )   {          r e t u r n   n e w   T e m p l a t e ( t h i s ,   p a t t e r n ) . e v a l u a t e ( o b j e c t ) ;      }  } ) ;   i f   ( P r o t o t y p e . B r o w s e r . W e b K i t   | |   P r o t o t y p e . B r o w s e r . I E )   O b j e c t . e x t e n d ( S t r i n g . p r o t o t y p e ,   {      e s c a p e H T M L :   f u n c t i o n ( )   {          r e t u r n   t h i s . r e p l a c e ( / & / g , ' & a m p ; ' ) . r e p l a c e ( / < / g , ' & l t ; ' ) . r e p l a c e ( / > / g , ' & g t ; ' ) ;      } ,      u n e s c a p e H T M L :   f u n c t i o n ( )   {          r e t u r n   t h i s . r e p l a c e ( / & a m p ; / g , ' & ' ) . r e p l a c e ( / & l t ; / g , ' < ' ) . r e p l a c e ( / & g t ; / g , ' > ' ) ;      }  } ) ;   S t r i n g . p r o t o t y p e . g s u b . p r e p a r e R e p l a c e m e n t   =   f u n c t i o n ( r e p l a c e m e n t )   {      i f   ( O b j e c t . i s F u n c t i o n ( r e p l a c e m e n t ) )   r e t u r n   r e p l a c e m e n t ;      v a r   t e m p l a t e   =   n e w   T e m p l a t e ( r e p l a c e m e n t ) ;      r e t u r n   f u n c t i o n ( m a t c h )   {   r e t u r n   t e m p l a t e . e v a l u a t e ( m a t c h )   } ;  } ;   S t r i n g . p r o t o t y p e . p a r s e Q u e r y   =   S t r i n g . p r o t o t y p e . t o Q u e r y P a r a m s ;   O b j e c t . e x t e n d ( S t r i n g . p r o t o t y p e . e s c a p e H T M L ,   {      d i v :     d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) ,      t e x t :   d o c u m e n t . c r e a t e T e x t N o d e ( ' ' )  } ) ;   w i t h   ( S t r i n g . p r o t o t y p e . e s c a p e H T M L )   d i v . a p p e n d C h i l d ( t e x t ) ;   v a r   T e m p l a t e   =   C l a s s . c r e a t e ( {      i n i t i a l i z e :   f u n c t i o n ( t e m p l a t e ,   p a t t e r n )   {          t h i s . t e m p l a t e   =   t e m p l a t e . t o S t r i n g ( ) ;          t h i s . p a t t e r n   =   p a t t e r n   | |   T e m p l a t e . P a t t e r n ;      } ,       e v a l u a t e :   f u n c t i o n ( o b j e c t )   {          i f   ( O b j e c t . i s F u n c t i o n ( o b j e c t . t o T e m p l a t e R e p l a c e m e n t s ) )              o b j e c t   =   o b j e c t . t o T e m p l a t e R e p l a c e m e n t s ( ) ;           r e t u r n   t h i s . t e m p l a t e . g s u b ( t h i s . p a t t e r n ,   f u n c t i o n ( m a t c h )   {              i f   ( o b j e c t   = =   n u l l )   r e t u r n   ' ' ;               v a r   b e f o r e   =   m a t c h [ 1 ]   | |   ' ' ;              i f   ( b e f o r e   = =   ' \ \ ' )   r e t u r n   m a t c h [ 2 ] ;               v a r   c t x   =   o b j e c t ,   e x p r   =   m a t c h [ 3 ] ;              v a r   p a t t e r n   =   / ^ ( [ ^ . [ ] + | \ [ ( ( ? : . * ? [ ^ \ \ ] ) ? ) \ ] ) ( \ . | \ [ | $ ) / ;              m a t c h   =   p a t t e r n . e x e c ( e x p r ) ;              i f   ( m a t c h   = =   n u l l )   r e t u r n   b e f o r e ;               w h i l e   ( m a t c h   ! =   n u l l )   {                  v a r   c o m p   =   m a t c h [ 1 ] . s t a r t s W i t h ( ' [ ' )   ?   m a t c h [ 2 ] . g s u b ( ' \ \ \ \ ] ' ,   ' ] ' )   :   m a t c h [ 1 ] ;                  c t x   =   c t x [ c o m p ] ;                  i f   ( n u l l   = =   c t x   | |   ' '   = =   m a t c h [ 3 ] )   b r e a k ;                  e x p r   =   e x p r . s u b s t r i n g ( ' [ '   = =   m a t c h [ 3 ]   ?   m a t c h [ 1 ] . l e n g t h   :   m a t c h [ 0 ] . l e n g t h ) ;                  m a t c h   =   p a t t e r n . e x e c ( e x p r ) ;              }               r e t u r n   b e f o r e   +   S t r i n g . i n t e r p r e t ( c t x ) ;          } ) ;      }  } ) ;  T e m p l a t e . P a t t e r n   =   / ( ^ | . | \ r | \ n ) ( # \ { ( . * ? ) \ } ) / ;   v a r   $ b r e a k   =   {   } ;   v a r   E n u m e r a b l e   =   {      e a c h :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          v a r   i n d e x   =   0 ;          i t e r a t o r   =   i t e r a t o r . b i n d ( c o n t e x t ) ;          t r y   {              t h i s . _ e a c h ( f u n c t i o n ( v a l u e )   {                  i t e r a t o r ( v a l u e ,   i n d e x + + ) ;              } ) ;          }   c a t c h   ( e )   {              i f   ( e   ! =   $ b r e a k )   t h r o w   e ;          }          r e t u r n   t h i s ;      } ,       e a c h S l i c e :   f u n c t i o n ( n u m b e r ,   i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   i n d e x   =   - n u m b e r ,   s l i c e s   =   [ ] ,   a r r a y   =   t h i s . t o A r r a y ( ) ;          w h i l e   ( ( i n d e x   + =   n u m b e r )   <   a r r a y . l e n g t h )              s l i c e s . p u s h ( a r r a y . s l i c e ( i n d e x ,   i n d e x + n u m b e r ) ) ;          r e t u r n   s l i c e s . c o l l e c t ( i t e r a t o r ,   c o n t e x t ) ;      } ,       a l l :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   r e s u l t   =   t r u e ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              r e s u l t   =   r e s u l t   & &   ! ! i t e r a t o r ( v a l u e ,   i n d e x ) ;              i f   ( ! r e s u l t )   t h r o w   $ b r e a k ;          } ) ;          r e t u r n   r e s u l t ;      } ,       a n y :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   r e s u l t   =   f a l s e ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              i f   ( r e s u l t   =   ! ! i t e r a t o r ( v a l u e ,   i n d e x ) )                  t h r o w   $ b r e a k ;          } ) ;          r e t u r n   r e s u l t ;      } ,       c o l l e c t :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   r e s u l t s   =   [ ] ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              r e s u l t s . p u s h ( i t e r a t o r ( v a l u e ,   i n d e x ) ) ;          } ) ;          r e t u r n   r e s u l t s ;      } ,       d e t e c t :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r . b i n d ( c o n t e x t ) ;          v a r   r e s u l t ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              i f   ( i t e r a t o r ( v a l u e ,   i n d e x ) )   {                  r e s u l t   =   v a l u e ;                  t h r o w   $ b r e a k ;              }          } ) ;          r e t u r n   r e s u l t ;      } ,       f i n d A l l :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r . b i n d ( c o n t e x t ) ;          v a r   r e s u l t s   =   [ ] ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              i f   ( i t e r a t o r ( v a l u e ,   i n d e x ) )                  r e s u l t s . p u s h ( v a l u e ) ;          } ) ;          r e t u r n   r e s u l t s ;      } ,       g r e p :   f u n c t i o n ( f i l t e r ,   i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   r e s u l t s   =   [ ] ;           i f   ( O b j e c t . i s S t r i n g ( f i l t e r ) )              f i l t e r   =   n e w   R e g E x p ( f i l t e r ) ;           t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              i f   ( f i l t e r . m a t c h ( v a l u e ) )                  r e s u l t s . p u s h ( i t e r a t o r ( v a l u e ,   i n d e x ) ) ;          } ) ;          r e t u r n   r e s u l t s ;      } ,       i n c l u d e :   f u n c t i o n ( o b j e c t )   {          i f   ( O b j e c t . i s F u n c t i o n ( t h i s . i n d e x O f ) )              i f   ( t h i s . i n d e x O f ( o b j e c t )   ! =   - 1 )   r e t u r n   t r u e ;           v a r   f o u n d   =   f a l s e ;          t h i s . e a c h ( f u n c t i o n ( v a l u e )   {              i f   ( v a l u e   = =   o b j e c t )   {                  f o u n d   =   t r u e ;                  t h r o w   $ b r e a k ;              }          } ) ;          r e t u r n   f o u n d ;      } ,       i n G r o u p s O f :   f u n c t i o n ( n u m b e r ,   f i l l W i t h )   {          f i l l W i t h   =   O b j e c t . i s U n d e f i n e d ( f i l l W i t h )   ?   n u l l   :   f i l l W i t h ;          r e t u r n   t h i s . e a c h S l i c e ( n u m b e r ,   f u n c t i o n ( s l i c e )   {              w h i l e ( s l i c e . l e n g t h   <   n u m b e r )   s l i c e . p u s h ( f i l l W i t h ) ;              r e t u r n   s l i c e ;          } ) ;      } ,       i n j e c t :   f u n c t i o n ( m e m o ,   i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r . b i n d ( c o n t e x t ) ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              m e m o   =   i t e r a t o r ( m e m o ,   v a l u e ,   i n d e x ) ;          } ) ;          r e t u r n   m e m o ;      } ,       i n v o k e :   f u n c t i o n ( m e t h o d )   {          v a r   a r g s   =   $ A ( a r g u m e n t s ) . s l i c e ( 1 ) ;          r e t u r n   t h i s . m a p ( f u n c t i o n ( v a l u e )   {              r e t u r n   v a l u e [ m e t h o d ] . a p p l y ( v a l u e ,   a r g s ) ;          } ) ;      } ,       m a x :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   r e s u l t ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              v a l u e   =   i t e r a t o r ( v a l u e ,   i n d e x ) ;              i f   ( r e s u l t   = =   n u l l   | |   v a l u e   > =   r e s u l t )                  r e s u l t   =   v a l u e ;          } ) ;          r e t u r n   r e s u l t ;      } ,       m i n :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   r e s u l t ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              v a l u e   =   i t e r a t o r ( v a l u e ,   i n d e x ) ;              i f   ( r e s u l t   = =   n u l l   | |   v a l u e   <   r e s u l t )                  r e s u l t   =   v a l u e ;          } ) ;          r e t u r n   r e s u l t ;      } ,       p a r t i t i o n :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r   ?   i t e r a t o r . b i n d ( c o n t e x t )   :   P r o t o t y p e . K ;          v a r   t r u e s   =   [ ] ,   f a l s e s   =   [ ] ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              ( i t e r a t o r ( v a l u e ,   i n d e x )   ?                  t r u e s   :   f a l s e s ) . p u s h ( v a l u e ) ;          } ) ;          r e t u r n   [ t r u e s ,   f a l s e s ] ;      } ,       p l u c k :   f u n c t i o n ( p r o p e r t y )   {          v a r   r e s u l t s   =   [ ] ;          t h i s . e a c h ( f u n c t i o n ( v a l u e )   {              r e s u l t s . p u s h ( v a l u e [ p r o p e r t y ] ) ;          } ) ;          r e t u r n   r e s u l t s ;      } ,       r e j e c t :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r . b i n d ( c o n t e x t ) ;          v a r   r e s u l t s   =   [ ] ;          t h i s . e a c h ( f u n c t i o n ( v a l u e ,   i n d e x )   {              i f   ( ! i t e r a t o r ( v a l u e ,   i n d e x ) )                  r e s u l t s . p u s h ( v a l u e ) ;          } ) ;          r e t u r n   r e s u l t s ;      } ,       s o r t B y :   f u n c t i o n ( i t e r a t o r ,   c o n t e x t )   {          i t e r a t o r   =   i t e r a t o r . b i n d ( c o n t e x t ) ;          r e t u r n   t h i s . m a p ( f u n c t i o n ( v a l u e ,   i n d e x )   {              r e t u r n   { v a l u e :   v a l u e ,   c r i t e r i a :   i t e r a t o r ( v a l u e ,   i n d e x ) } ;          } ) . s o r t ( f u n c t i o n ( l e f t ,   r i g h t )   {              v a r   a   =   l e f t . c r i t e r i a ,   b   =   r i g h t . c r i t e r i a ;              r e t u r n   a   <   b   ?   - 1   :   a   >   b   ?   1   :   0 ;          } ) . p l u c k ( ' v a l u e ' ) ;      } ,       t o A r r a y :   f u n c t i o n ( )   {          r e t u r n   t h i s . m a p ( ) ;      } ,       z i p :   f u n c t i o n ( )   {          v a r   i t e r a t o r   =   P r o t o t y p e . K ,   a r g s   =   $ A ( a r g u m e n t s ) ;          i f   ( O b j e c t . i s F u n c t i o n ( a r g s . l a s t ( ) ) )              i t e r a t o r   =   a r g s . p o p ( ) ;           v a r   c o l l e c t i o n s   =   [ t h i s ] . c o n c a t ( a r g s ) . m a p ( $ A ) ;          r e t u r n   t h i s . m a p ( f u n c t i o n ( v a l u e ,   i n d e x )   {              r e t u r n   i t e r a t o r ( c o l l e c t i o n s . p l u c k ( i n d e x ) ) ;          } ) ;      } ,       s i z e :   f u n c t i o n ( )   {          r e t u r n   t h i s . t o A r r a y ( ) . l e n g t h ;      } ,       i n s p e c t :   f u n c t i o n ( )   {          r e t u r n   ' # < E n u m e r a b l e : '   +   t h i s . t o A r r a y ( ) . i n s p e c t ( )   +   ' > ' ;      }  } ;   O b j e c t . e x t e n d ( E n u m e r a b l e ,   {      m a p :           E n u m e r a b l e . c o l l e c t ,      f i n d :         E n u m e r a b l e . d e t e c t ,      s e l e c t :     E n u m e r a b l e . f i n d A l l ,      f i l t e r :     E n u m e r a b l e . f i n d A l l ,      m e m b e r :     E n u m e r a b l e . i n c l u d e ,      e n t r i e s :   E n u m e r a b l e . t o A r r a y ,      e v e r y :       E n u m e r a b l e . a l l ,      s o m e :         E n u m e r a b l e . a n y  } ) ;  f u n c t i o n   $ A ( i t e r a b l e )   {      i f   ( ! i t e r a b l e )   r e t u r n   [ ] ;      i f   ( i t e r a b l e . t o A r r a y )   r e t u r n   i t e r a b l e . t o A r r a y ( ) ;      v a r   l e n g t h   =   i t e r a b l e . l e n g t h   | |   0 ,   r e s u l t s   =   n e w   A r r a y ( l e n g t h ) ;      w h i l e   ( l e n g t h - - )   r e s u l t s [ l e n g t h ]   =   i t e r a b l e [ l e n g t h ] ;      r e t u r n   r e s u l t s ;  }   i f   ( P r o t o t y p e . B r o w s e r . W e b K i t )   {      $ A   =   f u n c t i o n ( i t e r a b l e )   {          i f   ( ! i t e r a b l e )   r e t u r n   [ ] ;          i f   ( ! ( O b j e c t . i s F u n c t i o n ( i t e r a b l e )   & &   i t e r a b l e   = =   ' [ o b j e c t   N o d e L i s t ] ' )   & &                  i t e r a b l e . t o A r r a y )   r e t u r n   i t e r a b l e . t o A r r a y ( ) ;          v a r   l e n g t h   =   i t e r a b l e . l e n g t h   | |   0 ,   r e s u l t s   =   n e w   A r r a y ( l e n g t h ) ;          w h i l e   ( l e n g t h - - )   r e s u l t s [ l e n g t h ]   =   i t e r a b l e [ l e n g t h ] ;          r e t u r n   r e s u l t s ;      } ;  }   A r r a y . f r o m   =   $ A ;   O b j e c t . e x t e n d ( A r r a y . p r o t o t y p e ,   E n u m e r a b l e ) ;   i f   ( ! A r r a y . p r o t o t y p e . _ r e v e r s e )   A r r a y . p r o t o t y p e . _ r e v e r s e   =   A r r a y . p r o t o t y p e . r e v e r s e ;   O b j e c t . e x t e n d ( A r r a y . p r o t o t y p e ,   {      _ e a c h :   f u n c t i o n ( i t e r a t o r )   {          f o r   ( v a r   i   =   0 ,   l e n g t h   =   t h i s . l e n g t h ;   i   <   l e n g t h ;   i + + )              i t e r a t o r ( t h i s [ i ] ) ;      } ,       c l e a r :   f u n c t i o n ( )   {          t h i s . l e n g t h   =   0 ;          r e t u r n   t h i s ;      } ,       f i r s t :   f u n c t i o n ( )   {          r e t u r n   t h i s [ 0 ] ;      } ,       l a s t :   f u n c t i o n ( )   {          r e t u r n   t h i s [ t h i s . l e n g t h   -   1 ] ;      } ,       c o m p a c t :   f u n c t i o n ( )   {          r e t u r n   t h i s . s e l e c t ( f u n c t i o n ( v a l u e )   {              r e t u r n   v a l u e   ! =   n u l l ;          } ) ;      } ,       f l a t t e n :   f u n c t i o n ( )   {          r e t u r n   t h i s . i n j e c t ( [ ] ,   f u n c t i o n ( a r r a y ,   v a l u e )   {              r e t u r n   a r r a y . c o n c a t ( O b j e c t . i s A r r a y ( v a l u e )   ?                  v a l u e . f l a t t e n ( )   :   [ v a l u e ] ) ;          } ) ;      } ,       w i t h o u t :   f u n c t i o n ( )   {          v a r   v a l u e s   =   $ A ( a r g u m e n t s ) ;          r e t u r n   t h i s . s e l e c t ( f u n c t i o n ( v a l u e )   {              r e t u r n   ! v a l u e s . i n c l u d e ( v a l u e ) ;          } ) ;      } ,       r e v e r s e :   f u n c t i o n ( i n l i n e )   {          r e t u r n   ( i n l i n e   ! = =   f a l s e   ?   t h i s   :   t h i s . t o A r r a y ( ) ) . _ r e v e r s e ( ) ;      } ,       r e d u c e :   f u n c t i o n ( )   {          r e t u r n   t h i s . l e n g t h   >   1   ?   t h i s   :   t h i s [ 0 ] ;      } ,       u n i q :   f u n c t i o n ( s o r t e d )   {          r e t u r n   t h i s . i n j e c t ( [ ] ,   f u n c t i o n ( a r r a y ,   v a l u e ,   i n d e x )   {              i f   ( 0   = =   i n d e x   | |   ( s o r t e d   ?   a r r a y . l a s t ( )   ! =   v a l u e   :   ! a r r a y . i n c l u d e ( v a l u e ) ) )                  a r r a y . p u s h ( v a l u e ) ;              r e t u r n   a r r a y ;          } ) ;      } ,       i n t e r s e c t :   f u n c t i o n ( a r r a y )   {          r e t u r n   t h i s . u n i q ( ) . f i n d A l l ( f u n c t i o n ( i t e m )   {              r e t u r n   a r r a y . d e t e c t ( f u n c t i o n ( v a l u e )   {   r e t u r n   i t e m   = = =   v a l u e   } ) ;          } ) ;      } ,       c l o n e :   f u n c t i o n ( )   {          r e t u r n   [ ] . c o n c a t ( t h i s ) ;      } ,       s i z e :   f u n c t i o n ( )   {          r e t u r n   t h i s . l e n g t h ;      } ,       i n s p e c t :   f u n c t i o n ( )   {          r e t u r n   ' [ '   +   t h i s . m a p ( O b j e c t . i n s p e c t ) . j o i n ( ' ,   ' )   +   ' ] ' ;      } ,       t o J S O N :   f u n c t i o n ( )   {          v a r   r e s u l t s   =   [ ] ;          t h i s . e a c h ( f u n c t i o n ( o b j e c t )   {              v a r   v a l u e   =   O b j e c t . t o J S O N ( o b j e c t ) ;              i f   ( ! O b j e c t . i s U n d e f i n e d ( v a l u e ) )   r e s u l t s . p u s h ( v a l u e ) ;          } ) ;          r e t u r n   ' [ '   +   r e s u l t s . j o i n ( ' ,   ' )   +   ' ] ' ;      }  } ) ;   / /   u s e   n a t i v e   b r o w s e r   J S   1 . 6   i m p l e m e n t a t i o n   i f   a v a i l a b l e  i f   ( O b j e c t . i s F u n c t i o n ( A r r a y . p r o t o t y p e . f o r E a c h ) )      A r r a y . p r o t o t y p e . _ e a c h   =   A r r a y . p r o t o t y p e . f o r E a c h ;   i f   ( ! A r r a y . p r o t o t y p e . i n d e x O f )   A r r a y . p r o t o t y p e . i n d e x O f   =   f u n c t i o n ( i t e m ,   i )   {      i   | |   ( i   =   0 ) ;      v a r   l e n g t h   =   t h i s . l e n g t h ;      i f   ( i   <   0 )   i   =   l e n g t h   +   i ;      f o r   ( ;   i   <   l e n g t h ;   i + + )          i f   ( t h i s [ i ]   = = =   i t e m )   r e t u r n   i ;      r e t u r n   - 1 ;  } ;   i f   ( ! A r r a y . p r o t o t y p e . l a s t I n d e x O f )   A r r a y . p r o t o t y p e . l a s t I n d e x O f   =   f u n c t i o n ( i t e m ,   i )   {      i   =   i s N a N ( i )   ?   t h i s . l e n g t h   :   ( i   <   0   ?   t h i s . l e n g t h   +   i   :   i )   +   1 ;      v a r   n   =   t h i s . s l i c e ( 0 ,   i ) . r e v e r s e ( ) . i n d e x O f ( i t e m ) ;      r e t u r n   ( n   <   0 )   ?   n   :   i   -   n   -   1 ;  } ;   A r r a y . p r o t o t y p e . t o A r r a y   =   A r r a y . p r o t o t y p e . c l o n e ;   f u n c t i o n   $ w ( s t r i n g )   {      i f   ( ! O b j e c t . i s S t r i n g ( s t r i n g ) )   r e t u r n   [ ] ;      s t r i n g   =   s t r i n g . s t r i p ( ) ;      r e t u r n   s t r i n g   ?   s t r i n g . s p l i t ( / \ s + / )   :   [ ] ;  }   i f   ( P r o t o t y p e . B r o w s e r . O p e r a ) {      A r r a y . p r o t o t y p e . c o n c a t   =   f u n c t i o n ( )   {          v a r   a r r a y   =   [ ] ;          f o r   ( v a r   i   =   0 ,   l e n g t h   =   t h i s . l e n g t h ;   i   <   l e n g t h ;   i + + )   a r r a y . p u s h ( t h i s [ i ] ) ;          f o r   ( v a r   i   =   0 ,   l e n g t h   =   a r g u m e n t s . l e n g t h ;   i   <   l e n g t h ;   i + + )   {              i f   ( O b j e c t . i s A r r a y ( a r g u m e n t s [ i ] ) )   {                  f o r   ( v a r   j   =   0 ,   a r r a y L e n g t h   =   a r g u m e n t s [ i ] . l e n g t h ;   j   <   a r r a y L e n g t h ;   j + + )                      a r r a y . p u s h ( a r g u m e n t s [ i ] [ j ] ) ;              }   e l s e   {                  a r r a y . p u s h ( a r g u m e n t s [ i ] ) ;              }          }          r e t u r n   a r r a y ;      } ;  }  O b j e c t . e x t e n d ( N u m b e r . p r o t o t y p e ,   {      t o C o l o r P a r t :   f u n c t i o n ( )   {          r e t u r n   t h i s . t o P a d d e d S t r i n g ( 2 ,   1 6 ) ;      } ,       s u c c :   f u n c t i o n ( )   {          r e t u r n   t h i s   +   1 ;      } ,       t i m e s :   f u n c t i o n ( i t e r a t o r )   {          $ R ( 0 ,   t h i s ,   t r u e ) . e a c h ( i t e r a t o r ) ;          r e t u r n   t h i s ;      } ,       t o P a d d e d S t r i n g :   f u n c t i o n ( l e n g t h ,   r a d i x )   {          v a r   s t r i n g   =   t h i s . t o S t r i n g ( r a d i x   | |   1 0 ) ;          r e t u r n   ' 0 ' . t i m e s ( l e n g t h   -   s t r i n g . l e n g t h )   +   s t r i n g ;      } ,       t o J S O N :   f u n c t i o n ( )   {          r e t u r n   i s F i n i t e ( t h i s )   ?   t h i s . t o S t r i n g ( )   :   ' n u l l ' ;      }  } ) ;   $ w ( ' a b s   r o u n d   c e i l   f l o o r ' ) . e a c h ( f u n c t i o n ( m e t h o d ) {      N u m b e r . p r o t o t y p e [ m e t h o d ]   =   M a t h [ m e t h o d ] . m e t h o d i z e ( ) ;  } ) ;  f u n c t i o n   $ H ( o b j e c t )   {      r e t u r n   n e w   H a s h ( o b j e c t ) ;  } ;   v a r   H a s h   =   C l a s s . c r e a t e ( E n u m e r a b l e ,   ( f u n c t i o n ( )   {       f u n c t i o n   t o Q u e r y P a i r ( k e y ,   v a l u e )   {          i f   ( O b j e c t . i s U n d e f i n e d ( v a l u e ) )   r e t u r n   k e y ;          r e t u r n   k e y   +   ' = '   +   e n c o d e U R I C o m p o n e n t ( S t r i n g . i n t e r p r e t ( v a l u e ) ) ;      }       r e t u r n   {          i n i t i a l i z e :   f u n c t i o n ( o b j e c t )   {              t h i s . _ o b j e c t   =   O b j e c t . i s H a s h ( o b j e c t )   ?   o b j e c t . t o O b j e c t ( )   :   O b j e c t . c l o n e ( o b j e c t ) ;          } ,           _ e a c h :   f u n c t i o n ( i t e r a t o r )   {              f o r   ( v a r   k e y   i n   t h i s . _ o b j e c t )   {                  v a r   v a l u e   =   t h i s . _ o b j e c t [ k e y ] ,   p a i r   =   [ k e y ,   v a l u e ] ;                  p a i r . k e y   =   k e y ;                  p a i r . v a l u e   =   v a l u e ;                  i t e r a t o r ( p a i r ) ;              }          } ,           s e t :   f u n c t i o n ( k e y ,   v a l u e )   {              r e t u r n   t h i s . _ o b j e c t [ k e y ]   =   v a l u e ;          } ,           g e t :   f u n c t i o n ( k e y )   {              r e t u r n   t h i s . _ o b j e c t [ k e y ] ;          } ,           u n s e t :   f u n c t i o n ( k e y )   {              v a r   v a l u e   =   t h i s . _ o b j e c t [ k e y ] ;              d e l e t e   t h i s . _ o b j e c t [ k e y ] ;              r e t u r n   v a l u e ;          } ,           t o O b j e c t :   f u n c t i o n ( )   {              r e t u r n   O b j e c t . c l o n e ( t h i s . _ o b j e c t ) ;          } ,           k e y s :   f u n c t i o n ( )   {              r e t u r n   t h i s . p l u c k ( ' k e y ' ) ;          } ,           v a l u e s :   f u n c t i o n ( )   {              r e t u r n   t h i s . p l u c k ( ' v a l u e ' ) ;          } ,           i n d e x :   f u n c t i o n ( v a l u e )   {              v a r   m a t c h   =   t h i s . d e t e c t ( f u n c t i o n ( p a i r )   {                  r e t u r n   p a i r . v a l u e   = = =   v a l u e ;              } ) ;              r e t u r n   m a t c h   & &   m a t c h . k e y ;          } ,           m e r g e :   f u n c t i o n ( o b j e c t )   {              r e t u r n   t h i s . c l o n e ( ) . u p d a t e ( o b j e c t ) ;          } ,           u p d a t e :   f u n c t i o n ( o b j e c t )   {              r e t u r n   n e w   H a s h ( o b j e c t ) . i n j e c t ( t h i s ,   f u n c t i o n ( r e s u l t ,   p a i r )   {                  r e s u l t . s e t ( p a i r . k e y ,   p a i r . v a l u e ) ;                  r e t u r n   r e s u l t ;              } ) ;          } ,           t o Q u e r y S t r i n g :   f u n c t i o n ( )   {              r e t u r n   t h i s . m a p ( f u n c t i o n ( p a i r )   {                  v a r   k e y   =   e n c o d e U R I C o m p o n e n t ( p a i r . k e y ) ,   v a l u e s   =   p a i r . v a l u e ;                   i f   ( v a l u e s   & &   t y p e o f   v a l u e s   = =   ' o b j e c t ' )   {                      i f   ( O b j e c t . i s A r r a y ( v a l u e s ) )                          r e t u r n   v a l u e s . m a p ( t o Q u e r y P a i r . c u r r y ( k e y ) ) . j o i n ( ' & ' ) ;                  }                  r e t u r n   t o Q u e r y P a i r ( k e y ,   v a l u e s ) ;              } ) . j o i n ( ' & ' ) ;          } ,           i n s p e c t :   f u n c t i o n ( )   {              r e t u r n   ' # < H a s h : { '   +   t h i s . m a p ( f u n c t i o n ( p a i r )   {                  r e t u r n   p a i r . m a p ( O b j e c t . i n s p e c t ) . j o i n ( ' :   ' ) ;              } ) . j o i n ( ' ,   ' )   +   ' } > ' ;          } ,           t o J S O N :   f u n c t i o n ( )   {              r e t u r n   O b j e c t . t o J S O N ( t h i s . t o O b j e c t ( ) ) ;          } ,           c l o n e :   f u n c t i o n ( )   {              r e t u r n   n e w   H a s h ( t h i s ) ;          }      }  } ) ( ) ) ;   H a s h . p r o t o t y p e . t o T e m p l a t e R e p l a c e m e n t s   =   H a s h . p r o t o t y p e . t o O b j e c t ;  H a s h . f r o m   =   $ H ;  v a r   O b j e c t R a n g e   =   C l a s s . c r e a t e ( E n u m e r a b l e ,   {      i n i t i a l i z e :   f u n c t i o n ( s t a r t ,   e n d ,   e x c l u s i v e )   {          t h i s . s t a r t   =   s t a r t ;          t h i s . e n d   =   e n d ;          t h i s . e x c l u s i v e   =   e x c l u s i v e ;      } ,       _ e a c h :   f u n c t i o n ( i t e r a t o r )   {          v a r   v a l u e   =   t h i s . s t a r t ;          w h i l e   ( t h i s . i n c l u d e ( v a l u e ) )   {              i t e r a t o r ( v a l u e ) ;              v a l u e   =   v a l u e . s u c c ( ) ;          }      } ,       i n c l u d e :   f u n c t i o n ( v a l u e )   {          i f   ( v a l u e   <   t h i s . s t a r t )              r e t u r n   f a l s e ;          i f   ( t h i s . e x c l u s i v e )              r e t u r n   v a l u e   <   t h i s . e n d ;          r e t u r n   v a l u e   < =   t h i s . e n d ;      }  } ) ;   v a r   $ R   =   f u n c t i o n ( s t a r t ,   e n d ,   e x c l u s i v e )   {      r e t u r n   n e w   O b j e c t R a n g e ( s t a r t ,   e n d ,   e x c l u s i v e ) ;  } ;   v a r   A j a x   =   {      g e t T r a n s p o r t :   f u n c t i o n ( )   {          r e t u r n   T r y . t h e s e (              f u n c t i o n ( )   { r e t u r n   n e w   X M L H t t p R e q u e s t ( ) } ,              f u n c t i o n ( )   { r e t u r n   n e w   A c t i v e X O b j e c t ( ' M s x m l 2 . X M L H T T P ' ) } ,              f u n c t i o n ( )   { r e t u r n   n e w   A c t i v e X O b j e c t ( ' M i c r o s o f t . X M L H T T P ' ) }          )   | |   f a l s e ;      } ,       a c t i v e R e q u e s t C o u n t :   0  } ;   A j a x . R e s p o n d e r s   =   {      r e s p o n d e r s :   [ ] ,       _ e a c h :   f u n c t i o n ( i t e r a t o r )   {          t h i s . r e s p o n d e r s . _ e a c h ( i t e r a t o r ) ;      } ,       r e g i s t e r :   f u n c t i o n ( r e s p o n d e r )   {          i f   ( ! t h i s . i n c l u d e ( r e s p o n d e r ) )              t h i s . r e s p o n d e r s . p u s h ( r e s p o n d e r ) ;      } ,       u n r e g i s t e r :   f u n c t i o n ( r e s p o n d e r )   {          t h i s . r e s p o n d e r s   =   t h i s . r e s p o n d e r s . w i t h o u t ( r e s p o n d e r ) ;      } ,       d i s p a t c h :   f u n c t i o n ( c a l l b a c k ,   r e q u e s t ,   t r a n s p o r t ,   j s o n )   {          t h i s . e a c h ( f u n c t i o n ( r e s p o n d e r )   {              i f   ( O b j e c t . i s F u n c t i o n ( r e s p o n d e r [ c a l l b a c k ] ) )   {                  t r y   {                      r e s p o n d e r [ c a l l b a c k ] . a p p l y ( r e s p o n d e r ,   [ r e q u e s t ,   t r a n s p o r t ,   j s o n ] ) ;                  }   c a t c h   ( e )   {   }              }          } ) ;      }  } ;   O b j e c t . e x t e n d ( A j a x . R e s p o n d e r s ,   E n u m e r a b l e ) ;   A j a x . R e s p o n d e r s . r e g i s t e r ( {      o n C r e a t e :       f u n c t i o n ( )   {   A j a x . a c t i v e R e q u e s t C o u n t + +   } ,      o n C o m p l e t e :   f u n c t i o n ( )   {   A j a x . a c t i v e R e q u e s t C o u n t - -   }  } ) ;   A j a x . B a s e   =   C l a s s . c r e a t e ( {      i n i t i a l i z e :   f u n c t i o n ( o p t i o n s )   {          t h i s . o p t i o n s   =   {              m e t h o d :               ' p o s t ' ,              a s y n c h r o n o u s :   t r u e ,              c o n t e n t T y p e :     ' a p p l i c a t i o n / x - w w w - f o r m - u r l e n c o d e d ' ,              e n c o d i n g :           ' U T F - 8 ' ,              p a r a m e t e r s :       ' ' ,              e v a l J S O N :           t r u e ,              e v a l J S :               t r u e          } ;          O b j e c t . e x t e n d ( t h i s . o p t i o n s ,   o p t i o n s   | |   {   } ) ;           t h i s . o p t i o n s . m e t h o d   =   t h i s . o p t i o n s . m e t h o d . t o L o w e r C a s e ( ) ;           i f   ( O b j e c t . i s S t r i n g ( t h i s . o p t i o n s . p a r a m e t e r s ) )              t h i s . o p t i o n s . p a r a m e t e r s   =   t h i s . o p t i o n s . p a r a m e t e r s . t o Q u e r y P a r a m s ( ) ;          e l s e   i f   ( O b j e c t . i s H a s h ( t h i s . o p t i o n s . p a r a m e t e r s ) )              t h i s . o p t i o n s . p a r a m e t e r s   =   t h i s . o p t i o n s . p a r a m e t e r s . t o O b j e c t ( ) ;      }  } ) ;   A j a x . R e q u e s t   =   C l a s s . c r e a t e ( A j a x . B a s e ,   {      _ c o m p l e t e :   f a l s e ,       i n i t i a l i z e :   f u n c t i o n ( $ s u p e r ,   u r l ,   o p t i o n s )   {          $ s u p e r ( o p t i o n s ) ;          t h i s . t r a n s p o r t   =   A j a x . g e t T r a n s p o r t ( ) ;          t h i s . r e q u e s t ( u r l ) ;      } ,       r e q u e s t :   f u n c t i o n ( u r l )   {          t h i s . u r l   =   u r l ;          t h i s . m e t h o d   =   t h i s . o p t i o n s . m e t h o d ;          v a r   p a r a m s   =   O b j e c t . c l o n e ( t h i s . o p t i o n s . p a r a m e t e r s ) ;           i f   ( ! [ ' g e t ' ,   ' p o s t ' ] . i n c l u d e ( t h i s . m e t h o d ) )   {              / /   s i m u l a t e   o t h e r   v e r b s   o v e r   p o s t              p a r a m s [ ' _ m e t h o d ' ]   =   t h i s . m e t h o d ;              t h i s . m e t h o d   =   ' p o s t ' ;          }           t h i s . p a r a m e t e r s   =   p a r a m s ;           i f   ( p a r a m s   =   O b j e c t . t o Q u e r y S t r i n g ( p a r a m s ) )   {              / /   w h e n   G E T ,   a p p e n d   p a r a m e t e r s   t o   U R L              i f   ( t h i s . m e t h o d   = =   ' g e t ' )                  t h i s . u r l   + =   ( t h i s . u r l . i n c l u d e ( ' ? ' )   ?   ' & '   :   ' ? ' )   +   p a r a m s ;              e l s e   i f   ( / K o n q u e r o r | S a f a r i | K H T M L / . t e s t ( n a v i g a t o r . u s e r A g e n t ) )                  p a r a m s   + =   ' & _ = ' ;          }           t r y   {              v a r   r e s p o n s e   =   n e w   A j a x . R e s p o n s e ( t h i s ) ;              i f   ( t h i s . o p t i o n s . o n C r e a t e )   t h i s . o p t i o n s . o n C r e a t e ( r e s p o n s e ) ;              A j a x . R e s p o n d e r s . d i s p a t c h ( ' o n C r e a t e ' ,   t h i s ,   r e s p o n s e ) ;               t h i s . t r a n s p o r t . o p e n ( t h i s . m e t h o d . t o U p p e r C a s e ( ) ,   t h i s . u r l ,                  t h i s . o p t i o n s . a s y n c h r o n o u s ) ;               i f   ( t h i s . o p t i o n s . a s y n c h r o n o u s )   t h i s . r e s p o n d T o R e a d y S t a t e . b i n d ( t h i s ) . d e f e r ( 1 ) ;               t h i s . t r a n s p o r t . o n r e a d y s t a t e c h a n g e   =   t h i s . o n S t a t e C h a n g e . b i n d ( t h i s ) ;              t h i s . s e t R e q u e s t H e a d e r s ( ) ;               t h i s . b o d y   =   t h i s . m e t h o d   = =   ' p o s t '   ?   ( t h i s . o p t i o n s . p o s t B o d y   | |   p a r a m s )   :   n u l l ;              t h i s . t r a n s p o r t . s e n d ( t h i s . b o d y ) ;               / *   F o r c e   F i r e f o x   t o   h a n d l e   r e a d y   s t a t e   4   f o r   s y n c h r o n o u s   r e q u e s t s   * /              i f   ( ! t h i s . o p t i o n s . a s y n c h r o n o u s   & &   t h i s . t r a n s p o r t . o v e r r i d e M i m e T y p e )                  t h i s . o n S t a t e C h a n g e ( ) ;           }          c a t c h   ( e )   {              t h i s . d i s p a t c h E x c e p t i o n ( e ) ;          }      } ,       o n S t a t e C h a n g e :   f u n c t i o n ( )   {          v a r   r e a d y S t a t e   =   t h i s . t r a n s p o r t . r e a d y S t a t e ;          i f   ( r e a d y S t a t e   >   1   & &   ! ( ( r e a d y S t a t e   = =   4 )   & &   t h i s . _ c o m p l e t e ) )              t h i s . r e s p o n d T o R e a d y S t a t e ( t h i s . t r a n s p o r t . r e a d y S t a t e ) ;      } ,       s e t R e q u e s t H e a d e r s :   f u n c t i o n ( )   {          v a r   h e a d e r s   =   {              ' X - R e q u e s t e d - W i t h ' :   ' X M L H t t p R e q u e s t ' ,              ' X - P r o t o t y p e - V e r s i o n ' :   P r o t o t y p e . V e r s i o n ,              ' A c c e p t ' :   ' t e x t / j a v a s c r i p t ,   t e x t / h t m l ,   a p p l i c a t i o n / x m l ,   t e x t / x m l ,   * / * '          } ;           i f   ( t h i s . m e t h o d   = =   ' p o s t ' )   {              h e a d e r s [ ' C o n t e n t - t y p e ' ]   =   t h i s . o p t i o n s . c o n t e n t T y p e   +                  ( t h i s . o p t i o n s . e n c o d i n g   ?   ' ;   c h a r s e t = '   +   t h i s . o p t i o n s . e n c o d i n g   :   ' ' ) ;               / *   F o r c e   " C o n n e c t i o n :   c l o s e "   f o r   o l d e r   M o z i l l a   b r o w s e r s   t o   w o r k                *   a r o u n d   a   b u g   w h e r e   X M L H t t p R e q u e s t   s e n d s   a n   i n c o r r e c t                *   C o n t e n t - l e n g t h   h e a d e r .   S e e   M o z i l l a   B u g z i l l a   # 2 4 6 6 5 1 .                * /              i f   ( t h i s . t r a n s p o r t . o v e r r i d e M i m e T y p e   & &                      ( n a v i g a t o r . u s e r A g e n t . m a t c h ( / G e c k o \ / ( \ d { 4 } ) / )   | |   [ 0 , 2 0 0 5 ] ) [ 1 ]   <   2 0 0 5 )                          h e a d e r s [ ' C o n n e c t i o n ' ]   =   ' c l o s e ' ;          }           / /   u s e r - d e f i n e d   h e a d e r s          i f   ( t y p e o f   t h i s . o p t i o n s . r e q u e s t H e a d e r s   = =   ' o b j e c t ' )   {              v a r   e x t r a s   =   t h i s . o p t i o n s . r e q u e s t H e a d e r s ;               i f   ( O b j e c t . i s F u n c t i o n ( e x t r a s . p u s h ) )                  f o r   ( v a r   i   =   0 ,   l e n g t h   =   e x t r a s . l e n g t h ;   i   <   l e n g t h ;   i   + =   2 )                      h e a d e r s [ e x t r a s [ i ] ]   =   e x t r a s [ i + 1 ] ;              e l s e                  $ H ( e x t r a s ) . e a c h ( f u n c t i o n ( p a i r )   {   h e a d e r s [ p a i r . k e y ]   =   p a i r . v a l u e   } ) ;          }           f o r   ( v a r   n a m e   i n   h e a d e r s )              t h i s . t r a n s p o r t . s e t R e q u e s t H e a d e r ( n a m e ,   h e a d e r s [ n a m e ] ) ;      } ,       s u c c e s s :   f u n c t i o n ( )   {          v a r   s t a t u s   =   t h i s . g e t S t a t u s ( ) ;          r e t u r n   ! s t a t u s   | |   ( s t a t u s   > =   2 0 0   & &   s t a t u s   <   3 0 0 ) ;      } ,       g e t S t a t u s :   f u n c t i o n ( )   {          t r y   {              r e t u r n   t h i s . t r a n s p o r t . s t a t u s   | |   0 ;          }   c a t c h   ( e )   {   r e t u r n   0   }      } ,       r e s p o n d T o R e a d y S t a t e :   f u n c t i o n ( r e a d y S t a t e )   {          v a r   s t a t e   =   A j a x . R e q u e s t . E v e n t s [ r e a d y S t a t e ] ,   r e s p o n s e   =   n e w   A j a x . R e s p o n s e ( t h i s ) ;           i f   ( s t a t e   = =   ' C o m p l e t e ' )   {              t r y   {                  t h i s . _ c o m p l e t e   =   t r u e ;                  ( t h i s . o p t i o n s [ ' o n '   +   r e s p o n s e . s t a t u s ]                    | |   t h i s . o p t i o n s [ ' o n '   +   ( t h i s . s u c c e s s ( )   ?   ' S u c c e s s '   :   ' F a i l u r e ' ) ]                    | |   P r o t o t y p e . e m p t y F u n c t i o n ) ( r e s p o n s e ,   r e s p o n s e . h e a d e r J S O N ) ;              }   c a t c h   ( e )   {                  t h i s . d i s p a t c h E x c e p t i o n ( e ) ;              }               v a r   c o n t e n t T y p e   =   r e s p o n s e . g e t H e a d e r ( ' C o n t e n t - t y p e ' ) ;              i f   ( t h i s . o p t i o n s . e v a l J S   = =   ' f o r c e '                      | |   ( t h i s . o p t i o n s . e v a l J S   & &   t h i s . i s S a m e O r i g i n ( )   & &   c o n t e n t T y p e                      & &   c o n t e n t T y p e . m a t c h ( / ^ \ s * ( t e x t | a p p l i c a t i o n ) \ / ( x - ) ? ( j a v a | e c m a ) s c r i p t ( ; . * ) ? \ s * $ / i ) ) )                  t h i s . e v a l R e s p o n s e ( ) ;          }           t r y   {              ( t h i s . o p t i o n s [ ' o n '   +   s t a t e ]   | |   P r o t o t y p e . e m p t y F u n c t i o n ) ( r e s p o n s e ,   r e s p o n s e . h e a d e r J S O N ) ;              A j a x . R e s p o n d e r s . d i s p a t c h ( ' o n '   +   s t a t e ,   t h i s ,   r e s p o n s e ,   r e s p o n s e . h e a d e r J S O N ) ;          }   c a t c h   ( e )   {              t h i s . d i s p a t c h E x c e p t i o n ( e ) ;          }           i f   ( s t a t e   = =   ' C o m p l e t e ' )   {              / /   a v o i d   m e m o r y   l e a k   i n   M S I E :   c l e a n   u p              t h i s . t r a n s p o r t . o n r e a d y s t a t e c h a n g e   =   P r o t o t y p e . e m p t y F u n c t i o n ;          }      } ,       i s S a m e O r i g i n :   f u n c t i o n ( )   {          v a r   m   =   t h i s . u r l . m a t c h ( / ^ \ s * h t t p s ? : \ / \ / [ ^ \ / ] * / ) ;          r e t u r n   ! m   | |   ( m [ 0 ]   = =   ' # { p r o t o c o l } / / # { d o m a i n } # { p o r t } ' . i n t e r p o l a t e ( {              p r o t o c o l :   l o c a t i o n . p r o t o c o l ,              d o m a i n :   d o c u m e n t . d o m a i n ,              p o r t :   l o c a t i o n . p o r t   ?   ' : '   +   l o c a t i o n . p o r t   :   ' '          } ) ) ;      } ,       g e t H e a d e r :   f u n c t i o n ( n a m e )   {          t r y   {              r e t u r n   t h i s . t r a n s p o r t . g e t R e s p o n s e H e a d e r ( n a m e )   | |   n u l l ;          }   c a t c h   ( e )   {   r e t u r n   n u l l   }      } ,       e v a l R e s p o n s e :   f u n c t i o n ( )   {          t r y   {              r e t u r n   e v a l ( ( t h i s . t r a n s p o r t . r e s p o n s e T e x t   | |   ' ' ) . u n f i l t e r J S O N ( ) ) ;          }   c a t c h   ( e )   {              t h i s . d i s p a t c h E x c e p t i o n ( e ) ;          }      } ,       d i s p a t c h E x c e p t i o n :   f u n c t i o n ( e x c e p t i o n )   {          ( t h i s . o p t i o n s . o n E x c e p t i o n   | |   P r o t o t y p e . e m p t y F u n c t i o n ) ( t h i s ,   e x c e p t i o n ) ;          A j a x . R e s p o n d e r s . d i s p a t c h ( ' o n E x c e p t i o n ' ,   t h i s ,   e x c e p t i o n ) ;      }  } ) ;   A j a x . R e q u e s t . E v e n t s   =      [ ' U n i n i t i a l i z e d ' ,   ' L o a d i n g ' ,   ' L o a d e d ' ,   ' I n t e r a c t i v e ' ,   ' C o m p l e t e ' ] ;   A j a x . R e s p o n s e   =   C l a s s . c r e a t e ( {      i n i t i a l i z e :   f u n c t i o n ( r e q u e s t ) {          t h i s . r e q u e s t   =   r e q u e s t ;          v a r   t r a n s p o r t     =   t h i s . t r a n s p o r t     =   r e q u e s t . t r a n s p o r t ,                  r e a d y S t a t e   =   t h i s . r e a d y S t a t e   =   t r a n s p o r t . r e a d y S t a t e ;           i f ( ( r e a d y S t a t e   >   2   & &   ! P r o t o t y p e . B r o w s e r . I E )   | |   r e a d y S t a t e   = =   4 )   {              t h i s . s t a t u s               =   t h i s . g e t S t a t u s ( ) ;              t h i s . s t a t u s T e x t       =   t h i s . g e t S t a t u s T e x t ( ) ;              t h i s . r e s p o n s e T e x t   =   S t r i n g . i n t e r p r e t ( t r a n s p o r t . r e s p o n s e T e x t ) ;              t h i s . h e a d e r J S O N       =   t h i s . _ g e t H e a d e r J S O N ( ) ;          }           i f ( r e a d y S t a t e   = =   4 )   {              v a r   x m l   =   t r a n s p o r t . r e s p o n s e X M L ;              t h i s . r e s p o n s e X M L     =   O b j e c t . i s U n d e f i n e d ( x m l )   ?   n u l l   :   x m l ;              t h i s . r e s p o n s e J S O N   =   t h i s . _ g e t R e s p o n s e J S O N ( ) ;          }      } ,       s t a t u s :             0 ,      s t a t u s T e x t :   ' ' ,       g e t S t a t u s :   A j a x . R e q u e s t . p r o t o t y p e . g e t S t a t u s ,       g e t S t a t u s T e x t :   f u n c t i o n ( )   {          t r y   {              r e t u r n   t h i s . t r a n s p o r t . s t a t u s T e x t   | |   ' ' ;          }   c a t c h   ( e )   {   r e t u r n   ' '   }      } ,       g e t H e a d e r :   A j a x . R e q u e s t . p r o t o t y p e . g e t H e a d e r ,       g e t A l l H e a d e r s :   f u n c t i o n ( )   {          t r y   {              r e t u r n   t h i s . g e t A l l R e s p o n s e H e a d e r s ( ) ;          }   c a t c h   ( e )   {   r e t u r n   n u l l   }      } ,       g e t R e s p o n s e H e a d e r :   f u n c t i o n ( n a m e )   {          r e t u r n   t h i s . t r a n s p o r t . g e t R e s p o n s e H e a d e r ( n a m e ) ;      } ,       g e t A l l R e s p o n s e H e a d e r s :   f u n c t i o n ( )   {          r e t u r n   t h i s . t r a n s p o r t . g e t A l l R e s p o n s e H e a d e r s ( ) ;      } ,       _ g e t H e a d e r J S O N :   f u n c t i o n ( )   {          v a r   j s o n   =   t h i s . g e t H e a d e r ( ' X - J S O N ' ) ;          i f   ( ! j s o n )   r e t u r n   n u l l ;          j s o n   =   d e c o d e U R I C o m p o n e n t ( e s c a p e ( j s o n ) ) ;          t r y   {              r e t u r n   j s o n . e v a l J S O N ( t h i s . r e q u e s t . o p t i o n s . s a n i t i z e J S O N   | |                  ! t h i s . r e q u e s t . i s S a m e O r i g i n ( ) ) ;          }   c a t c h   ( e )   {              t h i s . r e q u e s t . d i s p a t c h E x c e p t i o n ( e ) ;          }      } ,       _ g e t R e s p o n s e J S O N :   f u n c t i o n ( )   {          v a r   o p t i o n s   =   t h i s . r e q u e s t . o p t i o n s ;          i f   ( ! o p t i o n s . e v a l J S O N   | |   ( o p t i o n s . e v a l J S O N   ! =   ' f o r c e '   & &              ! ( t h i s . g e t H e a d e r ( ' C o n t e n t - t y p e ' )   | |   ' ' ) . i n c l u d e ( ' a p p l i c a t i o n / j s o n ' ) )   | |                  t h i s . r e s p o n s e T e x t . b l a n k ( ) )                      r e t u r n   n u l l ;          t r y   {              r e t u r n   t h i s . r e s p o n s e T e x t . e v a l J S O N ( o p t i o n s . s a n i t i z e J S O N   | |                  ! t h i s . r e q u e s t . i s S a m e O r i g i n ( ) ) ;          }   c a t c h   ( e )   {              t h i s . r e q u e s t . d i s p a t c h E x c e p t i o n ( e ) ;          }      }  } ) ;   A j a x . U p d a t e r   =   C l a s s . c r e a t e ( A j a x . R e q u e s t ,   {      i n i t i a l i z e :   f u n c t i o n ( $ s u p e r ,   c o n t a i n e r ,   u r l ,   o p t i o n s )   {          t h i s . c o n t a i n e r   =   {              s u c c e s s :   ( c o n t a i n e r . s u c c e s s   | |   c o n t a i n e r ) ,              f a i l u r e :   ( c o n t a i n e r . f a i l u r e   | |   ( c o n t a i n e r . s u c c e s s   ?   n u l l   :   c o n t a i n e r ) )          } ;           o p t i o n s   =   O b j e c t . c l o n e ( o p t i o n s ) ;          v a r   o n C o m p l e t e   =   o p t i o n s . o n C o m p l e t e ;          o p t i o n s . o n C o m p l e t e   =   ( f u n c t i o n ( r e s p o n s e ,   j s o n )   {              t h i s . u p d a t e C o n t e n t ( r e s p o n s e . r e s p o n s e T e x t ) ;              i f   ( O b j e c t . i s F u n c t i o n ( o n C o m p l e t e ) )   o n C o m p l e t e ( r e s p o n s e ,   j s o n ) ;          } ) . b i n d ( t h i s ) ;           $ s u p e r ( u r l ,   o p t i o n s ) ;      } ,       u p d a t e C o n t e n t :   f u n c t i o n ( r e s p o n s e T e x t )   {          v a r   r e c e i v e r   =   t h i s . c o n t a i n e r [ t h i s . s u c c e s s ( )   ?   ' s u c c e s s '   :   ' f a i l u r e ' ] ,                  o p t i o n s   =   t h i s . o p t i o n s ;           i f   ( ! o p t i o n s . e v a l S c r i p t s )   r e s p o n s e T e x t   =   r e s p o n s e T e x t . s t r i p S c r i p t s ( ) ;           i f   ( r e c e i v e r   =   $ ( r e c e i v e r ) )   {              i f   ( o p t i o n s . i n s e r t i o n )   {                  i f   ( O b j e c t . i s S t r i n g ( o p t i o n s . i n s e r t i o n ) )   {                      v a r   i n s e r t i o n   =   {   } ;   i n s e r t i o n [ o p t i o n s . i n s e r t i o n ]   =   r e s p o n s e T e x t ;                      r e c e i v e r . i n s e r t ( i n s e r t i o n ) ;                  }                  e l s e   o p t i o n s . i n s e r t i o n ( r e c e i v e r ,   r e s p o n s e T e x t ) ;              }              e l s e   r e c e i v e r . u p d a t e ( r e s p o n s e T e x t ) ;          }      }  } ) ;   A j a x . P e r i o d i c a l U p d a t e r   =   C l a s s . c r e a t e ( A j a x . B a s e ,   {      i n i t i a l i z e :   f u n c t i o n ( $ s u p e r ,   c o n t a i n e r ,   u r l ,   o p t i o n s )   {          $ s u p e r ( o p t i o n s ) ;          t h i s . o n C o m p l e t e   =   t h i s . o p t i o n s . o n C o m p l e t e ;           t h i s . f r e q u e n c y   =   ( t h i s . o p t i o n s . f r e q u e n c y   | |   2 ) ;          t h i s . d e c a y   =   ( t h i s . o p t i o n s . d e c a y   | |   1 ) ;           t h i s . u p d a t e r   =   {   } ;          t h i s . c o n t a i n e r   =   c o n t a i n e r ;          t h i s . u r l   =   u r l ;           t h i s . s t a r t ( ) ;      } ,       s t a r t :   f u n c t i o n ( )   {          t h i s . o p t i o n s . o n C o m p l e t e   =   t h i s . u p d a t e C o m p l e t e . b i n d ( t h i s ) ;          t h i s . o n T i m e r E v e n t ( ) ;      } ,       s t o p :   f u n c t i o n ( )   {          t h i s . u p d a t e r . o p t i o n s . o n C o m p l e t e   =   u n d e f i n e d ;          c l e a r T i m e o u t ( t h i s . t i m e r ) ;          ( t h i s . o n C o m p l e t e   | |   P r o t o t y p e . e m p t y F u n c t i o n ) . a p p l y ( t h i s ,   a r g u m e n t s ) ;      } ,       u p d a t e C o m p l e t e :   f u n c t i o n ( r e s p o n s e )   {          i f   ( t h i s . o p t i o n s . d e c a y )   {              t h i s . d e c a y   =   ( r e s p o n s e . r e s p o n s e T e x t   = =   t h i s . l a s t T e x t   ?                  t h i s . d e c a y   *   t h i s . o p t i o n s . d e c a y   :   1 ) ;               t h i s . l a s t T e x t   =   r e s p o n s e . r e s p o n s e T e x t ;          }          t h i s . t i m e r   =   t h i s . o n T i m e r E v e n t . b i n d ( t h i s ) . d e l a y ( t h i s . d e c a y   *   t h i s . f r e q u e n c y ) ;      } ,       o n T i m e r E v e n t :   f u n c t i o n ( )   {          t h i s . u p d a t e r   =   n e w   A j a x . U p d a t e r ( t h i s . c o n t a i n e r ,   t h i s . u r l ,   t h i s . o p t i o n s ) ;      }  } ) ;  f u n c t i o n   $ ( e l e m e n t )   {      i f   ( a r g u m e n t s . l e n g t h   >   1 )   {          f o r   ( v a r   i   =   0 ,   e l e m e n t s   =   [ ] ,   l e n g t h   =   a r g u m e n t s . l e n g t h ;   i   <   l e n g t h ;   i + + )              e l e m e n t s . p u s h ( $ ( a r g u m e n t s [ i ] ) ) ;          r e t u r n   e l e m e n t s ;      }      i f   ( O b j e c t . i s S t r i n g ( e l e m e n t ) )          e l e m e n t   =   d o c u m e n t . g e t E l e m e n t B y I d ( e l e m e n t ) ;      r e t u r n   E l e m e n t . e x t e n d ( e l e m e n t ) ;  }   i f   ( P r o t o t y p e . B r o w s e r F e a t u r e s . X P a t h )   {      d o c u m e n t . _ g e t E l e m e n t s B y X P a t h   =   f u n c t i o n ( e x p r e s s i o n ,   p a r e n t E l e m e n t )   {          v a r   r e s u l t s   =   [ ] ;          v a r   q u e r y   =   d o c u m e n t . e v a l u a t e ( e x p r e s s i o n ,   $ ( p a r e n t E l e m e n t )   | |   d o c u m e n t ,              n u l l ,   X P a t h R e s u l t . O R D E R E D _ N O D E _ S N A P S H O T _ T Y P E ,   n u l l ) ;          f o r   ( v a r   i   =   0 ,   l e n g t h   =   q u e r y . s n a p s h o t L e n g t h ;   i   <   l e n g t h ;   i + + )              r e s u l t s . p u s h ( E l e m e n t . e x t e n d ( q u e r y . s n a p s h o t I t e m ( i ) ) ) ;          r e t u r n   r e s u l t s ;      } ;  }   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   i f   ( ! w i n d o w . N o d e )   v a r   N o d e   =   {   } ;   i f   ( ! N o d e . E L E M E N T _ N O D E )   {      / /   D O M   l e v e l   2   E C M A S c r i p t   L a n g u a g e   B i n d i n g      O b j e c t . e x t e n d ( N o d e ,   {          E L E M E N T _ N O D E :   1 ,          A T T R I B U T E _ N O D E :   2 ,          T E X T _ N O D E :   3 ,          C D A T A _ S E C T I O N _ N O D E :   4 ,          E N T I T Y _ R E F E R E N C E _ N O D E :   5 ,          E N T I T Y _ N O D E :   6 ,          P R O C E S S I N G _ I N S T R U C T I O N _ N O D E :   7 ,          C O M M E N T _ N O D E :   8 ,          D O C U M E N T _ N O D E :   9 ,          D O C U M E N T _ T Y P E _ N O D E :   1 0 ,          D O C U M E N T _ F R A G M E N T _ N O D E :   1 1 ,          N O T A T I O N _ N O D E :   1 2      } ) ;  }   ( f u n c t i o n ( )   {      v a r   e l e m e n t   =   t h i s . E l e m e n t ;      t h i s . E l e m e n t   =   f u n c t i o n ( t a g N a m e ,   a t t r i b u t e s )   {          a t t r i b u t e s   =   a t t r i b u t e s   | |   {   } ;          t a g N a m e   =   t a g N a m e . t o L o w e r C a s e ( ) ;          v a r   c a c h e   =   E l e m e n t . c a c h e ;          i f   ( P r o t o t y p e . B r o w s e r . I E   & &   a t t r i b u t e s . n a m e )   {              t a g N a m e   =   ' < '   +   t a g N a m e   +   '   n a m e = " '   +   a t t r i b u t e s . n a m e   +   ' " > ' ;              d e l e t e   a t t r i b u t e s . n a m e ;              r e t u r n   E l e m e n t . w r i t e A t t r i b u t e ( d o c u m e n t . c r e a t e E l e m e n t ( t a g N a m e ) ,   a t t r i b u t e s ) ;          }          i f   ( ! c a c h e [ t a g N a m e ] )   c a c h e [ t a g N a m e ]   =   E l e m e n t . e x t e n d ( d o c u m e n t . c r e a t e E l e m e n t ( t a g N a m e ) ) ;          r e t u r n   E l e m e n t . w r i t e A t t r i b u t e ( c a c h e [ t a g N a m e ] . c l o n e N o d e ( f a l s e ) ,   a t t r i b u t e s ) ;      } ;      O b j e c t . e x t e n d ( t h i s . E l e m e n t ,   e l e m e n t   | |   {   } ) ;  } ) . c a l l ( w i n d o w ) ;   E l e m e n t . c a c h e   =   {   } ;   E l e m e n t . M e t h o d s   =   {      v i s i b l e :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . s t y l e . d i s p l a y   ! =   ' n o n e ' ;      } ,       t o g g l e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          E l e m e n t [ E l e m e n t . v i s i b l e ( e l e m e n t )   ?   ' h i d e '   :   ' s h o w ' ] ( e l e m e n t ) ;          r e t u r n   e l e m e n t ;      } ,       h i d e :   f u n c t i o n ( e l e m e n t )   {          $ ( e l e m e n t ) . s t y l e . d i s p l a y   =   ' n o n e ' ;          r e t u r n   e l e m e n t ;      } ,       s h o w :   f u n c t i o n ( e l e m e n t )   {          $ ( e l e m e n t ) . s t y l e . d i s p l a y   =   ' ' ;          r e t u r n   e l e m e n t ;      } ,       r e m o v e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          e l e m e n t . p a r e n t N o d e . r e m o v e C h i l d ( e l e m e n t ) ;          r e t u r n   e l e m e n t ;      } ,       u p d a t e :   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( c o n t e n t   & &   c o n t e n t . t o E l e m e n t )   c o n t e n t   =   c o n t e n t . t o E l e m e n t ( ) ;          i f   ( O b j e c t . i s E l e m e n t ( c o n t e n t ) )   r e t u r n   e l e m e n t . u p d a t e ( ) . i n s e r t ( c o n t e n t ) ;          c o n t e n t   =   O b j e c t . t o H T M L ( c o n t e n t ) ;          e l e m e n t . i n n e r H T M L   =   c o n t e n t . s t r i p S c r i p t s ( ) ;          c o n t e n t . e v a l S c r i p t s . b i n d ( c o n t e n t ) . d e f e r ( ) ;          r e t u r n   e l e m e n t ;      } ,       r e p l a c e :   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( c o n t e n t   & &   c o n t e n t . t o E l e m e n t )   c o n t e n t   =   c o n t e n t . t o E l e m e n t ( ) ;          e l s e   i f   ( ! O b j e c t . i s E l e m e n t ( c o n t e n t ) )   {              c o n t e n t   =   O b j e c t . t o H T M L ( c o n t e n t ) ;              v a r   r a n g e   =   e l e m e n t . o w n e r D o c u m e n t . c r e a t e R a n g e ( ) ;              r a n g e . s e l e c t N o d e ( e l e m e n t ) ;              c o n t e n t . e v a l S c r i p t s . b i n d ( c o n t e n t ) . d e f e r ( ) ;              c o n t e n t   =   r a n g e . c r e a t e C o n t e x t u a l F r a g m e n t ( c o n t e n t . s t r i p S c r i p t s ( ) ) ;          }          e l e m e n t . p a r e n t N o d e . r e p l a c e C h i l d ( c o n t e n t ,   e l e m e n t ) ;          r e t u r n   e l e m e n t ;      } ,       i n s e r t :   f u n c t i o n ( e l e m e n t ,   i n s e r t i o n s )   {          e l e m e n t   =   $ ( e l e m e n t ) ;           i f   ( O b j e c t . i s S t r i n g ( i n s e r t i o n s )   | |   O b j e c t . i s N u m b e r ( i n s e r t i o n s )   | |                  O b j e c t . i s E l e m e n t ( i n s e r t i o n s )   | |   ( i n s e r t i o n s   & &   ( i n s e r t i o n s . t o E l e m e n t   | |   i n s e r t i o n s . t o H T M L ) ) )                      i n s e r t i o n s   =   { b o t t o m : i n s e r t i o n s } ;           v a r   c o n t e n t ,   i n s e r t ,   t a g N a m e ,   c h i l d N o d e s ;           f o r   ( v a r   p o s i t i o n   i n   i n s e r t i o n s )   {              c o n t e n t     =   i n s e r t i o n s [ p o s i t i o n ] ;              p o s i t i o n   =   p o s i t i o n . t o L o w e r C a s e ( ) ;              i n s e r t   =   E l e m e n t . _ i n s e r t i o n T r a n s l a t i o n s [ p o s i t i o n ] ;               i f   ( c o n t e n t   & &   c o n t e n t . t o E l e m e n t )   c o n t e n t   =   c o n t e n t . t o E l e m e n t ( ) ;              i f   ( O b j e c t . i s E l e m e n t ( c o n t e n t ) )   {                  i n s e r t ( e l e m e n t ,   c o n t e n t ) ;                  c o n t i n u e ;              }               c o n t e n t   =   O b j e c t . t o H T M L ( c o n t e n t ) ;               t a g N a m e   =   ( ( p o s i t i o n   = =   ' b e f o r e '   | |   p o s i t i o n   = =   ' a f t e r ' )                  ?   e l e m e n t . p a r e n t N o d e   :   e l e m e n t ) . t a g N a m e . t o U p p e r C a s e ( ) ;               c h i l d N o d e s   =   E l e m e n t . _ g e t C o n t e n t F r o m A n o n y m o u s E l e m e n t ( t a g N a m e ,   c o n t e n t . s t r i p S c r i p t s ( ) ) ;               i f   ( p o s i t i o n   = =   ' t o p '   | |   p o s i t i o n   = =   ' a f t e r ' )   c h i l d N o d e s . r e v e r s e ( ) ;              c h i l d N o d e s . e a c h ( i n s e r t . c u r r y ( e l e m e n t ) ) ;               c o n t e n t . e v a l S c r i p t s . b i n d ( c o n t e n t ) . d e f e r ( ) ;          }           r e t u r n   e l e m e n t ;      } ,       w r a p :   f u n c t i o n ( e l e m e n t ,   w r a p p e r ,   a t t r i b u t e s )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( O b j e c t . i s E l e m e n t ( w r a p p e r ) )              $ ( w r a p p e r ) . w r i t e A t t r i b u t e ( a t t r i b u t e s   | |   {   } ) ;          e l s e   i f   ( O b j e c t . i s S t r i n g ( w r a p p e r ) )   w r a p p e r   =   n e w   E l e m e n t ( w r a p p e r ,   a t t r i b u t e s ) ;          e l s e   w r a p p e r   =   n e w   E l e m e n t ( ' d i v ' ,   w r a p p e r ) ;          i f   ( e l e m e n t . p a r e n t N o d e )              e l e m e n t . p a r e n t N o d e . r e p l a c e C h i l d ( w r a p p e r ,   e l e m e n t ) ;          w r a p p e r . a p p e n d C h i l d ( e l e m e n t ) ;          r e t u r n   w r a p p e r ;      } ,       i n s p e c t :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   r e s u l t   =   ' < '   +   e l e m e n t . t a g N a m e . t o L o w e r C a s e ( ) ;          $ H ( { ' i d ' :   ' i d ' ,   ' c l a s s N a m e ' :   ' c l a s s ' } ) . e a c h ( f u n c t i o n ( p a i r )   {              v a r   p r o p e r t y   =   p a i r . f i r s t ( ) ,   a t t r i b u t e   =   p a i r . l a s t ( ) ;              v a r   v a l u e   =   ( e l e m e n t [ p r o p e r t y ]   | |   ' ' ) . t o S t r i n g ( ) ;              i f   ( v a l u e )   r e s u l t   + =   '   '   +   a t t r i b u t e   +   ' = '   +   v a l u e . i n s p e c t ( t r u e ) ;          } ) ;          r e t u r n   r e s u l t   +   ' > ' ;      } ,       r e c u r s i v e l y C o l l e c t :   f u n c t i o n ( e l e m e n t ,   p r o p e r t y )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   e l e m e n t s   =   [ ] ;          w h i l e   ( e l e m e n t   =   e l e m e n t [ p r o p e r t y ] )              i f   ( e l e m e n t . n o d e T y p e   = =   1 )                  e l e m e n t s . p u s h ( E l e m e n t . e x t e n d ( e l e m e n t ) ) ;          r e t u r n   e l e m e n t s ;      } ,       a n c e s t o r s :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . r e c u r s i v e l y C o l l e c t ( ' p a r e n t N o d e ' ) ;      } ,       d e s c e n d a n t s :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . s e l e c t ( " * " ) ;      } ,       f i r s t D e s c e n d a n t :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) . f i r s t C h i l d ;          w h i l e   ( e l e m e n t   & &   e l e m e n t . n o d e T y p e   ! =   1 )   e l e m e n t   =   e l e m e n t . n e x t S i b l i n g ;          r e t u r n   $ ( e l e m e n t ) ;      } ,       i m m e d i a t e D e s c e n d a n t s :   f u n c t i o n ( e l e m e n t )   {          i f   ( ! ( e l e m e n t   =   $ ( e l e m e n t ) . f i r s t C h i l d ) )   r e t u r n   [ ] ;          w h i l e   ( e l e m e n t   & &   e l e m e n t . n o d e T y p e   ! =   1 )   e l e m e n t   =   e l e m e n t . n e x t S i b l i n g ;          i f   ( e l e m e n t )   r e t u r n   [ e l e m e n t ] . c o n c a t ( $ ( e l e m e n t ) . n e x t S i b l i n g s ( ) ) ;          r e t u r n   [ ] ;      } ,       p r e v i o u s S i b l i n g s :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . r e c u r s i v e l y C o l l e c t ( ' p r e v i o u s S i b l i n g ' ) ;      } ,       n e x t S i b l i n g s :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . r e c u r s i v e l y C o l l e c t ( ' n e x t S i b l i n g ' ) ;      } ,       s i b l i n g s :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          r e t u r n   e l e m e n t . p r e v i o u s S i b l i n g s ( ) . r e v e r s e ( ) . c o n c a t ( e l e m e n t . n e x t S i b l i n g s ( ) ) ;      } ,       m a t c h :   f u n c t i o n ( e l e m e n t ,   s e l e c t o r )   {          i f   ( O b j e c t . i s S t r i n g ( s e l e c t o r ) )              s e l e c t o r   =   n e w   S e l e c t o r ( s e l e c t o r ) ;          r e t u r n   s e l e c t o r . m a t c h ( $ ( e l e m e n t ) ) ;      } ,       u p :   f u n c t i o n ( e l e m e n t ,   e x p r e s s i o n ,   i n d e x )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( a r g u m e n t s . l e n g t h   = =   1 )   r e t u r n   $ ( e l e m e n t . p a r e n t N o d e ) ;          v a r   a n c e s t o r s   =   e l e m e n t . a n c e s t o r s ( ) ;          r e t u r n   O b j e c t . i s N u m b e r ( e x p r e s s i o n )   ?   a n c e s t o r s [ e x p r e s s i o n ]   :              S e l e c t o r . f i n d E l e m e n t ( a n c e s t o r s ,   e x p r e s s i o n ,   i n d e x ) ;      } ,       d o w n :   f u n c t i o n ( e l e m e n t ,   e x p r e s s i o n ,   i n d e x )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( a r g u m e n t s . l e n g t h   = =   1 )   r e t u r n   e l e m e n t . f i r s t D e s c e n d a n t ( ) ;          r e t u r n   O b j e c t . i s N u m b e r ( e x p r e s s i o n )   ?   e l e m e n t . d e s c e n d a n t s ( ) [ e x p r e s s i o n ]   :              e l e m e n t . s e l e c t ( e x p r e s s i o n ) [ i n d e x   | |   0 ] ;      } ,       p r e v i o u s :   f u n c t i o n ( e l e m e n t ,   e x p r e s s i o n ,   i n d e x )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( a r g u m e n t s . l e n g t h   = =   1 )   r e t u r n   $ ( S e l e c t o r . h a n d l e r s . p r e v i o u s E l e m e n t S i b l i n g ( e l e m e n t ) ) ;          v a r   p r e v i o u s S i b l i n g s   =   e l e m e n t . p r e v i o u s S i b l i n g s ( ) ;          r e t u r n   O b j e c t . i s N u m b e r ( e x p r e s s i o n )   ?   p r e v i o u s S i b l i n g s [ e x p r e s s i o n ]   :              S e l e c t o r . f i n d E l e m e n t ( p r e v i o u s S i b l i n g s ,   e x p r e s s i o n ,   i n d e x ) ;      } ,       n e x t :   f u n c t i o n ( e l e m e n t ,   e x p r e s s i o n ,   i n d e x )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( a r g u m e n t s . l e n g t h   = =   1 )   r e t u r n   $ ( S e l e c t o r . h a n d l e r s . n e x t E l e m e n t S i b l i n g ( e l e m e n t ) ) ;          v a r   n e x t S i b l i n g s   =   e l e m e n t . n e x t S i b l i n g s ( ) ;          r e t u r n   O b j e c t . i s N u m b e r ( e x p r e s s i o n )   ?   n e x t S i b l i n g s [ e x p r e s s i o n ]   :              S e l e c t o r . f i n d E l e m e n t ( n e x t S i b l i n g s ,   e x p r e s s i o n ,   i n d e x ) ;      } ,       s e l e c t :   f u n c t i o n ( )   {          v a r   a r g s   =   $ A ( a r g u m e n t s ) ,   e l e m e n t   =   $ ( a r g s . s h i f t ( ) ) ;          r e t u r n   S e l e c t o r . f i n d C h i l d E l e m e n t s ( e l e m e n t ,   a r g s ) ;      } ,       a d j a c e n t :   f u n c t i o n ( )   {          v a r   a r g s   =   $ A ( a r g u m e n t s ) ,   e l e m e n t   =   $ ( a r g s . s h i f t ( ) ) ;          r e t u r n   S e l e c t o r . f i n d C h i l d E l e m e n t s ( e l e m e n t . p a r e n t N o d e ,   a r g s ) . w i t h o u t ( e l e m e n t ) ;      } ,       i d e n t i f y :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   i d   =   e l e m e n t . r e a d A t t r i b u t e ( ' i d ' ) ,   s e l f   =   a r g u m e n t s . c a l l e e ;          i f   ( i d )   r e t u r n   i d ;          d o   {   i d   =   ' a n o n y m o u s _ e l e m e n t _ '   +   s e l f . c o u n t e r + +   }   w h i l e   ( $ ( i d ) ) ;          e l e m e n t . w r i t e A t t r i b u t e ( ' i d ' ,   i d ) ;          r e t u r n   i d ;      } ,       r e a d A t t r i b u t e :   f u n c t i o n ( e l e m e n t ,   n a m e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( P r o t o t y p e . B r o w s e r . I E )   {              v a r   t   =   E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . r e a d ;              i f   ( t . v a l u e s [ n a m e ] )   r e t u r n   t . v a l u e s [ n a m e ] ( e l e m e n t ,   n a m e ) ;              i f   ( t . n a m e s [ n a m e ] )   n a m e   =   t . n a m e s [ n a m e ] ;              i f   ( n a m e . i n c l u d e ( ' : ' ) )   {                  r e t u r n   ( ! e l e m e n t . a t t r i b u t e s   | |   ! e l e m e n t . a t t r i b u t e s [ n a m e ] )   ?   n u l l   :                    e l e m e n t . a t t r i b u t e s [ n a m e ] . v a l u e ;              }          }          r e t u r n   e l e m e n t . g e t A t t r i b u t e ( n a m e ) ;      } ,       w r i t e A t t r i b u t e :   f u n c t i o n ( e l e m e n t ,   n a m e ,   v a l u e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   a t t r i b u t e s   =   {   } ,   t   =   E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . w r i t e ;           i f   ( t y p e o f   n a m e   = =   ' o b j e c t ' )   a t t r i b u t e s   =   n a m e ;          e l s e   a t t r i b u t e s [ n a m e ]   =   O b j e c t . i s U n d e f i n e d ( v a l u e )   ?   t r u e   :   v a l u e ;           f o r   ( v a r   a t t r   i n   a t t r i b u t e s )   {              n a m e   =   t . n a m e s [ a t t r ]   | |   a t t r ;              v a l u e   =   a t t r i b u t e s [ a t t r ] ;              i f   ( t . v a l u e s [ a t t r ] )   n a m e   =   t . v a l u e s [ a t t r ] ( e l e m e n t ,   v a l u e ) ;              i f   ( v a l u e   = = =   f a l s e   | |   v a l u e   = = =   n u l l )                  e l e m e n t . r e m o v e A t t r i b u t e ( n a m e ) ;              e l s e   i f   ( v a l u e   = = =   t r u e )                  e l e m e n t . s e t A t t r i b u t e ( n a m e ,   n a m e ) ;              e l s e   e l e m e n t . s e t A t t r i b u t e ( n a m e ,   v a l u e ) ;          }          r e t u r n   e l e m e n t ;      } ,       g e t H e i g h t :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . g e t D i m e n s i o n s ( ) . h e i g h t ;      } ,       g e t W i d t h :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . g e t D i m e n s i o n s ( ) . w i d t h ;      } ,       c l a s s N a m e s :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   n e w   E l e m e n t . C l a s s N a m e s ( e l e m e n t ) ;      } ,       h a s C l a s s N a m e :   f u n c t i o n ( e l e m e n t ,   c l a s s N a m e )   {          i f   ( ! ( e l e m e n t   =   $ ( e l e m e n t ) ) )   r e t u r n ;          v a r   e l e m e n t C l a s s N a m e   =   e l e m e n t . c l a s s N a m e ;          r e t u r n   ( e l e m e n t C l a s s N a m e . l e n g t h   >   0   & &   ( e l e m e n t C l a s s N a m e   = =   c l a s s N a m e   | |              n e w   R e g E x p ( " ( ^ | \ \ s ) "   +   c l a s s N a m e   +   " ( \ \ s | $ ) " ) . t e s t ( e l e m e n t C l a s s N a m e ) ) ) ;      } ,       a d d C l a s s N a m e :   f u n c t i o n ( e l e m e n t ,   c l a s s N a m e )   {          i f   ( ! ( e l e m e n t   =   $ ( e l e m e n t ) ) )   r e t u r n ;          i f   ( ! e l e m e n t . h a s C l a s s N a m e ( c l a s s N a m e ) )              e l e m e n t . c l a s s N a m e   + =   ( e l e m e n t . c l a s s N a m e   ?   '   '   :   ' ' )   +   c l a s s N a m e ;          r e t u r n   e l e m e n t ;      } ,       r e m o v e C l a s s N a m e :   f u n c t i o n ( e l e m e n t ,   c l a s s N a m e )   {          i f   ( ! ( e l e m e n t   =   $ ( e l e m e n t ) ) )   r e t u r n ;          e l e m e n t . c l a s s N a m e   =   e l e m e n t . c l a s s N a m e . r e p l a c e (              n e w   R e g E x p ( " ( ^ | \ \ s + ) "   +   c l a s s N a m e   +   " ( \ \ s + | $ ) " ) ,   '   ' ) . s t r i p ( ) ;          r e t u r n   e l e m e n t ;      } ,       t o g g l e C l a s s N a m e :   f u n c t i o n ( e l e m e n t ,   c l a s s N a m e )   {          i f   ( ! ( e l e m e n t   =   $ ( e l e m e n t ) ) )   r e t u r n ;          r e t u r n   e l e m e n t [ e l e m e n t . h a s C l a s s N a m e ( c l a s s N a m e )   ?              ' r e m o v e C l a s s N a m e '   :   ' a d d C l a s s N a m e ' ] ( c l a s s N a m e ) ;      } ,       / /   r e m o v e s   w h i t e s p a c e - o n l y   t e x t   n o d e   c h i l d r e n      c l e a n W h i t e s p a c e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   n o d e   =   e l e m e n t . f i r s t C h i l d ;          w h i l e   ( n o d e )   {              v a r   n e x t N o d e   =   n o d e . n e x t S i b l i n g ;              i f   ( n o d e . n o d e T y p e   = =   3   & &   ! / \ S / . t e s t ( n o d e . n o d e V a l u e ) )                  e l e m e n t . r e m o v e C h i l d ( n o d e ) ;              n o d e   =   n e x t N o d e ;          }          r e t u r n   e l e m e n t ;      } ,       e m p t y :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . i n n e r H T M L . b l a n k ( ) ;      } ,       d e s c e n d a n t O f :   f u n c t i o n ( e l e m e n t ,   a n c e s t o r )   {          e l e m e n t   =   $ ( e l e m e n t ) ,   a n c e s t o r   =   $ ( a n c e s t o r ) ;          v a r   o r i g i n a l A n c e s t o r   =   a n c e s t o r ;           i f   ( e l e m e n t . c o m p a r e D o c u m e n t P o s i t i o n )              r e t u r n   ( e l e m e n t . c o m p a r e D o c u m e n t P o s i t i o n ( a n c e s t o r )   &   8 )   = = =   8 ;           i f   ( e l e m e n t . s o u r c e I n d e x   & &   ! P r o t o t y p e . B r o w s e r . O p e r a )   {              v a r   e   =   e l e m e n t . s o u r c e I n d e x ,   a   =   a n c e s t o r . s o u r c e I n d e x ,                n e x t A n c e s t o r   =   a n c e s t o r . n e x t S i b l i n g ;              i f   ( ! n e x t A n c e s t o r )   {                  d o   {   a n c e s t o r   =   a n c e s t o r . p a r e n t N o d e ;   }                  w h i l e   ( ! ( n e x t A n c e s t o r   =   a n c e s t o r . n e x t S i b l i n g )   & &   a n c e s t o r . p a r e n t N o d e ) ;              }              i f   ( n e x t A n c e s t o r   & &   n e x t A n c e s t o r . s o u r c e I n d e x )                r e t u r n   ( e   >   a   & &   e   <   n e x t A n c e s t o r . s o u r c e I n d e x ) ;          }           w h i l e   ( e l e m e n t   =   e l e m e n t . p a r e n t N o d e )              i f   ( e l e m e n t   = =   o r i g i n a l A n c e s t o r )   r e t u r n   t r u e ;          r e t u r n   f a l s e ;      } ,       s c r o l l T o :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   p o s   =   e l e m e n t . c u m u l a t i v e O f f s e t ( ) ;          w i n d o w . s c r o l l T o ( p o s [ 0 ] ,   p o s [ 1 ] ) ;          r e t u r n   e l e m e n t ;      } ,       g e t S t y l e :   f u n c t i o n ( e l e m e n t ,   s t y l e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          s t y l e   =   s t y l e   = =   ' f l o a t '   ?   ' c s s F l o a t '   :   s t y l e . c a m e l i z e ( ) ;          v a r   v a l u e   =   e l e m e n t . s t y l e [ s t y l e ] ;          i f   ( ! v a l u e )   {              v a r   c s s   =   d o c u m e n t . d e f a u l t V i e w . g e t C o m p u t e d S t y l e ( e l e m e n t ,   n u l l ) ;              v a l u e   =   c s s   ?   c s s [ s t y l e ]   :   n u l l ;          }          i f   ( s t y l e   = =   ' o p a c i t y ' )   r e t u r n   v a l u e   ?   p a r s e F l o a t ( v a l u e )   :   1 . 0 ;          r e t u r n   v a l u e   = =   ' a u t o '   ?   n u l l   :   v a l u e ;      } ,       g e t O p a c i t y :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . g e t S t y l e ( ' o p a c i t y ' ) ;      } ,       s e t S t y l e :   f u n c t i o n ( e l e m e n t ,   s t y l e s )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   e l e m e n t S t y l e   =   e l e m e n t . s t y l e ,   m a t c h ;          i f   ( O b j e c t . i s S t r i n g ( s t y l e s ) )   {              e l e m e n t . s t y l e . c s s T e x t   + =   ' ; '   +   s t y l e s ;              r e t u r n   s t y l e s . i n c l u d e ( ' o p a c i t y ' )   ?                  e l e m e n t . s e t O p a c i t y ( s t y l e s . m a t c h ( / o p a c i t y : \ s * ( \ d ? \ . ? \ d * ) / ) [ 1 ] )   :   e l e m e n t ;          }          f o r   ( v a r   p r o p e r t y   i n   s t y l e s )              i f   ( p r o p e r t y   = =   ' o p a c i t y ' )   e l e m e n t . s e t O p a c i t y ( s t y l e s [ p r o p e r t y ] ) ;              e l s e                  e l e m e n t S t y l e [ ( p r o p e r t y   = =   ' f l o a t '   | |   p r o p e r t y   = =   ' c s s F l o a t ' )   ?                      ( O b j e c t . i s U n d e f i n e d ( e l e m e n t S t y l e . s t y l e F l o a t )   ?   ' c s s F l o a t '   :   ' s t y l e F l o a t ' )   :                          p r o p e r t y ]   =   s t y l e s [ p r o p e r t y ] ;           r e t u r n   e l e m e n t ;      } ,       s e t O p a c i t y :   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          e l e m e n t . s t y l e . o p a c i t y   =   ( v a l u e   = =   1   | |   v a l u e   = = =   ' ' )   ?   ' '   :              ( v a l u e   <   0 . 0 0 0 0 1 )   ?   0   :   v a l u e ;          r e t u r n   e l e m e n t ;      } ,       g e t D i m e n s i o n s :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   d i s p l a y   =   $ ( e l e m e n t ) . g e t S t y l e ( ' d i s p l a y ' ) ;          i f   ( d i s p l a y   ! =   ' n o n e '   & &   d i s p l a y   ! =   n u l l )   / /   S a f a r i   b u g              r e t u r n   { w i d t h :   e l e m e n t . o f f s e t W i d t h ,   h e i g h t :   e l e m e n t . o f f s e t H e i g h t } ;           / /   A l l   * W i d t h   a n d   * H e i g h t   p r o p e r t i e s   g i v e   0   o n   e l e m e n t s   w i t h   d i s p l a y   n o n e ,          / /   s o   e n a b l e   t h e   e l e m e n t   t e m p o r a r i l y          v a r   e l s   =   e l e m e n t . s t y l e ;          v a r   o r i g i n a l V i s i b i l i t y   =   e l s . v i s i b i l i t y ;          v a r   o r i g i n a l P o s i t i o n   =   e l s . p o s i t i o n ;          v a r   o r i g i n a l D i s p l a y   =   e l s . d i s p l a y ;          e l s . v i s i b i l i t y   =   ' h i d d e n ' ;          e l s . p o s i t i o n   =   ' a b s o l u t e ' ;          e l s . d i s p l a y   =   ' b l o c k ' ;          v a r   o r i g i n a l W i d t h   =   e l e m e n t . c l i e n t W i d t h ;          v a r   o r i g i n a l H e i g h t   =   e l e m e n t . c l i e n t H e i g h t ;          e l s . d i s p l a y   =   o r i g i n a l D i s p l a y ;          e l s . p o s i t i o n   =   o r i g i n a l P o s i t i o n ;          e l s . v i s i b i l i t y   =   o r i g i n a l V i s i b i l i t y ;          r e t u r n   { w i d t h :   o r i g i n a l W i d t h ,   h e i g h t :   o r i g i n a l H e i g h t } ;      } ,       m a k e P o s i t i o n e d :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   p o s   =   E l e m e n t . g e t S t y l e ( e l e m e n t ,   ' p o s i t i o n ' ) ;          i f   ( p o s   = =   ' s t a t i c '   | |   ! p o s )   {              e l e m e n t . _ m a d e P o s i t i o n e d   =   t r u e ;              e l e m e n t . s t y l e . p o s i t i o n   =   ' r e l a t i v e ' ;              / /   O p e r a   r e t u r n s   t h e   o f f s e t   r e l a t i v e   t o   t h e   p o s i t i o n i n g   c o n t e x t ,   w h e n   a n              / /   e l e m e n t   i s   p o s i t i o n   r e l a t i v e   b u t   t o p   a n d   l e f t   h a v e   n o t   b e e n   d e f i n e d              i f   ( w i n d o w . o p e r a )   {                  e l e m e n t . s t y l e . t o p   =   0 ;                  e l e m e n t . s t y l e . l e f t   =   0 ;              }          }          r e t u r n   e l e m e n t ;      } ,       u n d o P o s i t i o n e d :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( e l e m e n t . _ m a d e P o s i t i o n e d )   {              e l e m e n t . _ m a d e P o s i t i o n e d   =   u n d e f i n e d ;              e l e m e n t . s t y l e . p o s i t i o n   =                  e l e m e n t . s t y l e . t o p   =                  e l e m e n t . s t y l e . l e f t   =                  e l e m e n t . s t y l e . b o t t o m   =                  e l e m e n t . s t y l e . r i g h t   =   ' ' ;          }          r e t u r n   e l e m e n t ;      } ,       m a k e C l i p p i n g :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( e l e m e n t . _ o v e r f l o w )   r e t u r n   e l e m e n t ;          e l e m e n t . _ o v e r f l o w   =   E l e m e n t . g e t S t y l e ( e l e m e n t ,   ' o v e r f l o w ' )   | |   ' a u t o ' ;          i f   ( e l e m e n t . _ o v e r f l o w   ! = =   ' h i d d e n ' )              e l e m e n t . s t y l e . o v e r f l o w   =   ' h i d d e n ' ;          r e t u r n   e l e m e n t ;      } ,       u n d o C l i p p i n g :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( ! e l e m e n t . _ o v e r f l o w )   r e t u r n   e l e m e n t ;          e l e m e n t . s t y l e . o v e r f l o w   =   e l e m e n t . _ o v e r f l o w   = =   ' a u t o '   ?   ' '   :   e l e m e n t . _ o v e r f l o w ;          e l e m e n t . _ o v e r f l o w   =   n u l l ;          r e t u r n   e l e m e n t ;      } ,       c u m u l a t i v e O f f s e t :   f u n c t i o n ( e l e m e n t )   {          v a r   v a l u e T   =   0 ,   v a l u e L   =   0 ;          d o   {              v a l u e T   + =   e l e m e n t . o f f s e t T o p     | |   0 ;              v a l u e L   + =   e l e m e n t . o f f s e t L e f t   | |   0 ;              e l e m e n t   =   e l e m e n t . o f f s e t P a r e n t ;          }   w h i l e   ( e l e m e n t ) ;          r e t u r n   E l e m e n t . _ r e t u r n O f f s e t ( v a l u e L ,   v a l u e T ) ;      } ,       p o s i t i o n e d O f f s e t :   f u n c t i o n ( e l e m e n t )   {          v a r   v a l u e T   =   0 ,   v a l u e L   =   0 ;          d o   {              v a l u e T   + =   e l e m e n t . o f f s e t T o p     | |   0 ;              v a l u e L   + =   e l e m e n t . o f f s e t L e f t   | |   0 ;              e l e m e n t   =   e l e m e n t . o f f s e t P a r e n t ;              i f   ( e l e m e n t )   {                  i f   ( e l e m e n t . t a g N a m e   = =   ' B O D Y ' )   b r e a k ;                  v a r   p   =   E l e m e n t . g e t S t y l e ( e l e m e n t ,   ' p o s i t i o n ' ) ;                  i f   ( p   ! = =   ' s t a t i c ' )   b r e a k ;              }          }   w h i l e   ( e l e m e n t ) ;          r e t u r n   E l e m e n t . _ r e t u r n O f f s e t ( v a l u e L ,   v a l u e T ) ;      } ,       a b s o l u t i z e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( e l e m e n t . g e t S t y l e ( ' p o s i t i o n ' )   = =   ' a b s o l u t e ' )   r e t u r n ;          / /   P o s i t i o n . p r e p a r e ( ) ;   / /   T o   b e   d o n e   m a n u a l l y   b y   S c r i p t y   w h e n   i t   n e e d s   i t .           v a r   o f f s e t s   =   e l e m e n t . p o s i t i o n e d O f f s e t ( ) ;          v a r   t o p           =   o f f s e t s [ 1 ] ;          v a r   l e f t         =   o f f s e t s [ 0 ] ;          v a r   w i d t h       =   e l e m e n t . c l i e n t W i d t h ;          v a r   h e i g h t     =   e l e m e n t . c l i e n t H e i g h t ;           e l e m e n t . _ o r i g i n a l L e f t       =   l e f t   -   p a r s e F l o a t ( e l e m e n t . s t y l e . l e f t     | |   0 ) ;          e l e m e n t . _ o r i g i n a l T o p         =   t o p     -   p a r s e F l o a t ( e l e m e n t . s t y l e . t o p   | |   0 ) ;          e l e m e n t . _ o r i g i n a l W i d t h     =   e l e m e n t . s t y l e . w i d t h ;          e l e m e n t . _ o r i g i n a l H e i g h t   =   e l e m e n t . s t y l e . h e i g h t ;           e l e m e n t . s t y l e . p o s i t i o n   =   ' a b s o l u t e ' ;          e l e m e n t . s t y l e . t o p         =   t o p   +   ' p x ' ;          e l e m e n t . s t y l e . l e f t       =   l e f t   +   ' p x ' ;          e l e m e n t . s t y l e . w i d t h     =   w i d t h   +   ' p x ' ;          e l e m e n t . s t y l e . h e i g h t   =   h e i g h t   +   ' p x ' ;          r e t u r n   e l e m e n t ;      } ,       r e l a t i v i z e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( e l e m e n t . g e t S t y l e ( ' p o s i t i o n ' )   = =   ' r e l a t i v e ' )   r e t u r n ;          / /   P o s i t i o n . p r e p a r e ( ) ;   / /   T o   b e   d o n e   m a n u a l l y   b y   S c r i p t y   w h e n   i t   n e e d s   i t .           e l e m e n t . s t y l e . p o s i t i o n   =   ' r e l a t i v e ' ;          v a r   t o p     =   p a r s e F l o a t ( e l e m e n t . s t y l e . t o p     | |   0 )   -   ( e l e m e n t . _ o r i g i n a l T o p   | |   0 ) ;          v a r   l e f t   =   p a r s e F l o a t ( e l e m e n t . s t y l e . l e f t   | |   0 )   -   ( e l e m e n t . _ o r i g i n a l L e f t   | |   0 ) ;           e l e m e n t . s t y l e . t o p         =   t o p   +   ' p x ' ;          e l e m e n t . s t y l e . l e f t       =   l e f t   +   ' p x ' ;          e l e m e n t . s t y l e . h e i g h t   =   e l e m e n t . _ o r i g i n a l H e i g h t ;          e l e m e n t . s t y l e . w i d t h     =   e l e m e n t . _ o r i g i n a l W i d t h ;          r e t u r n   e l e m e n t ;      } ,       c u m u l a t i v e S c r o l l O f f s e t :   f u n c t i o n ( e l e m e n t )   {          v a r   v a l u e T   =   0 ,   v a l u e L   =   0 ;          d o   {              v a l u e T   + =   e l e m e n t . s c r o l l T o p     | |   0 ;              v a l u e L   + =   e l e m e n t . s c r o l l L e f t   | |   0 ;              e l e m e n t   =   e l e m e n t . p a r e n t N o d e ;          }   w h i l e   ( e l e m e n t ) ;          r e t u r n   E l e m e n t . _ r e t u r n O f f s e t ( v a l u e L ,   v a l u e T ) ;      } ,       g e t O f f s e t P a r e n t :   f u n c t i o n ( e l e m e n t )   {          i f   ( e l e m e n t . o f f s e t P a r e n t )   r e t u r n   $ ( e l e m e n t . o f f s e t P a r e n t ) ;          i f   ( e l e m e n t   = =   d o c u m e n t . b o d y )   r e t u r n   $ ( e l e m e n t ) ;           w h i l e   ( ( e l e m e n t   =   e l e m e n t . p a r e n t N o d e )   & &   e l e m e n t   ! =   d o c u m e n t . b o d y )              i f   ( E l e m e n t . g e t S t y l e ( e l e m e n t ,   ' p o s i t i o n ' )   ! =   ' s t a t i c ' )                  r e t u r n   $ ( e l e m e n t ) ;           r e t u r n   $ ( d o c u m e n t . b o d y ) ;      } ,       v i e w p o r t O f f s e t :   f u n c t i o n ( f o r E l e m e n t )   {          v a r   v a l u e T   =   0 ,   v a l u e L   =   0 ;           v a r   e l e m e n t   =   f o r E l e m e n t ;          d o   {              v a l u e T   + =   e l e m e n t . o f f s e t T o p     | |   0 ;              v a l u e L   + =   e l e m e n t . o f f s e t L e f t   | |   0 ;               / /   S a f a r i   f i x              i f   ( e l e m e n t . o f f s e t P a r e n t   = =   d o c u m e n t . b o d y   & &                  E l e m e n t . g e t S t y l e ( e l e m e n t ,   ' p o s i t i o n ' )   = =   ' a b s o l u t e ' )   b r e a k ;           }   w h i l e   ( e l e m e n t   =   e l e m e n t . o f f s e t P a r e n t ) ;           e l e m e n t   =   f o r E l e m e n t ;          d o   {              i f   ( ! P r o t o t y p e . B r o w s e r . O p e r a   | |   e l e m e n t . t a g N a m e   = =   ' B O D Y ' )   {                  v a l u e T   - =   e l e m e n t . s c r o l l T o p     | |   0 ;                  v a l u e L   - =   e l e m e n t . s c r o l l L e f t   | |   0 ;              }          }   w h i l e   ( e l e m e n t   =   e l e m e n t . p a r e n t N o d e ) ;           r e t u r n   E l e m e n t . _ r e t u r n O f f s e t ( v a l u e L ,   v a l u e T ) ;      } ,       c l o n e P o s i t i o n :   f u n c t i o n ( e l e m e n t ,   s o u r c e )   {          v a r   o p t i o n s   =   O b j e c t . e x t e n d ( {              s e t L e f t :         t r u e ,              s e t T o p :           t r u e ,              s e t W i d t h :       t r u e ,              s e t H e i g h t :     t r u e ,              o f f s e t T o p :     0 ,              o f f s e t L e f t :   0          } ,   a r g u m e n t s [ 2 ]   | |   {   } ) ;           / /   f i n d   p a g e   p o s i t i o n   o f   s o u r c e          s o u r c e   =   $ ( s o u r c e ) ;          v a r   p   =   s o u r c e . v i e w p o r t O f f s e t ( ) ;           / /   f i n d   c o o r d i n a t e   s y s t e m   t o   u s e          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   d e l t a   =   [ 0 ,   0 ] ;          v a r   p a r e n t   =   n u l l ;          / /   d e l t a   [ 0 , 0 ]   w i l l   d o   f i n e   w i t h   p o s i t i o n :   f i x e d   e l e m e n t s ,          / /   p o s i t i o n : a b s o l u t e   n e e d s   o f f s e t P a r e n t   d e l t a s          i f   ( E l e m e n t . g e t S t y l e ( e l e m e n t ,   ' p o s i t i o n ' )   = =   ' a b s o l u t e ' )   {              p a r e n t   =   e l e m e n t . g e t O f f s e t P a r e n t ( ) ;              d e l t a   =   p a r e n t . v i e w p o r t O f f s e t ( ) ;          }           / /   c o r r e c t   b y   b o d y   o f f s e t s   ( f i x e s   S a f a r i )          i f   ( p a r e n t   = =   d o c u m e n t . b o d y )   {              d e l t a [ 0 ]   - =   d o c u m e n t . b o d y . o f f s e t L e f t ;              d e l t a [ 1 ]   - =   d o c u m e n t . b o d y . o f f s e t T o p ;          }           / /   s e t   p o s i t i o n          i f   ( o p t i o n s . s e t L e f t )       e l e m e n t . s t y l e . l e f t     =   ( p [ 0 ]   -   d e l t a [ 0 ]   +   o p t i o n s . o f f s e t L e f t )   +   ' p x ' ;          i f   ( o p t i o n s . s e t T o p )         e l e m e n t . s t y l e . t o p       =   ( p [ 1 ]   -   d e l t a [ 1 ]   +   o p t i o n s . o f f s e t T o p )   +   ' p x ' ;          i f   ( o p t i o n s . s e t W i d t h )     e l e m e n t . s t y l e . w i d t h   =   s o u r c e . o f f s e t W i d t h   +   ' p x ' ;          i f   ( o p t i o n s . s e t H e i g h t )   e l e m e n t . s t y l e . h e i g h t   =   s o u r c e . o f f s e t H e i g h t   +   ' p x ' ;          r e t u r n   e l e m e n t ;      }  } ;   E l e m e n t . M e t h o d s . i d e n t i f y . c o u n t e r   =   1 ;   O b j e c t . e x t e n d ( E l e m e n t . M e t h o d s ,   {      g e t E l e m e n t s B y S e l e c t o r :   E l e m e n t . M e t h o d s . s e l e c t ,      c h i l d E l e m e n t s :   E l e m e n t . M e t h o d s . i m m e d i a t e D e s c e n d a n t s  } ) ;   E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s   =   {      w r i t e :   {          n a m e s :   {              c l a s s N a m e :   ' c l a s s ' ,              h t m l F o r :       ' f o r '          } ,          v a l u e s :   {   }      }  } ;   i f   ( P r o t o t y p e . B r o w s e r . O p e r a )   {      E l e m e n t . M e t h o d s . g e t S t y l e   =   E l e m e n t . M e t h o d s . g e t S t y l e . w r a p (          f u n c t i o n ( p r o c e e d ,   e l e m e n t ,   s t y l e )   {              s w i t c h   ( s t y l e )   {                  c a s e   ' l e f t ' :   c a s e   ' t o p ' :   c a s e   ' r i g h t ' :   c a s e   ' b o t t o m ' :                      i f   ( p r o c e e d ( e l e m e n t ,   ' p o s i t i o n ' )   = = =   ' s t a t i c ' )   r e t u r n   n u l l ;                  c a s e   ' h e i g h t ' :   c a s e   ' w i d t h ' :                      / /   r e t u r n s   ' 0 p x '   f o r   h i d d e n   e l e m e n t s ;   w e   w a n t   i t   t o   r e t u r n   n u l l                      i f   ( ! E l e m e n t . v i s i b l e ( e l e m e n t ) )   r e t u r n   n u l l ;                       / /   r e t u r n s   t h e   b o r d e r - b o x   d i m e n s i o n s   r a t h e r   t h a n   t h e   c o n t e n t - b o x                      / /   d i m e n s i o n s ,   s o   w e   s u b t r a c t   p a d d i n g   a n d   b o r d e r s   f r o m   t h e   v a l u e                      v a r   d i m   =   p a r s e I n t ( p r o c e e d ( e l e m e n t ,   s t y l e ) ,   1 0 ) ;                       i f   ( d i m   ! = =   e l e m e n t [ ' o f f s e t '   +   s t y l e . c a p i t a l i z e ( ) ] )                          r e t u r n   d i m   +   ' p x ' ;                       v a r   p r o p e r t i e s ;                      i f   ( s t y l e   = = =   ' h e i g h t ' )   {                          p r o p e r t i e s   =   [ ' b o r d e r - t o p - w i d t h ' ,   ' p a d d i n g - t o p ' ,                            ' p a d d i n g - b o t t o m ' ,   ' b o r d e r - b o t t o m - w i d t h ' ] ;                      }                      e l s e   {                          p r o p e r t i e s   =   [ ' b o r d e r - l e f t - w i d t h ' ,   ' p a d d i n g - l e f t ' ,                            ' p a d d i n g - r i g h t ' ,   ' b o r d e r - r i g h t - w i d t h ' ] ;                      }                      r e t u r n   p r o p e r t i e s . i n j e c t ( d i m ,   f u n c t i o n ( m e m o ,   p r o p e r t y )   {                          v a r   v a l   =   p r o c e e d ( e l e m e n t ,   p r o p e r t y ) ;                          r e t u r n   v a l   = = =   n u l l   ?   m e m o   :   m e m o   -   p a r s e I n t ( v a l ,   1 0 ) ;                      } )   +   ' p x ' ;                  d e f a u l t :   r e t u r n   p r o c e e d ( e l e m e n t ,   s t y l e ) ;              }          }      ) ;       E l e m e n t . M e t h o d s . r e a d A t t r i b u t e   =   E l e m e n t . M e t h o d s . r e a d A t t r i b u t e . w r a p (          f u n c t i o n ( p r o c e e d ,   e l e m e n t ,   a t t r i b u t e )   {              i f   ( a t t r i b u t e   = = =   ' t i t l e ' )   r e t u r n   e l e m e n t . t i t l e ;              r e t u r n   p r o c e e d ( e l e m e n t ,   a t t r i b u t e ) ;          }      ) ;  }   e l s e   i f   ( P r o t o t y p e . B r o w s e r . I E )   {      / /   I E   d o e s n ' t   r e p o r t   o f f s e t s   c o r r e c t l y   f o r   s t a t i c   e l e m e n t s ,   s o   w e   c h a n g e   t h e m      / /   t o   " r e l a t i v e "   t o   g e t   t h e   v a l u e s ,   t h e n   c h a n g e   t h e m   b a c k .      E l e m e n t . M e t h o d s . g e t O f f s e t P a r e n t   =   E l e m e n t . M e t h o d s . g e t O f f s e t P a r e n t . w r a p (          f u n c t i o n ( p r o c e e d ,   e l e m e n t )   {              e l e m e n t   =   $ ( e l e m e n t ) ;              v a r   p o s i t i o n   =   e l e m e n t . g e t S t y l e ( ' p o s i t i o n ' ) ;              i f   ( p o s i t i o n   ! = =   ' s t a t i c ' )   r e t u r n   p r o c e e d ( e l e m e n t ) ;              e l e m e n t . s e t S t y l e ( {   p o s i t i o n :   ' r e l a t i v e '   } ) ;              v a r   v a l u e   =   p r o c e e d ( e l e m e n t ) ;              e l e m e n t . s e t S t y l e ( {   p o s i t i o n :   p o s i t i o n   } ) ;              r e t u r n   v a l u e ;          }      ) ;       $ w ( ' p o s i t i o n e d O f f s e t   v i e w p o r t O f f s e t ' ) . e a c h ( f u n c t i o n ( m e t h o d )   {          E l e m e n t . M e t h o d s [ m e t h o d ]   =   E l e m e n t . M e t h o d s [ m e t h o d ] . w r a p (              f u n c t i o n ( p r o c e e d ,   e l e m e n t )   {                  e l e m e n t   =   $ ( e l e m e n t ) ;                  v a r   p o s i t i o n   =   e l e m e n t . g e t S t y l e ( ' p o s i t i o n ' ) ;                  i f   ( p o s i t i o n   ! = =   ' s t a t i c ' )   r e t u r n   p r o c e e d ( e l e m e n t ) ;                  / /   T r i g g e r   h a s L a y o u t   o n   t h e   o f f s e t   p a r e n t   s o   t h a t   I E 6   r e p o r t s                  / /   a c c u r a t e   o f f s e t T o p   a n d   o f f s e t L e f t   v a l u e s   f o r   p o s i t i o n :   f i x e d .                  v a r   o f f s e t P a r e n t   =   e l e m e n t . g e t O f f s e t P a r e n t ( ) ;                  i f   ( o f f s e t P a r e n t   & &   o f f s e t P a r e n t . g e t S t y l e ( ' p o s i t i o n ' )   = = =   ' f i x e d ' )                      o f f s e t P a r e n t . s e t S t y l e ( {   z o o m :   1   } ) ;                  e l e m e n t . s e t S t y l e ( {   p o s i t i o n :   ' r e l a t i v e '   } ) ;                  v a r   v a l u e   =   p r o c e e d ( e l e m e n t ) ;                  e l e m e n t . s e t S t y l e ( {   p o s i t i o n :   p o s i t i o n   } ) ;                  r e t u r n   v a l u e ;              }          ) ;      } ) ;       E l e m e n t . M e t h o d s . g e t S t y l e   =   f u n c t i o n ( e l e m e n t ,   s t y l e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          s t y l e   =   ( s t y l e   = =   ' f l o a t '   | |   s t y l e   = =   ' c s s F l o a t ' )   ?   ' s t y l e F l o a t '   :   s t y l e . c a m e l i z e ( ) ;          v a r   v a l u e   =   e l e m e n t . s t y l e [ s t y l e ] ;          i f   ( ! v a l u e   & &   e l e m e n t . c u r r e n t S t y l e )   v a l u e   =   e l e m e n t . c u r r e n t S t y l e [ s t y l e ] ;           i f   ( s t y l e   = =   ' o p a c i t y ' )   {              i f   ( v a l u e   =   ( e l e m e n t . g e t S t y l e ( ' f i l t e r ' )   | |   ' ' ) . m a t c h ( / a l p h a \ ( o p a c i t y = ( . * ) \ ) / ) )                  i f   ( v a l u e [ 1 ] )   r e t u r n   p a r s e F l o a t ( v a l u e [ 1 ] )   /   1 0 0 ;              r e t u r n   1 . 0 ;          }           i f   ( v a l u e   = =   ' a u t o ' )   {              i f   ( ( s t y l e   = =   ' w i d t h '   | |   s t y l e   = =   ' h e i g h t ' )   & &   ( e l e m e n t . g e t S t y l e ( ' d i s p l a y ' )   ! =   ' n o n e ' ) )                  r e t u r n   e l e m e n t [ ' o f f s e t '   +   s t y l e . c a p i t a l i z e ( ) ]   +   ' p x ' ;              r e t u r n   n u l l ;          }          r e t u r n   v a l u e ;      } ;       E l e m e n t . M e t h o d s . s e t O p a c i t y   =   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          f u n c t i o n   s t r i p A l p h a ( f i l t e r ) {              r e t u r n   f i l t e r . r e p l a c e ( / a l p h a \ ( [ ^ \ ) ] * \ ) / g i , ' ' ) ;          }          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   c u r r e n t S t y l e   =   e l e m e n t . c u r r e n t S t y l e ;          i f   ( ( c u r r e n t S t y l e   & &   ! c u r r e n t S t y l e . h a s L a y o u t )   | |              ( ! c u r r e n t S t y l e   & &   e l e m e n t . s t y l e . z o o m   = =   ' n o r m a l ' ) )                  e l e m e n t . s t y l e . z o o m   =   1 ;           v a r   f i l t e r   =   e l e m e n t . g e t S t y l e ( ' f i l t e r ' ) ,   s t y l e   =   e l e m e n t . s t y l e ;          i f   ( v a l u e   = =   1   | |   v a l u e   = = =   ' ' )   {              ( f i l t e r   =   s t r i p A l p h a ( f i l t e r ) )   ?                  s t y l e . f i l t e r   =   f i l t e r   :   s t y l e . r e m o v e A t t r i b u t e ( ' f i l t e r ' ) ;              r e t u r n   e l e m e n t ;          }   e l s e   i f   ( v a l u e   <   0 . 0 0 0 0 1 )   v a l u e   =   0 ;          s t y l e . f i l t e r   =   s t r i p A l p h a ( f i l t e r )   +              ' a l p h a ( o p a c i t y = '   +   ( v a l u e   *   1 0 0 )   +   ' ) ' ;          r e t u r n   e l e m e n t ;      } ;       E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s   =   {          r e a d :   {              n a m e s :   {                  ' c l a s s ' :   ' c l a s s N a m e ' ,                  ' f o r ' :       ' h t m l F o r '              } ,              v a l u e s :   {                  _ g e t A t t r :   f u n c t i o n ( e l e m e n t ,   a t t r i b u t e )   {                      r e t u r n   e l e m e n t . g e t A t t r i b u t e ( a t t r i b u t e ,   2 ) ;                  } ,                  _ g e t A t t r N o d e :   f u n c t i o n ( e l e m e n t ,   a t t r i b u t e )   {                      v a r   n o d e   =   e l e m e n t . g e t A t t r i b u t e N o d e ( a t t r i b u t e ) ;                      r e t u r n   n o d e   ?   n o d e . v a l u e   :   " " ;                  } ,                  _ g e t E v :   f u n c t i o n ( e l e m e n t ,   a t t r i b u t e )   {                      a t t r i b u t e   =   e l e m e n t . g e t A t t r i b u t e ( a t t r i b u t e ) ;                      r e t u r n   a t t r i b u t e   ?   a t t r i b u t e . t o S t r i n g ( ) . s l i c e ( 2 3 ,   - 2 )   :   n u l l ;                  } ,                  _ f l a g :   f u n c t i o n ( e l e m e n t ,   a t t r i b u t e )   {                      r e t u r n   $ ( e l e m e n t ) . h a s A t t r i b u t e ( a t t r i b u t e )   ?   a t t r i b u t e   :   n u l l ;                  } ,                  s t y l e :   f u n c t i o n ( e l e m e n t )   {                      r e t u r n   e l e m e n t . s t y l e . c s s T e x t . t o L o w e r C a s e ( ) ;                  } ,                  t i t l e :   f u n c t i o n ( e l e m e n t )   {                      r e t u r n   e l e m e n t . t i t l e ;                  }              }          }      } ;       E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . w r i t e   =   {          n a m e s :   O b j e c t . e x t e n d ( {              c e l l p a d d i n g :   ' c e l l P a d d i n g ' ,              c e l l s p a c i n g :   ' c e l l S p a c i n g '          } ,   E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . r e a d . n a m e s ) ,          v a l u e s :   {              c h e c k e d :   f u n c t i o n ( e l e m e n t ,   v a l u e )   {                  e l e m e n t . c h e c k e d   =   ! ! v a l u e ;              } ,               s t y l e :   f u n c t i o n ( e l e m e n t ,   v a l u e )   {                  e l e m e n t . s t y l e . c s s T e x t   =   v a l u e   ?   v a l u e   :   ' ' ;              }          }      } ;       E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . h a s   =   { } ;       $ w ( ' c o l S p a n   r o w S p a n   v A l i g n   d a t e T i m e   a c c e s s K e y   t a b I n d e x   '   +              ' e n c T y p e   m a x L e n g t h   r e a d O n l y   l o n g D e s c ' ) . e a c h ( f u n c t i o n ( a t t r )   {          E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . w r i t e . n a m e s [ a t t r . t o L o w e r C a s e ( ) ]   =   a t t r ;          E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . h a s [ a t t r . t o L o w e r C a s e ( ) ]   =   a t t r ;      } ) ;       ( f u n c t i o n ( v )   {          O b j e c t . e x t e n d ( v ,   {              h r e f :                 v . _ g e t A t t r ,              s r c :                   v . _ g e t A t t r ,              t y p e :                 v . _ g e t A t t r ,              a c t i o n :             v . _ g e t A t t r N o d e ,              d i s a b l e d :         v . _ f l a g ,              c h e c k e d :           v . _ f l a g ,              r e a d o n l y :         v . _ f l a g ,              m u l t i p l e :         v . _ f l a g ,              o n l o a d :             v . _ g e t E v ,              o n u n l o a d :         v . _ g e t E v ,              o n c l i c k :           v . _ g e t E v ,              o n d b l c l i c k :     v . _ g e t E v ,              o n m o u s e d o w n :   v . _ g e t E v ,              o n m o u s e u p :       v . _ g e t E v ,              o n m o u s e o v e r :   v . _ g e t E v ,              o n m o u s e m o v e :   v . _ g e t E v ,              o n m o u s e o u t :     v . _ g e t E v ,              o n f o c u s :           v . _ g e t E v ,              o n b l u r :             v . _ g e t E v ,              o n k e y p r e s s :     v . _ g e t E v ,              o n k e y d o w n :       v . _ g e t E v ,              o n k e y u p :           v . _ g e t E v ,              o n s u b m i t :         v . _ g e t E v ,              o n r e s e t :           v . _ g e t E v ,              o n s e l e c t :         v . _ g e t E v ,              o n c h a n g e :         v . _ g e t E v          } ) ;      } ) ( E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . r e a d . v a l u e s ) ;  }   e l s e   i f   ( P r o t o t y p e . B r o w s e r . G e c k o   & &   / r v : 1 \ . 8 \ . 0 / . t e s t ( n a v i g a t o r . u s e r A g e n t ) )   {      E l e m e n t . M e t h o d s . s e t O p a c i t y   =   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          e l e m e n t . s t y l e . o p a c i t y   =   ( v a l u e   = =   1 )   ?   0 . 9 9 9 9 9 9   :              ( v a l u e   = = =   ' ' )   ?   ' '   :   ( v a l u e   <   0 . 0 0 0 0 1 )   ?   0   :   v a l u e ;          r e t u r n   e l e m e n t ;      } ;  }   e l s e   i f   ( P r o t o t y p e . B r o w s e r . W e b K i t )   {      E l e m e n t . M e t h o d s . s e t O p a c i t y   =   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          e l e m e n t . s t y l e . o p a c i t y   =   ( v a l u e   = =   1   | |   v a l u e   = = =   ' ' )   ?   ' '   :              ( v a l u e   <   0 . 0 0 0 0 1 )   ?   0   :   v a l u e ;           i f   ( v a l u e   = =   1 )              i f ( e l e m e n t . t a g N a m e   = =   ' I M G '   & &   e l e m e n t . w i d t h )   {                  e l e m e n t . w i d t h + + ;   e l e m e n t . w i d t h - - ;              }   e l s e   t r y   {                  v a r   n   =   d o c u m e n t . c r e a t e T e x t N o d e ( '   ' ) ;                  e l e m e n t . a p p e n d C h i l d ( n ) ;                  e l e m e n t . r e m o v e C h i l d ( n ) ;              }   c a t c h   ( e )   {   }           r e t u r n   e l e m e n t ;      } ;       / /   S a f a r i   r e t u r n s   m a r g i n s   o n   b o d y   w h i c h   i s   i n c o r r e c t   i f   t h e   c h i l d   i s   a b s o l u t e l y      / /   p o s i t i o n e d .     F o r   p e r f o r m a n c e   r e a s o n s ,   r e d e f i n e   E l e m e n t # c u m u l a t i v e O f f s e t   f o r      / /   K H T M L / W e b K i t   o n l y .      E l e m e n t . M e t h o d s . c u m u l a t i v e O f f s e t   =   f u n c t i o n ( e l e m e n t )   {          v a r   v a l u e T   =   0 ,   v a l u e L   =   0 ;          d o   {              v a l u e T   + =   e l e m e n t . o f f s e t T o p     | |   0 ;              v a l u e L   + =   e l e m e n t . o f f s e t L e f t   | |   0 ;              i f   ( e l e m e n t . o f f s e t P a r e n t   = =   d o c u m e n t . b o d y )                  i f   ( E l e m e n t . g e t S t y l e ( e l e m e n t ,   ' p o s i t i o n ' )   = =   ' a b s o l u t e ' )   b r e a k ;               e l e m e n t   =   e l e m e n t . o f f s e t P a r e n t ;          }   w h i l e   ( e l e m e n t ) ;           r e t u r n   E l e m e n t . _ r e t u r n O f f s e t ( v a l u e L ,   v a l u e T ) ;      } ;  }   i f   ( P r o t o t y p e . B r o w s e r . I E   | |   P r o t o t y p e . B r o w s e r . O p e r a )   {      / /   I E   a n d   O p e r a   a r e   m i s s i n g   . i n n e r H T M L   s u p p o r t   f o r   T A B L E - r e l a t e d   a n d   S E L E C T   e l e m e n t s      E l e m e n t . M e t h o d s . u p d a t e   =   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;           i f   ( c o n t e n t   & &   c o n t e n t . t o E l e m e n t )   c o n t e n t   =   c o n t e n t . t o E l e m e n t ( ) ;          i f   ( O b j e c t . i s E l e m e n t ( c o n t e n t ) )   r e t u r n   e l e m e n t . u p d a t e ( ) . i n s e r t ( c o n t e n t ) ;           c o n t e n t   =   O b j e c t . t o H T M L ( c o n t e n t ) ;          v a r   t a g N a m e   =   e l e m e n t . t a g N a m e . t o U p p e r C a s e ( ) ;           i f   ( t a g N a m e   i n   E l e m e n t . _ i n s e r t i o n T r a n s l a t i o n s . t a g s )   {              $ A ( e l e m e n t . c h i l d N o d e s ) . e a c h ( f u n c t i o n ( n o d e )   {   e l e m e n t . r e m o v e C h i l d ( n o d e )   } ) ;              E l e m e n t . _ g e t C o n t e n t F r o m A n o n y m o u s E l e m e n t ( t a g N a m e ,   c o n t e n t . s t r i p S c r i p t s ( ) )                  . e a c h ( f u n c t i o n ( n o d e )   {   e l e m e n t . a p p e n d C h i l d ( n o d e )   } ) ;          }          e l s e   e l e m e n t . i n n e r H T M L   =   c o n t e n t . s t r i p S c r i p t s ( ) ;           c o n t e n t . e v a l S c r i p t s . b i n d ( c o n t e n t ) . d e f e r ( ) ;          r e t u r n   e l e m e n t ;      } ;  }   i f   ( ' o u t e r H T M L '   i n   d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) )   {      E l e m e n t . M e t h o d s . r e p l a c e   =   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;           i f   ( c o n t e n t   & &   c o n t e n t . t o E l e m e n t )   c o n t e n t   =   c o n t e n t . t o E l e m e n t ( ) ;          i f   ( O b j e c t . i s E l e m e n t ( c o n t e n t ) )   {              e l e m e n t . p a r e n t N o d e . r e p l a c e C h i l d ( c o n t e n t ,   e l e m e n t ) ;              r e t u r n   e l e m e n t ;          }           c o n t e n t   =   O b j e c t . t o H T M L ( c o n t e n t ) ;          v a r   p a r e n t   =   e l e m e n t . p a r e n t N o d e ,   t a g N a m e   =   p a r e n t . t a g N a m e . t o U p p e r C a s e ( ) ;           i f   ( E l e m e n t . _ i n s e r t i o n T r a n s l a t i o n s . t a g s [ t a g N a m e ] )   {              v a r   n e x t S i b l i n g   =   e l e m e n t . n e x t ( ) ;              v a r   f r a g m e n t s   =   E l e m e n t . _ g e t C o n t e n t F r o m A n o n y m o u s E l e m e n t ( t a g N a m e ,   c o n t e n t . s t r i p S c r i p t s ( ) ) ;              p a r e n t . r e m o v e C h i l d ( e l e m e n t ) ;              i f   ( n e x t S i b l i n g )                  f r a g m e n t s . e a c h ( f u n c t i o n ( n o d e )   {   p a r e n t . i n s e r t B e f o r e ( n o d e ,   n e x t S i b l i n g )   } ) ;              e l s e                  f r a g m e n t s . e a c h ( f u n c t i o n ( n o d e )   {   p a r e n t . a p p e n d C h i l d ( n o d e )   } ) ;          }          e l s e   e l e m e n t . o u t e r H T M L   =   c o n t e n t . s t r i p S c r i p t s ( ) ;           c o n t e n t . e v a l S c r i p t s . b i n d ( c o n t e n t ) . d e f e r ( ) ;          r e t u r n   e l e m e n t ;      } ;  }   E l e m e n t . _ r e t u r n O f f s e t   =   f u n c t i o n ( l ,   t )   {      v a r   r e s u l t   =   [ l ,   t ] ;      r e s u l t . l e f t   =   l ;      r e s u l t . t o p   =   t ;      r e t u r n   r e s u l t ;  } ;   E l e m e n t . _ g e t C o n t e n t F r o m A n o n y m o u s E l e m e n t   =   f u n c t i o n ( t a g N a m e ,   h t m l )   {      v a r   d i v   =   n e w   E l e m e n t ( ' d i v ' ) ,   t   =   E l e m e n t . _ i n s e r t i o n T r a n s l a t i o n s . t a g s [ t a g N a m e ] ;      i f   ( t )   {          d i v . i n n e r H T M L   =   t [ 0 ]   +   h t m l   +   t [ 1 ] ;          t [ 2 ] . t i m e s ( f u n c t i o n ( )   {   d i v   =   d i v . f i r s t C h i l d   } ) ;      }   e l s e   d i v . i n n e r H T M L   =   h t m l ;      r e t u r n   $ A ( d i v . c h i l d N o d e s ) ;  } ;   E l e m e n t . _ i n s e r t i o n T r a n s l a t i o n s   =   {      b e f o r e :   f u n c t i o n ( e l e m e n t ,   n o d e )   {          e l e m e n t . p a r e n t N o d e . i n s e r t B e f o r e ( n o d e ,   e l e m e n t ) ;      } ,      t o p :   f u n c t i o n ( e l e m e n t ,   n o d e )   {          e l e m e n t . i n s e r t B e f o r e ( n o d e ,   e l e m e n t . f i r s t C h i l d ) ;      } ,      b o t t o m :   f u n c t i o n ( e l e m e n t ,   n o d e )   {          e l e m e n t . a p p e n d C h i l d ( n o d e ) ;      } ,      a f t e r :   f u n c t i o n ( e l e m e n t ,   n o d e )   {          e l e m e n t . p a r e n t N o d e . i n s e r t B e f o r e ( n o d e ,   e l e m e n t . n e x t S i b l i n g ) ;      } ,      t a g s :   {          T A B L E :     [ ' < t a b l e > ' ,                                 ' < / t a b l e > ' ,                                       1 ] ,          T B O D Y :     [ ' < t a b l e > < t b o d y > ' ,                   ' < / t b o d y > < / t a b l e > ' ,                       2 ] ,          T R :           [ ' < t a b l e > < t b o d y > < t r > ' ,           ' < / t r > < / t b o d y > < / t a b l e > ' ,             3 ] ,          T D :           [ ' < t a b l e > < t b o d y > < t r > < t d > ' ,   ' < / t d > < / t r > < / t b o d y > < / t a b l e > ' ,   4 ] ,          S E L E C T :   [ ' < s e l e c t > ' ,                               ' < / s e l e c t > ' ,                                     1 ]      }  } ;   ( f u n c t i o n ( )   {      O b j e c t . e x t e n d ( t h i s . t a g s ,   {          T H E A D :   t h i s . t a g s . T B O D Y ,          T F O O T :   t h i s . t a g s . T B O D Y ,          T H :         t h i s . t a g s . T D      } ) ;  } ) . c a l l ( E l e m e n t . _ i n s e r t i o n T r a n s l a t i o n s ) ;   E l e m e n t . M e t h o d s . S i m u l a t e d   =   {      h a s A t t r i b u t e :   f u n c t i o n ( e l e m e n t ,   a t t r i b u t e )   {          a t t r i b u t e   =   E l e m e n t . _ a t t r i b u t e T r a n s l a t i o n s . h a s [ a t t r i b u t e ]   | |   a t t r i b u t e ;          v a r   n o d e   =   $ ( e l e m e n t ) . g e t A t t r i b u t e N o d e ( a t t r i b u t e ) ;          r e t u r n   n o d e   & &   n o d e . s p e c i f i e d ;      }  } ;   E l e m e n t . M e t h o d s . B y T a g   =   {   } ;   O b j e c t . e x t e n d ( E l e m e n t ,   E l e m e n t . M e t h o d s ) ;   i f   ( ! P r o t o t y p e . B r o w s e r F e a t u r e s . E l e m e n t E x t e n s i o n s   & &          d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) . _ _ p r o t o _ _ )   {      w i n d o w . H T M L E l e m e n t   =   {   } ;      w i n d o w . H T M L E l e m e n t . p r o t o t y p e   =   d o c u m e n t . c r e a t e E l e m e n t ( ' d i v ' ) . _ _ p r o t o _ _ ;      P r o t o t y p e . B r o w s e r F e a t u r e s . E l e m e n t E x t e n s i o n s   =   t r u e ;  }   E l e m e n t . e x t e n d   =   ( f u n c t i o n ( )   {      i f   ( P r o t o t y p e . B r o w s e r F e a t u r e s . S p e c i f i c E l e m e n t E x t e n s i o n s )          r e t u r n   P r o t o t y p e . K ;       v a r   M e t h o d s   =   {   } ,   B y T a g   =   E l e m e n t . M e t h o d s . B y T a g ;       v a r   e x t e n d   =   O b j e c t . e x t e n d ( f u n c t i o n ( e l e m e n t )   {          i f   ( ! e l e m e n t   | |   e l e m e n t . _ e x t e n d e d B y P r o t o t y p e   | |                  e l e m e n t . n o d e T y p e   ! =   1   | |   e l e m e n t   = =   w i n d o w )   r e t u r n   e l e m e n t ;           v a r   m e t h o d s   =   O b j e c t . c l o n e ( M e t h o d s ) ,              t a g N a m e   =   e l e m e n t . t a g N a m e ,   p r o p e r t y ,   v a l u e ;           / /   e x t e n d   m e t h o d s   f o r   s p e c i f i c   t a g s          i f   ( B y T a g [ t a g N a m e ] )   O b j e c t . e x t e n d ( m e t h o d s ,   B y T a g [ t a g N a m e ] ) ;           f o r   ( p r o p e r t y   i n   m e t h o d s )   {              v a l u e   =   m e t h o d s [ p r o p e r t y ] ;              i f   ( O b j e c t . i s F u n c t i o n ( v a l u e )   & &   ! ( p r o p e r t y   i n   e l e m e n t ) )                  e l e m e n t [ p r o p e r t y ]   =   v a l u e . m e t h o d i z e ( ) ;          }           e l e m e n t . _ e x t e n d e d B y P r o t o t y p e   =   P r o t o t y p e . e m p t y F u n c t i o n ;          r e t u r n   e l e m e n t ;       } ,   {          r e f r e s h :   f u n c t i o n ( )   {              / /   e x t e n d   m e t h o d s   f o r   a l l   t a g s   ( S a f a r i   d o e s n ' t   n e e d   t h i s )              i f   ( ! P r o t o t y p e . B r o w s e r F e a t u r e s . E l e m e n t E x t e n s i o n s )   {                  O b j e c t . e x t e n d ( M e t h o d s ,   E l e m e n t . M e t h o d s ) ;                  O b j e c t . e x t e n d ( M e t h o d s ,   E l e m e n t . M e t h o d s . S i m u l a t e d ) ;              }          }      } ) ;       e x t e n d . r e f r e s h ( ) ;      r e t u r n   e x t e n d ;  } ) ( ) ;   E l e m e n t . h a s A t t r i b u t e   =   f u n c t i o n ( e l e m e n t ,   a t t r i b u t e )   {      i f   ( e l e m e n t . h a s A t t r i b u t e )   r e t u r n   e l e m e n t . h a s A t t r i b u t e ( a t t r i b u t e ) ;      r e t u r n   E l e m e n t . M e t h o d s . S i m u l a t e d . h a s A t t r i b u t e ( e l e m e n t ,   a t t r i b u t e ) ;  } ;   E l e m e n t . a d d M e t h o d s   =   f u n c t i o n ( m e t h o d s )   {      v a r   F   =   P r o t o t y p e . B r o w s e r F e a t u r e s ,   T   =   E l e m e n t . M e t h o d s . B y T a g ;       i f   ( ! m e t h o d s )   {          O b j e c t . e x t e n d ( F o r m ,   F o r m . M e t h o d s ) ;          O b j e c t . e x t e n d ( F o r m . E l e m e n t ,   F o r m . E l e m e n t . M e t h o d s ) ;          O b j e c t . e x t e n d ( E l e m e n t . M e t h o d s . B y T a g ,   {              " F O R M " :           O b j e c t . c l o n e ( F o r m . M e t h o d s ) ,              " I N P U T " :         O b j e c t . c l o n e ( F o r m . E l e m e n t . M e t h o d s ) ,              " S E L E C T " :       O b j e c t . c l o n e ( F o r m . E l e m e n t . M e t h o d s ) ,              " T E X T A R E A " :   O b j e c t . c l o n e ( F o r m . E l e m e n t . M e t h o d s )          } ) ;      }       i f   ( a r g u m e n t s . l e n g t h   = =   2 )   {          v a r   t a g N a m e   =   m e t h o d s ;          m e t h o d s   =   a r g u m e n t s [ 1 ] ;      }       i f   ( ! t a g N a m e )   O b j e c t . e x t e n d ( E l e m e n t . M e t h o d s ,   m e t h o d s   | |   {   } ) ;      e l s e   {          i f   ( O b j e c t . i s A r r a y ( t a g N a m e ) )   t a g N a m e . e a c h ( e x t e n d ) ;          e l s e   e x t e n d ( t a g N a m e ) ;      }       f u n c t i o n   e x t e n d ( t a g N a m e )   {          t a g N a m e   =   t a g N a m e . t o U p p e r C a s e ( ) ;          i f   ( ! E l e m e n t . M e t h o d s . B y T a g [ t a g N a m e ] )              E l e m e n t . M e t h o d s . B y T a g [ t a g N a m e ]   =   {   } ;          O b j e c t . e x t e n d ( E l e m e n t . M e t h o d s . B y T a g [ t a g N a m e ] ,   m e t h o d s ) ;      }       f u n c t i o n   c o p y ( m e t h o d s ,   d e s t i n a t i o n ,   o n l y I f A b s e n t )   {          o n l y I f A b s e n t   =   o n l y I f A b s e n t   | |   f a l s e ;          f o r   ( v a r   p r o p e r t y   i n   m e t h o d s )   {              v a r   v a l u e   =   m e t h o d s [ p r o p e r t y ] ;              i f   ( ! O b j e c t . i s F u n c t i o n ( v a l u e ) )   c o n t i n u e ;              i f   ( ! o n l y I f A b s e n t   | |   ! ( p r o p e r t y   i n   d e s t i n a t i o n ) )                  d e s t i n a t i o n [ p r o p e r t y ]   =   v a l u e . m e t h o d i z e ( ) ;          }      }       f u n c t i o n   f i n d D O M C l a s s ( t a g N a m e )   {          v a r   k l a s s ;          v a r   t r a n s   =   {              " O P T G R O U P " :   " O p t G r o u p " ,   " T E X T A R E A " :   " T e x t A r e a " ,   " P " :   " P a r a g r a p h " ,              " F I E L D S E T " :   " F i e l d S e t " ,   " U L " :   " U L i s t " ,   " O L " :   " O L i s t " ,   " D L " :   " D L i s t " ,              " D I R " :   " D i r e c t o r y " ,   " H 1 " :   " H e a d i n g " ,   " H 2 " :   " H e a d i n g " ,   " H 3 " :   " H e a d i n g " ,              " H 4 " :   " H e a d i n g " ,   " H 5 " :   " H e a d i n g " ,   " H 6 " :   " H e a d i n g " ,   " Q " :   " Q u o t e " ,              " I N S " :   " M o d " ,   " D E L " :   " M o d " ,   " A " :   " A n c h o r " ,   " I M G " :   " I m a g e " ,   " C A P T I O N " :              " T a b l e C a p t i o n " ,   " C O L " :   " T a b l e C o l " ,   " C O L G R O U P " :   " T a b l e C o l " ,   " T H E A D " :              " T a b l e S e c t i o n " ,   " T F O O T " :   " T a b l e S e c t i o n " ,   " T B O D Y " :   " T a b l e S e c t i o n " ,   " T R " :              " T a b l e R o w " ,   " T H " :   " T a b l e C e l l " ,   " T D " :   " T a b l e C e l l " ,   " F R A M E S E T " :              " F r a m e S e t " ,   " I F R A M E " :   " I F r a m e "          } ;          i f   ( t r a n s [ t a g N a m e ] )   k l a s s   =   ' H T M L '   +   t r a n s [ t a g N a m e ]   +   ' E l e m e n t ' ;          i f   ( w i n d o w [ k l a s s ] )   r e t u r n   w i n d o w [ k l a s s ] ;          k l a s s   =   ' H T M L '   +   t a g N a m e   +   ' E l e m e n t ' ;          i f   ( w i n d o w [ k l a s s ] )   r e t u r n   w i n d o w [ k l a s s ] ;          k l a s s   =   ' H T M L '   +   t a g N a m e . c a p i t a l i z e ( )   +   ' E l e m e n t ' ;          i f   ( w i n d o w [ k l a s s ] )   r e t u r n   w i n d o w [ k l a s s ] ;           w i n d o w [ k l a s s ]   =   {   } ;          w i n d o w [ k l a s s ] . p r o t o t y p e   =   d o c u m e n t . c r e a t e E l e m e n t ( t a g N a m e ) . _ _ p r o t o _ _ ;          r e t u r n   w i n d o w [ k l a s s ] ;      }       i f   ( F . E l e m e n t E x t e n s i o n s )   {          c o p y ( E l e m e n t . M e t h o d s ,   H T M L E l e m e n t . p r o t o t y p e ) ;          c o p y ( E l e m e n t . M e t h o d s . S i m u l a t e d ,   H T M L E l e m e n t . p r o t o t y p e ,   t r u e ) ;      }       i f   ( F . S p e c i f i c E l e m e n t E x t e n s i o n s )   {          f o r   ( v a r   t a g   i n   E l e m e n t . M e t h o d s . B y T a g )   {              v a r   k l a s s   =   f i n d D O M C l a s s ( t a g ) ;              i f   ( O b j e c t . i s U n d e f i n e d ( k l a s s ) )   c o n t i n u e ;              c o p y ( T [ t a g ] ,   k l a s s . p r o t o t y p e ) ;          }      }       O b j e c t . e x t e n d ( E l e m e n t ,   E l e m e n t . M e t h o d s ) ;      d e l e t e   E l e m e n t . B y T a g ;       i f   ( E l e m e n t . e x t e n d . r e f r e s h )   E l e m e n t . e x t e n d . r e f r e s h ( ) ;      E l e m e n t . c a c h e   =   {   } ;  } ;   d o c u m e n t . v i e w p o r t   =   {      g e t D i m e n s i o n s :   f u n c t i o n ( )   {          v a r   d i m e n s i o n s   =   {   } ;          v a r   B   =   P r o t o t y p e . B r o w s e r ;          $ w ( ' w i d t h   h e i g h t ' ) . e a c h ( f u n c t i o n ( d )   {              v a r   D   =   d . c a p i t a l i z e ( ) ;              d i m e n s i o n s [ d ]   =   ( B . W e b K i t   & &   ! d o c u m e n t . e v a l u a t e )   ?   s e l f [ ' i n n e r '   +   D ]   :                  ( B . O p e r a )   ?   d o c u m e n t . b o d y [ ' c l i e n t '   +   D ]   :   d o c u m e n t . d o c u m e n t E l e m e n t [ ' c l i e n t '   +   D ] ;          } ) ;          r e t u r n   d i m e n s i o n s ;      } ,       g e t W i d t h :   f u n c t i o n ( )   {          r e t u r n   t h i s . g e t D i m e n s i o n s ( ) . w i d t h ;      } ,       g e t H e i g h t :   f u n c t i o n ( )   {          r e t u r n   t h i s . g e t D i m e n s i o n s ( ) . h e i g h t ;      } ,       g e t S c r o l l O f f s e t s :   f u n c t i o n ( )   {          r e t u r n   E l e m e n t . _ r e t u r n O f f s e t (              w i n d o w . p a g e X O f f s e t   | |   d o c u m e n t . d o c u m e n t E l e m e n t . s c r o l l L e f t   | |   d o c u m e n t . b o d y . s c r o l l L e f t ,              w i n d o w . p a g e Y O f f s e t   | |   d o c u m e n t . d o c u m e n t E l e m e n t . s c r o l l T o p   | |   d o c u m e n t . b o d y . s c r o l l T o p ) ;      }  } ;  / *   P o r t i o n s   o f   t h e   S e l e c t o r   c l a s s   a r e   d e r i v e d   f r o m   J a c k   S l o c u m ‚ ¨ "!s   D o m Q u e r y ,    *   p a r t   o f   Y U I - E x t   v e r s i o n   0 . 4 0 ,   d i s t r i b u t e d   u n d e r   t h e   t e r m s   o f   a n   M I T - s t y l e    *   l i c e n s e .     P l e a s e   s e e   h t t p : / / w w w . y u i - e x t . c o m /   f o r   m o r e   i n f o r m a t i o n .   * /   v a r   S e l e c t o r   =   C l a s s . c r e a t e ( {      i n i t i a l i z e :   f u n c t i o n ( e x p r e s s i o n )   {          t h i s . e x p r e s s i o n   =   e x p r e s s i o n . s t r i p ( ) ;          t h i s . c o m p i l e M a t c h e r ( ) ;      } ,       s h o u l d U s e X P a t h :   f u n c t i o n ( )   {          i f   ( ! P r o t o t y p e . B r o w s e r F e a t u r e s . X P a t h )   r e t u r n   f a l s e ;           v a r   e   =   t h i s . e x p r e s s i o n ;           / /   S a f a r i   3   c h o k e s   o n   : * - o f - t y p e   a n d   : e m p t y          i f   ( P r o t o t y p e . B r o w s e r . W e b K i t   & &            ( e . i n c l u d e ( " - o f - t y p e " )   | |   e . i n c l u d e ( " : e m p t y " ) ) )              r e t u r n   f a l s e ;           / /   X P a t h   c a n ' t   d o   n a m e s p a c e d   a t t r i b u t e s ,   n o r   c a n   i t   r e a d          / /   t h e   " c h e c k e d "   p r o p e r t y   f r o m   D O M   n o d e s          i f   ( ( / ( \ [ [ \ w - ] * ? : | : c h e c k e d ) / ) . t e s t ( t h i s . e x p r e s s i o n ) )              r e t u r n   f a l s e ;           r e t u r n   t r u e ;      } ,       c o m p i l e M a t c h e r :   f u n c t i o n ( )   {          i f   ( t h i s . s h o u l d U s e X P a t h ( ) )              r e t u r n   t h i s . c o m p i l e X P a t h M a t c h e r ( ) ;           v a r   e   =   t h i s . e x p r e s s i o n ,   p s   =   S e l e c t o r . p a t t e r n s ,   h   =   S e l e c t o r . h a n d l e r s ,                  c   =   S e l e c t o r . c r i t e r i a ,   l e ,   p ,   m ;           i f   ( S e l e c t o r . _ c a c h e [ e ] )   {              t h i s . m a t c h e r   =   S e l e c t o r . _ c a c h e [ e ] ;              r e t u r n ;          }           t h i s . m a t c h e r   =   [ " t h i s . m a t c h e r   =   f u n c t i o n ( r o o t )   { " ,                                          " v a r   r   =   r o o t ,   h   =   S e l e c t o r . h a n d l e r s ,   c   =   f a l s e ,   n ; " ] ;           w h i l e   ( e   & &   l e   ! =   e   & &   ( / \ S / ) . t e s t ( e ) )   {              l e   =   e ;              f o r   ( v a r   i   i n   p s )   {                  p   =   p s [ i ] ;                  i f   ( m   =   e . m a t c h ( p ) )   {                      t h i s . m a t c h e r . p u s h ( O b j e c t . i s F u n c t i o n ( c [ i ] )   ?   c [ i ] ( m )   :          	             n e w   T e m p l a t e ( c [ i ] ) . e v a l u a t e ( m ) ) ;                      e   =   e . r e p l a c e ( m [ 0 ] ,   ' ' ) ;                      b r e a k ;                  }              }          }           t h i s . m a t c h e r . p u s h ( " r e t u r n   h . u n i q u e ( n ) ; \ n } " ) ;          e v a l ( t h i s . m a t c h e r . j o i n ( ' \ n ' ) ) ;          S e l e c t o r . _ c a c h e [ t h i s . e x p r e s s i o n ]   =   t h i s . m a t c h e r ;      } ,       c o m p i l e X P a t h M a t c h e r :   f u n c t i o n ( )   {          v a r   e   =   t h i s . e x p r e s s i o n ,   p s   =   S e l e c t o r . p a t t e r n s ,                  x   =   S e l e c t o r . x p a t h ,   l e ,   m ;           i f   ( S e l e c t o r . _ c a c h e [ e ] )   {              t h i s . x p a t h   =   S e l e c t o r . _ c a c h e [ e ] ;   r e t u r n ;          }           t h i s . m a t c h e r   =   [ ' . / / * ' ] ;          w h i l e   ( e   & &   l e   ! =   e   & &   ( / \ S / ) . t e s t ( e ) )   {              l e   =   e ;              f o r   ( v a r   i   i n   p s )   {                  i f   ( m   =   e . m a t c h ( p s [ i ] ) )   {                      t h i s . m a t c h e r . p u s h ( O b j e c t . i s F u n c t i o n ( x [ i ] )   ?   x [ i ] ( m )   :                          n e w   T e m p l a t e ( x [ i ] ) . e v a l u a t e ( m ) ) ;                      e   =   e . r e p l a c e ( m [ 0 ] ,   ' ' ) ;                      b r e a k ;                  }              }          }           t h i s . x p a t h   =   t h i s . m a t c h e r . j o i n ( ' ' ) ;          S e l e c t o r . _ c a c h e [ t h i s . e x p r e s s i o n ]   =   t h i s . x p a t h ;      } ,       f i n d E l e m e n t s :   f u n c t i o n ( r o o t )   {          r o o t   =   r o o t   | |   d o c u m e n t ;          i f   ( t h i s . x p a t h )   r e t u r n   d o c u m e n t . _ g e t E l e m e n t s B y X P a t h ( t h i s . x p a t h ,   r o o t ) ;          r e t u r n   t h i s . m a t c h e r ( r o o t ) ;      } ,       m a t c h :   f u n c t i o n ( e l e m e n t )   {          t h i s . t o k e n s   =   [ ] ;           v a r   e   =   t h i s . e x p r e s s i o n ,   p s   =   S e l e c t o r . p a t t e r n s ,   a s   =   S e l e c t o r . a s s e r t i o n s ;          v a r   l e ,   p ,   m ;           w h i l e   ( e   & &   l e   ! = =   e   & &   ( / \ S / ) . t e s t ( e ) )   {              l e   =   e ;              f o r   ( v a r   i   i n   p s )   {                  p   =   p s [ i ] ;                  i f   ( m   =   e . m a t c h ( p ) )   {                      / /   u s e   t h e   S e l e c t o r . a s s e r t i o n s   m e t h o d s   u n l e s s   t h e   s e l e c t o r                      / /   i s   t o o   c o m p l e x .                      i f   ( a s [ i ] )   {                          t h i s . t o k e n s . p u s h ( [ i ,   O b j e c t . c l o n e ( m ) ] ) ;                          e   =   e . r e p l a c e ( m [ 0 ] ,   ' ' ) ;                      }   e l s e   {                          / /   r e l u c t a n t l y   d o   a   d o c u m e n t - w i d e   s e a r c h                          / /   a n d   l o o k   f o r   a   m a t c h   i n   t h e   a r r a y                          r e t u r n   t h i s . f i n d E l e m e n t s ( d o c u m e n t ) . i n c l u d e ( e l e m e n t ) ;                      }                  }              }          }           v a r   m a t c h   =   t r u e ,   n a m e ,   m a t c h e s ;          f o r   ( v a r   i   =   0 ,   t o k e n ;   t o k e n   =   t h i s . t o k e n s [ i ] ;   i + + )   {              n a m e   =   t o k e n [ 0 ] ,   m a t c h e s   =   t o k e n [ 1 ] ;              i f   ( ! S e l e c t o r . a s s e r t i o n s [ n a m e ] ( e l e m e n t ,   m a t c h e s ) )   {                  m a t c h   =   f a l s e ;   b r e a k ;              }          }           r e t u r n   m a t c h ;      } ,       t o S t r i n g :   f u n c t i o n ( )   {          r e t u r n   t h i s . e x p r e s s i o n ;      } ,       i n s p e c t :   f u n c t i o n ( )   {          r e t u r n   " # < S e l e c t o r : "   +   t h i s . e x p r e s s i o n . i n s p e c t ( )   +   " > " ;      }  } ) ;   O b j e c t . e x t e n d ( S e l e c t o r ,   {      _ c a c h e :   {   } ,       x p a t h :   {          d e s c e n d a n t :       " / / * " ,          c h i l d :                 " / * " ,          a d j a c e n t :           " / f o l l o w i n g - s i b l i n g : : * [ 1 ] " ,          l a t e r S i b l i n g :   ' / f o l l o w i n g - s i b l i n g : : * ' ,          t a g N a m e :             f u n c t i o n ( m )   {              i f   ( m [ 1 ]   = =   ' * ' )   r e t u r n   ' ' ;              r e t u r n   " [ l o c a l - n a m e ( ) = ' "   +   m [ 1 ] . t o L o w e r C a s e ( )   +                            " '   o r   l o c a l - n a m e ( ) = ' "   +   m [ 1 ] . t o U p p e r C a s e ( )   +   " ' ] " ;          } ,          c l a s s N a m e :         " [ c o n t a i n s ( c o n c a t ( '   ' ,   @ c l a s s ,   '   ' ) ,   '   # { 1 }   ' ) ] " ,          i d :                       " [ @ i d = ' # { 1 } ' ] " ,          a t t r P r e s e n c e :   f u n c t i o n ( m )   {              m [ 1 ]   =   m [ 1 ] . t o L o w e r C a s e ( ) ;              r e t u r n   n e w   T e m p l a t e ( " [ @ # { 1 } ] " ) . e v a l u a t e ( m ) ;          } ,          a t t r :   f u n c t i o n ( m )   {              m [ 1 ]   =   m [ 1 ] . t o L o w e r C a s e ( ) ;              m [ 3 ]   =   m [ 5 ]   | |   m [ 6 ] ;              r e t u r n   n e w   T e m p l a t e ( S e l e c t o r . x p a t h . o p e r a t o r s [ m [ 2 ] ] ) . e v a l u a t e ( m ) ;          } ,          p s e u d o :   f u n c t i o n ( m )   {              v a r   h   =   S e l e c t o r . x p a t h . p s e u d o s [ m [ 1 ] ] ;              i f   ( ! h )   r e t u r n   ' ' ;              i f   ( O b j e c t . i s F u n c t i o n ( h ) )   r e t u r n   h ( m ) ;              r e t u r n   n e w   T e m p l a t e ( S e l e c t o r . x p a t h . p s e u d o s [ m [ 1 ] ] ) . e v a l u a t e ( m ) ;          } ,          o p e r a t o r s :   {              ' = ' :     " [ @ # { 1 } = ' # { 3 } ' ] " ,              ' ! = ' :   " [ @ # { 1 } ! = ' # { 3 } ' ] " ,              ' ^ = ' :   " [ s t a r t s - w i t h ( @ # { 1 } ,   ' # { 3 } ' ) ] " ,              ' $ = ' :   " [ s u b s t r i n g ( @ # { 1 } ,   ( s t r i n g - l e n g t h ( @ # { 1 } )   -   s t r i n g - l e n g t h ( ' # { 3 } ' )   +   1 ) ) = ' # { 3 } ' ] " ,              ' * = ' :   " [ c o n t a i n s ( @ # { 1 } ,   ' # { 3 } ' ) ] " ,              ' ~ = ' :   " [ c o n t a i n s ( c o n c a t ( '   ' ,   @ # { 1 } ,   '   ' ) ,   '   # { 3 }   ' ) ] " ,              ' | = ' :   " [ c o n t a i n s ( c o n c a t ( ' - ' ,   @ # { 1 } ,   ' - ' ) ,   ' - # { 3 } - ' ) ] "          } ,          p s e u d o s :   {              ' f i r s t - c h i l d ' :   ' [ n o t ( p r e c e d i n g - s i b l i n g : : * ) ] ' ,              ' l a s t - c h i l d ' :     ' [ n o t ( f o l l o w i n g - s i b l i n g : : * ) ] ' ,              ' o n l y - c h i l d ' :     ' [ n o t ( p r e c e d i n g - s i b l i n g : : *   o r   f o l l o w i n g - s i b l i n g : : * ) ] ' ,              ' e m p t y ' :               " [ c o u n t ( * )   =   0   a n d   ( c o u n t ( t e x t ( ) )   =   0   o r   t r a n s l a t e ( t e x t ( ) ,   '   \ t \ r \ n ' ,   ' ' )   =   ' ' ) ] " ,              ' c h e c k e d ' :           " [ @ c h e c k e d ] " ,              ' d i s a b l e d ' :         " [ @ d i s a b l e d ] " ,              ' e n a b l e d ' :           " [ n o t ( @ d i s a b l e d ) ] " ,              ' n o t ' :   f u n c t i o n ( m )   {                  v a r   e   =   m [ 6 ] ,   p   =   S e l e c t o r . p a t t e r n s ,                          x   =   S e l e c t o r . x p a t h ,   l e ,   v ;                   v a r   e x c l u s i o n   =   [ ] ;                  w h i l e   ( e   & &   l e   ! =   e   & &   ( / \ S / ) . t e s t ( e ) )   {                      l e   =   e ;                      f o r   ( v a r   i   i n   p )   {                          i f   ( m   =   e . m a t c h ( p [ i ] ) )   {                              v   =   O b j e c t . i s F u n c t i o n ( x [ i ] )   ?   x [ i ] ( m )   :   n e w   T e m p l a t e ( x [ i ] ) . e v a l u a t e ( m ) ;                              e x c l u s i o n . p u s h ( " ( "   +   v . s u b s t r i n g ( 1 ,   v . l e n g t h   -   1 )   +   " ) " ) ;                              e   =   e . r e p l a c e ( m [ 0 ] ,   ' ' ) ;                              b r e a k ;                          }                      }                  }                  r e t u r n   " [ n o t ( "   +   e x c l u s i o n . j o i n ( "   a n d   " )   +   " ) ] " ;              } ,              ' n t h - c h i l d ' :             f u n c t i o n ( m )   {                  r e t u r n   S e l e c t o r . x p a t h . p s e u d o s . n t h ( " ( c o u n t ( . / p r e c e d i n g - s i b l i n g : : * )   +   1 )   " ,   m ) ;              } ,              ' n t h - l a s t - c h i l d ' :   f u n c t i o n ( m )   {                  r e t u r n   S e l e c t o r . x p a t h . p s e u d o s . n t h ( " ( c o u n t ( . / f o l l o w i n g - s i b l i n g : : * )   +   1 )   " ,   m ) ;              } ,              ' n t h - o f - t y p e ' :         f u n c t i o n ( m )   {                  r e t u r n   S e l e c t o r . x p a t h . p s e u d o s . n t h ( " p o s i t i o n ( )   " ,   m ) ;              } ,              ' n t h - l a s t - o f - t y p e ' :   f u n c t i o n ( m )   {                  r e t u r n   S e l e c t o r . x p a t h . p s e u d o s . n t h ( " ( l a s t ( )   +   1   -   p o s i t i o n ( ) )   " ,   m ) ;              } ,              ' f i r s t - o f - t y p e ' :     f u n c t i o n ( m )   {                  m [ 6 ]   =   " 1 " ;   r e t u r n   S e l e c t o r . x p a t h . p s e u d o s [ ' n t h - o f - t y p e ' ] ( m ) ;              } ,              ' l a s t - o f - t y p e ' :       f u n c t i o n ( m )   {                  m [ 6 ]   =   " 1 " ;   r e t u r n   S e l e c t o r . x p a t h . p s e u d o s [ ' n t h - l a s t - o f - t y p e ' ] ( m ) ;              } ,              ' o n l y - o f - t y p e ' :       f u n c t i o n ( m )   {                  v a r   p   =   S e l e c t o r . x p a t h . p s e u d o s ;   r e t u r n   p [ ' f i r s t - o f - t y p e ' ] ( m )   +   p [ ' l a s t - o f - t y p e ' ] ( m ) ;              } ,              n t h :   f u n c t i o n ( f r a g m e n t ,   m )   {                  v a r   m m ,   f o r m u l a   =   m [ 6 ] ,   p r e d i c a t e ;                  i f   ( f o r m u l a   = =   ' e v e n ' )   f o r m u l a   =   ' 2 n + 0 ' ;                  i f   ( f o r m u l a   = =   ' o d d ' )     f o r m u l a   =   ' 2 n + 1 ' ;                  i f   ( m m   =   f o r m u l a . m a t c h ( / ^ ( \ d + ) $ / ) )   / /   d i g i t   o n l y                      r e t u r n   ' [ '   +   f r a g m e n t   +   " =   "   +   m m [ 1 ]   +   ' ] ' ;                  i f   ( m m   =   f o r m u l a . m a t c h ( / ^ ( - ? \ d * ) ? n ( ( [ + - ] ) ( \ d + ) ) ? / ) )   {   / /   a n + b                      i f   ( m m [ 1 ]   = =   " - " )   m m [ 1 ]   =   - 1 ;                      v a r   a   =   m m [ 1 ]   ?   N u m b e r ( m m [ 1 ] )   :   1 ;                      v a r   b   =   m m [ 2 ]   ?   N u m b e r ( m m [ 2 ] )   :   0 ;                      p r e d i c a t e   =   " [ ( ( # { f r a g m e n t }   -   # { b } )   m o d   # { a }   =   0 )   a n d   "   +                      " ( ( # { f r a g m e n t }   -   # { b } )   d i v   # { a }   > =   0 ) ] " ;                      r e t u r n   n e w   T e m p l a t e ( p r e d i c a t e ) . e v a l u a t e ( {                          f r a g m e n t :   f r a g m e n t ,   a :   a ,   b :   b   } ) ;                  }              }          }      } ,       c r i t e r i a :   {          t a g N a m e :             ' n   =   h . t a g N a m e ( n ,   r ,   " # { 1 } " ,   c ) ;             c   =   f a l s e ; ' ,          c l a s s N a m e :         ' n   =   h . c l a s s N a m e ( n ,   r ,   " # { 1 } " ,   c ) ;         c   =   f a l s e ; ' ,          i d :                       ' n   =   h . i d ( n ,   r ,   " # { 1 } " ,   c ) ;                       c   =   f a l s e ; ' ,          a t t r P r e s e n c e :   ' n   =   h . a t t r P r e s e n c e ( n ,   r ,   " # { 1 } " ,   c ) ;   c   =   f a l s e ; ' ,          a t t r :   f u n c t i o n ( m )   {              m [ 3 ]   =   ( m [ 5 ]   | |   m [ 6 ] ) ;              r e t u r n   n e w   T e m p l a t e ( ' n   =   h . a t t r ( n ,   r ,   " # { 1 } " ,   " # { 3 } " ,   " # { 2 } " ,   c ) ;   c   =   f a l s e ; ' ) . e v a l u a t e ( m ) ;          } ,          p s e u d o :   f u n c t i o n ( m )   {              i f   ( m [ 6 ] )   m [ 6 ]   =   m [ 6 ] . r e p l a c e ( / " / g ,   ' \ \ " ' ) ;              r e t u r n   n e w   T e m p l a t e ( ' n   =   h . p s e u d o ( n ,   " # { 1 } " ,   " # { 6 } " ,   r ,   c ) ;   c   =   f a l s e ; ' ) . e v a l u a t e ( m ) ;          } ,          d e s c e n d a n t :       ' c   =   " d e s c e n d a n t " ; ' ,          c h i l d :                 ' c   =   " c h i l d " ; ' ,          a d j a c e n t :           ' c   =   " a d j a c e n t " ; ' ,          l a t e r S i b l i n g :   ' c   =   " l a t e r S i b l i n g " ; '      } ,       p a t t e r n s :   {          / /   c o m b i n a t o r s   m u s t   b e   l i s t e d   f i r s t          / /   ( a n d   d e s c e n d a n t   n e e d s   t o   b e   l a s t   c o m b i n a t o r )          l a t e r S i b l i n g :   / ^ \ s * ~ \ s * / ,          c h i l d :                 / ^ \ s * > \ s * / ,          a d j a c e n t :           / ^ \ s * \ + \ s * / ,          d e s c e n d a n t :       / ^ \ s / ,           / /   s e l e c t o r s   f o l l o w          t a g N a m e :             / ^ \ s * ( \ * | [ \ w \ - ] + ) ( \ b | $ ) ? / ,          i d :                       / ^ # ( [ \ w \ - \ * ] + ) ( \ b | $ ) / ,          c l a s s N a m e :         / ^ \ . ( [ \ w \ - \ * ] + ) ( \ b | $ ) / ,          p s e u d o :  / ^ : ( ( f i r s t | l a s t | n t h | n t h - l a s t | o n l y ) ( - c h i l d | - o f - t y p e ) | e m p t y | c h e c k e d | ( e n | d i s ) a b l e d | n o t ) ( \ ( ( . * ? ) \ ) ) ? ( \ b | $ | ( ? = \ s | [ : + ~ > ] ) ) / ,          a t t r P r e s e n c e :   / ^ \ [ ( [ \ w ] + ) \ ] / ,          a t t r :                   / \ [ ( ( ? : [ \ w - ] * : ) ? [ \ w - ] + ) \ s * ( ? : ( [ ! ^ $ * ~ | ] ? = ) \ s * ( ( [ ' " ] ) ( [ ^ \ 4 ] * ? ) \ 4 | ( [ ^ ' " ] [ ^ \ ] ] * ? ) ) ) ? \ ] /      } ,       / /   f o r   S e l e c t o r . m a t c h   a n d   E l e m e n t # m a t c h      a s s e r t i o n s :   {          t a g N a m e :   f u n c t i o n ( e l e m e n t ,   m a t c h e s )   {              r e t u r n   m a t c h e s [ 1 ] . t o U p p e r C a s e ( )   = =   e l e m e n t . t a g N a m e . t o U p p e r C a s e ( ) ;          } ,           c l a s s N a m e :   f u n c t i o n ( e l e m e n t ,   m a t c h e s )   {              r e t u r n   E l e m e n t . h a s C l a s s N a m e ( e l e m e n t ,   m a t c h e s [ 1 ] ) ;          } ,           i d :   f u n c t i o n ( e l e m e n t ,   m a t c h e s )   {              r e t u r n   e l e m e n t . i d   = = =   m a t c h e s [ 1 ] ;          } ,           a t t r P r e s e n c e :   f u n c t i o n ( e l e m e n t ,   m a t c h e s )   {              r e t u r n   E l e m e n t . h a s A t t r i b u t e ( e l e m e n t ,   m a t c h e s [ 1 ] ) ;          } ,           a t t r :   f u n c t i o n ( e l e m e n t ,   m a t c h e s )   {              v a r   n o d e V a l u e   =   E l e m e n t . r e a d A t t r i b u t e ( e l e m e n t ,   m a t c h e s [ 1 ] ) ;              r e t u r n   n o d e V a l u e   & &   S e l e c t o r . o p e r a t o r s [ m a t c h e s [ 2 ] ] ( n o d e V a l u e ,   m a t c h e s [ 5 ]   | |   m a t c h e s [ 6 ] ) ;          }      } ,       h a n d l e r s :   {          / /   U T I L I T Y   F U N C T I O N S          / /   j o i n s   t w o   c o l l e c t i o n s          c o n c a t :   f u n c t i o n ( a ,   b )   {              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   b [ i ] ;   i + + )                  a . p u s h ( n o d e ) ;              r e t u r n   a ;          } ,           / /   m a r k s   a n   a r r a y   o f   n o d e s   f o r   c o u n t i n g          m a r k :   f u n c t i o n ( n o d e s )   {              v a r   _ t r u e   =   P r o t o t y p e . e m p t y F u n c t i o n ;              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  n o d e . _ c o u n t e d B y P r o t o t y p e   =   _ t r u e ;              r e t u r n   n o d e s ;          } ,           u n m a r k :   f u n c t i o n ( n o d e s )   {              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  n o d e . _ c o u n t e d B y P r o t o t y p e   =   u n d e f i n e d ;              r e t u r n   n o d e s ;          } ,           / /   m a r k   e a c h   c h i l d   n o d e   w i t h   i t s   p o s i t i o n   ( f o r   n t h   c a l l s )          / /   " o f T y p e "   f l a g   i n d i c a t e s   w h e t h e r   w e ' r e   i n d e x i n g   f o r   n t h - o f - t y p e          / /   r a t h e r   t h a n   n t h - c h i l d          i n d e x :   f u n c t i o n ( p a r e n t N o d e ,   r e v e r s e ,   o f T y p e )   {              p a r e n t N o d e . _ c o u n t e d B y P r o t o t y p e   =   P r o t o t y p e . e m p t y F u n c t i o n ;              i f   ( r e v e r s e )   {                  f o r   ( v a r   n o d e s   =   p a r e n t N o d e . c h i l d N o d e s ,   i   =   n o d e s . l e n g t h   -   1 ,   j   =   1 ;   i   > =   0 ;   i - - )   {                      v a r   n o d e   =   n o d e s [ i ] ;                      i f   ( n o d e . n o d e T y p e   = =   1   & &   ( ! o f T y p e   | |   n o d e . _ c o u n t e d B y P r o t o t y p e ) )   n o d e . n o d e I n d e x   =   j + + ;                  }              }   e l s e   {                  f o r   ( v a r   i   =   0 ,   j   =   1 ,   n o d e s   =   p a r e n t N o d e . c h i l d N o d e s ;   n o d e   =   n o d e s [ i ] ;   i + + )                      i f   ( n o d e . n o d e T y p e   = =   1   & &   ( ! o f T y p e   | |   n o d e . _ c o u n t e d B y P r o t o t y p e ) )   n o d e . n o d e I n d e x   =   j + + ;              }          } ,           / /   f i l t e r s   o u t   d u p l i c a t e s   a n d   e x t e n d s   a l l   n o d e s          u n i q u e :   f u n c t i o n ( n o d e s )   {              i f   ( n o d e s . l e n g t h   = =   0 )   r e t u r n   n o d e s ;              v a r   r e s u l t s   =   [ ] ,   n ;              f o r   ( v a r   i   =   0 ,   l   =   n o d e s . l e n g t h ;   i   <   l ;   i + + )                  i f   ( ! ( n   =   n o d e s [ i ] ) . _ c o u n t e d B y P r o t o t y p e )   {                      n . _ c o u n t e d B y P r o t o t y p e   =   P r o t o t y p e . e m p t y F u n c t i o n ;                      r e s u l t s . p u s h ( E l e m e n t . e x t e n d ( n ) ) ;                  }              r e t u r n   S e l e c t o r . h a n d l e r s . u n m a r k ( r e s u l t s ) ;          } ,           / /   C O M B I N A T O R   F U N C T I O N S          d e s c e n d a n t :   f u n c t i o n ( n o d e s )   {              v a r   h   =   S e l e c t o r . h a n d l e r s ;              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  h . c o n c a t ( r e s u l t s ,   n o d e . g e t E l e m e n t s B y T a g N a m e ( ' * ' ) ) ;              r e t u r n   r e s u l t s ;          } ,           c h i l d :   f u n c t i o n ( n o d e s )   {              v a r   h   =   S e l e c t o r . h a n d l e r s ;              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  f o r   ( v a r   j   =   0 ,   c h i l d ;   c h i l d   =   n o d e . c h i l d N o d e s [ j ] ;   j + + )                      i f   ( c h i l d . n o d e T y p e   = =   1   & &   c h i l d . t a g N a m e   ! =   ' ! ' )   r e s u l t s . p u s h ( c h i l d ) ;              }              r e t u r n   r e s u l t s ;          } ,           a d j a c e n t :   f u n c t i o n ( n o d e s )   {              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  v a r   n e x t   =   t h i s . n e x t E l e m e n t S i b l i n g ( n o d e ) ;                  i f   ( n e x t )   r e s u l t s . p u s h ( n e x t ) ;              }              r e t u r n   r e s u l t s ;          } ,           l a t e r S i b l i n g :   f u n c t i o n ( n o d e s )   {              v a r   h   =   S e l e c t o r . h a n d l e r s ;              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  h . c o n c a t ( r e s u l t s ,   E l e m e n t . n e x t S i b l i n g s ( n o d e ) ) ;              r e t u r n   r e s u l t s ;          } ,           n e x t E l e m e n t S i b l i n g :   f u n c t i o n ( n o d e )   {              w h i l e   ( n o d e   =   n o d e . n e x t S i b l i n g )  	             i f   ( n o d e . n o d e T y p e   = =   1 )   r e t u r n   n o d e ;              r e t u r n   n u l l ;          } ,           p r e v i o u s E l e m e n t S i b l i n g :   f u n c t i o n ( n o d e )   {              w h i l e   ( n o d e   =   n o d e . p r e v i o u s S i b l i n g )                  i f   ( n o d e . n o d e T y p e   = =   1 )   r e t u r n   n o d e ;              r e t u r n   n u l l ;          } ,           / /   T O K E N   F U N C T I O N S          t a g N a m e :   f u n c t i o n ( n o d e s ,   r o o t ,   t a g N a m e ,   c o m b i n a t o r )   {              v a r   u T a g N a m e   =   t a g N a m e . t o U p p e r C a s e ( ) ;              v a r   r e s u l t s   =   [ ] ,   h   =   S e l e c t o r . h a n d l e r s ;              i f   ( n o d e s )   {                  i f   ( c o m b i n a t o r )   {                      / /   f a s t l a n e   f o r   o r d i n a r y   d e s c e n d a n t   c o m b i n a t o r s                      i f   ( c o m b i n a t o r   = =   " d e s c e n d a n t " )   {                          f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                              h . c o n c a t ( r e s u l t s ,   n o d e . g e t E l e m e n t s B y T a g N a m e ( t a g N a m e ) ) ;                          r e t u r n   r e s u l t s ;                      }   e l s e   n o d e s   =   t h i s [ c o m b i n a t o r ] ( n o d e s ) ;                      i f   ( t a g N a m e   = =   " * " )   r e t u r n   n o d e s ;                  }                  f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                      i f   ( n o d e . t a g N a m e . t o U p p e r C a s e ( )   = = =   u T a g N a m e )   r e s u l t s . p u s h ( n o d e ) ;                  r e t u r n   r e s u l t s ;              }   e l s e   r e t u r n   r o o t . g e t E l e m e n t s B y T a g N a m e ( t a g N a m e ) ;          } ,           i d :   f u n c t i o n ( n o d e s ,   r o o t ,   i d ,   c o m b i n a t o r )   {              v a r   t a r g e t N o d e   =   $ ( i d ) ,   h   =   S e l e c t o r . h a n d l e r s ;              i f   ( ! t a r g e t N o d e )   r e t u r n   [ ] ;              i f   ( ! n o d e s   & &   r o o t   = =   d o c u m e n t )   r e t u r n   [ t a r g e t N o d e ] ;              i f   ( n o d e s )   {                  i f   ( c o m b i n a t o r )   {                      i f   ( c o m b i n a t o r   = =   ' c h i l d ' )   {                          f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                              i f   ( t a r g e t N o d e . p a r e n t N o d e   = =   n o d e )   r e t u r n   [ t a r g e t N o d e ] ;                      }   e l s e   i f   ( c o m b i n a t o r   = =   ' d e s c e n d a n t ' )   {                          f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                              i f   ( E l e m e n t . d e s c e n d a n t O f ( t a r g e t N o d e ,   n o d e ) )   r e t u r n   [ t a r g e t N o d e ] ;                      }   e l s e   i f   ( c o m b i n a t o r   = =   ' a d j a c e n t ' )   {                          f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                              i f   ( S e l e c t o r . h a n d l e r s . p r e v i o u s E l e m e n t S i b l i n g ( t a r g e t N o d e )   = =   n o d e )                                  r e t u r n   [ t a r g e t N o d e ] ;                      }   e l s e   n o d e s   =   h [ c o m b i n a t o r ] ( n o d e s ) ;                  }                  f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                      i f   ( n o d e   = =   t a r g e t N o d e )   r e t u r n   [ t a r g e t N o d e ] ;                  r e t u r n   [ ] ;              }              r e t u r n   ( t a r g e t N o d e   & &   E l e m e n t . d e s c e n d a n t O f ( t a r g e t N o d e ,   r o o t ) )   ?   [ t a r g e t N o d e ]   :   [ ] ;          } ,           c l a s s N a m e :   f u n c t i o n ( n o d e s ,   r o o t ,   c l a s s N a m e ,   c o m b i n a t o r )   {              i f   ( n o d e s   & &   c o m b i n a t o r )   n o d e s   =   t h i s [ c o m b i n a t o r ] ( n o d e s ) ;              r e t u r n   S e l e c t o r . h a n d l e r s . b y C l a s s N a m e ( n o d e s ,   r o o t ,   c l a s s N a m e ) ;          } ,           b y C l a s s N a m e :   f u n c t i o n ( n o d e s ,   r o o t ,   c l a s s N a m e )   {              i f   ( ! n o d e s )   n o d e s   =   S e l e c t o r . h a n d l e r s . d e s c e n d a n t ( [ r o o t ] ) ;              v a r   n e e d l e   =   '   '   +   c l a s s N a m e   +   '   ' ;              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ,   n o d e C l a s s N a m e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  n o d e C l a s s N a m e   =   n o d e . c l a s s N a m e ;                  i f   ( n o d e C l a s s N a m e . l e n g t h   = =   0 )   c o n t i n u e ;                  i f   ( n o d e C l a s s N a m e   = =   c l a s s N a m e   | |   ( '   '   +   n o d e C l a s s N a m e   +   '   ' ) . i n c l u d e ( n e e d l e ) )                      r e s u l t s . p u s h ( n o d e ) ;              }              r e t u r n   r e s u l t s ;          } ,           a t t r P r e s e n c e :   f u n c t i o n ( n o d e s ,   r o o t ,   a t t r ,   c o m b i n a t o r )   {              i f   ( ! n o d e s )   n o d e s   =   r o o t . g e t E l e m e n t s B y T a g N a m e ( " * " ) ;              i f   ( n o d e s   & &   c o m b i n a t o r )   n o d e s   =   t h i s [ c o m b i n a t o r ] ( n o d e s ) ;              v a r   r e s u l t s   =   [ ] ;              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  i f   ( E l e m e n t . h a s A t t r i b u t e ( n o d e ,   a t t r ) )   r e s u l t s . p u s h ( n o d e ) ;              r e t u r n   r e s u l t s ;          } ,           a t t r :   f u n c t i o n ( n o d e s ,   r o o t ,   a t t r ,   v a l u e ,   o p e r a t o r ,   c o m b i n a t o r )   {              i f   ( ! n o d e s )   n o d e s   =   r o o t . g e t E l e m e n t s B y T a g N a m e ( " * " ) ;              i f   ( n o d e s   & &   c o m b i n a t o r )   n o d e s   =   t h i s [ c o m b i n a t o r ] ( n o d e s ) ;              v a r   h a n d l e r   =   S e l e c t o r . o p e r a t o r s [ o p e r a t o r ] ,   r e s u l t s   =   [ ] ;              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  v a r   n o d e V a l u e   =   E l e m e n t . r e a d A t t r i b u t e ( n o d e ,   a t t r ) ;                  i f   ( n o d e V a l u e   = = =   n u l l )   c o n t i n u e ;                  i f   ( h a n d l e r ( n o d e V a l u e ,   v a l u e ) )   r e s u l t s . p u s h ( n o d e ) ;              }              r e t u r n   r e s u l t s ;          } ,           p s e u d o :   f u n c t i o n ( n o d e s ,   n a m e ,   v a l u e ,   r o o t ,   c o m b i n a t o r )   {              i f   ( n o d e s   & &   c o m b i n a t o r )   n o d e s   =   t h i s [ c o m b i n a t o r ] ( n o d e s ) ;              i f   ( ! n o d e s )   n o d e s   =   r o o t . g e t E l e m e n t s B y T a g N a m e ( " * " ) ;              r e t u r n   S e l e c t o r . p s e u d o s [ n a m e ] ( n o d e s ,   v a l u e ,   r o o t ) ;          }      } ,       p s e u d o s :   {          ' f i r s t - c h i l d ' :   f u n c t i o n ( n o d e s ,   v a l u e ,   r o o t )   {              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  i f   ( S e l e c t o r . h a n d l e r s . p r e v i o u s E l e m e n t S i b l i n g ( n o d e ) )   c o n t i n u e ;                      r e s u l t s . p u s h ( n o d e ) ;              }              r e t u r n   r e s u l t s ;          } ,          ' l a s t - c h i l d ' :   f u n c t i o n ( n o d e s ,   v a l u e ,   r o o t )   {              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  i f   ( S e l e c t o r . h a n d l e r s . n e x t E l e m e n t S i b l i n g ( n o d e ) )   c o n t i n u e ;                      r e s u l t s . p u s h ( n o d e ) ;              }              r e t u r n   r e s u l t s ;          } ,          ' o n l y - c h i l d ' :   f u n c t i o n ( n o d e s ,   v a l u e ,   r o o t )   {              v a r   h   =   S e l e c t o r . h a n d l e r s ;              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  i f   ( ! h . p r e v i o u s E l e m e n t S i b l i n g ( n o d e )   & &   ! h . n e x t E l e m e n t S i b l i n g ( n o d e ) )                      r e s u l t s . p u s h ( n o d e ) ;              r e t u r n   r e s u l t s ;          } ,          ' n t h - c h i l d ' :                 f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t )   {              r e t u r n   S e l e c t o r . p s e u d o s . n t h ( n o d e s ,   f o r m u l a ,   r o o t ) ;          } ,          ' n t h - l a s t - c h i l d ' :       f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t )   {              r e t u r n   S e l e c t o r . p s e u d o s . n t h ( n o d e s ,   f o r m u l a ,   r o o t ,   t r u e ) ;          } ,          ' n t h - o f - t y p e ' :             f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t )   {              r e t u r n   S e l e c t o r . p s e u d o s . n t h ( n o d e s ,   f o r m u l a ,   r o o t ,   f a l s e ,   t r u e ) ;          } ,          ' n t h - l a s t - o f - t y p e ' :   f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t )   {              r e t u r n   S e l e c t o r . p s e u d o s . n t h ( n o d e s ,   f o r m u l a ,   r o o t ,   t r u e ,   t r u e ) ;          } ,          ' f i r s t - o f - t y p e ' :         f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t )   {              r e t u r n   S e l e c t o r . p s e u d o s . n t h ( n o d e s ,   " 1 " ,   r o o t ,   f a l s e ,   t r u e ) ;          } ,          ' l a s t - o f - t y p e ' :           f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t )   {              r e t u r n   S e l e c t o r . p s e u d o s . n t h ( n o d e s ,   " 1 " ,   r o o t ,   t r u e ,   t r u e ) ;          } ,          ' o n l y - o f - t y p e ' :           f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t )   {              v a r   p   =   S e l e c t o r . p s e u d o s ;              r e t u r n   p [ ' l a s t - o f - t y p e ' ] ( p [ ' f i r s t - o f - t y p e ' ] ( n o d e s ,   f o r m u l a ,   r o o t ) ,   f o r m u l a ,   r o o t ) ;          } ,           / /   h a n d l e s   t h e   a n + b   l o g i c          g e t I n d i c e s :   f u n c t i o n ( a ,   b ,   t o t a l )   {              i f   ( a   = =   0 )   r e t u r n   b   >   0   ?   [ b ]   :   [ ] ;              r e t u r n   $ R ( 1 ,   t o t a l ) . i n j e c t ( [ ] ,   f u n c t i o n ( m e m o ,   i )   {                  i f   ( 0   = =   ( i   -   b )   %   a   & &   ( i   -   b )   /   a   > =   0 )   m e m o . p u s h ( i ) ;                  r e t u r n   m e m o ;              } ) ;          } ,           / /   h a n d l e s   n t h ( - l a s t ) - c h i l d ,   n t h ( - l a s t ) - o f - t y p e ,   a n d   ( f i r s t | l a s t ) - o f - t y p e          n t h :   f u n c t i o n ( n o d e s ,   f o r m u l a ,   r o o t ,   r e v e r s e ,   o f T y p e )   {              i f   ( n o d e s . l e n g t h   = =   0 )   r e t u r n   [ ] ;              i f   ( f o r m u l a   = =   ' e v e n ' )   f o r m u l a   =   ' 2 n + 0 ' ;              i f   ( f o r m u l a   = =   ' o d d ' )     f o r m u l a   =   ' 2 n + 1 ' ;              v a r   h   =   S e l e c t o r . h a n d l e r s ,   r e s u l t s   =   [ ] ,   i n d e x e d   =   [ ] ,   m ;              h . m a r k ( n o d e s ) ;              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  i f   ( ! n o d e . p a r e n t N o d e . _ c o u n t e d B y P r o t o t y p e )   {                      h . i n d e x ( n o d e . p a r e n t N o d e ,   r e v e r s e ,   o f T y p e ) ;                      i n d e x e d . p u s h ( n o d e . p a r e n t N o d e ) ;                  }              }              i f   ( f o r m u l a . m a t c h ( / ^ \ d + $ / ) )   {   / /   j u s t   a   n u m b e r                  f o r m u l a   =   N u m b e r ( f o r m u l a ) ;                  f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                      i f   ( n o d e . n o d e I n d e x   = =   f o r m u l a )   r e s u l t s . p u s h ( n o d e ) ;              }   e l s e   i f   ( m   =   f o r m u l a . m a t c h ( / ^ ( - ? \ d * ) ? n ( ( [ + - ] ) ( \ d + ) ) ? / ) )   {   / /   a n + b                  i f   ( m [ 1 ]   = =   " - " )   m [ 1 ]   =   - 1 ;                  v a r   a   =   m [ 1 ]   ?   N u m b e r ( m [ 1 ] )   :   1 ;                  v a r   b   =   m [ 2 ]   ?   N u m b e r ( m [ 2 ] )   :   0 ;                  v a r   i n d i c e s   =   S e l e c t o r . p s e u d o s . g e t I n d i c e s ( a ,   b ,   n o d e s . l e n g t h ) ;                  f o r   ( v a r   i   =   0 ,   n o d e ,   l   =   i n d i c e s . l e n g t h ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                      f o r   ( v a r   j   =   0 ;   j   <   l ;   j + + )                          i f   ( n o d e . n o d e I n d e x   = =   i n d i c e s [ j ] )   r e s u l t s . p u s h ( n o d e ) ;                  }              }              h . u n m a r k ( n o d e s ) ;              h . u n m a r k ( i n d e x e d ) ;              r e t u r n   r e s u l t s ;          } ,           ' e m p t y ' :   f u n c t i o n ( n o d e s ,   v a l u e ,   r o o t )   {              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )   {                  / /   I E   t r e a t s   c o m m e n t s   a s   e l e m e n t   n o d e s                  i f   ( n o d e . t a g N a m e   = =   ' ! '   | |   ( n o d e . f i r s t C h i l d   & &   ! n o d e . i n n e r H T M L . m a t c h ( / ^ \ s * $ / ) ) )   c o n t i n u e ;                  r e s u l t s . p u s h ( n o d e ) ;              }              r e t u r n   r e s u l t s ;          } ,           ' n o t ' :   f u n c t i o n ( n o d e s ,   s e l e c t o r ,   r o o t )   {              v a r   h   =   S e l e c t o r . h a n d l e r s ,   s e l e c t o r T y p e ,   m ;              v a r   e x c l u s i o n s   =   n e w   S e l e c t o r ( s e l e c t o r ) . f i n d E l e m e n t s ( r o o t ) ;              h . m a r k ( e x c l u s i o n s ) ;              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  i f   ( ! n o d e . _ c o u n t e d B y P r o t o t y p e )   r e s u l t s . p u s h ( n o d e ) ;              h . u n m a r k ( e x c l u s i o n s ) ;              r e t u r n   r e s u l t s ;          } ,           ' e n a b l e d ' :   f u n c t i o n ( n o d e s ,   v a l u e ,   r o o t )   {              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  i f   ( ! n o d e . d i s a b l e d )   r e s u l t s . p u s h ( n o d e ) ;              r e t u r n   r e s u l t s ;          } ,           ' d i s a b l e d ' :   f u n c t i o n ( n o d e s ,   v a l u e ,   r o o t )   {              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  i f   ( n o d e . d i s a b l e d )   r e s u l t s . p u s h ( n o d e ) ;              r e t u r n   r e s u l t s ;          } ,           ' c h e c k e d ' :   f u n c t i o n ( n o d e s ,   v a l u e ,   r o o t )   {              f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  i f   ( n o d e . c h e c k e d )   r e s u l t s . p u s h ( n o d e ) ;              r e t u r n   r e s u l t s ;          }      } ,       o p e r a t o r s :   {          ' = ' :     f u n c t i o n ( n v ,   v )   {   r e t u r n   n v   = =   v ;   } ,          ' ! = ' :   f u n c t i o n ( n v ,   v )   {   r e t u r n   n v   ! =   v ;   } ,          ' ^ = ' :   f u n c t i o n ( n v ,   v )   {   r e t u r n   n v . s t a r t s W i t h ( v ) ;   } ,          ' $ = ' :   f u n c t i o n ( n v ,   v )   {   r e t u r n   n v . e n d s W i t h ( v ) ;   } ,          ' * = ' :   f u n c t i o n ( n v ,   v )   {   r e t u r n   n v . i n c l u d e ( v ) ;   } ,          ' ~ = ' :   f u n c t i o n ( n v ,   v )   {   r e t u r n   ( '   '   +   n v   +   '   ' ) . i n c l u d e ( '   '   +   v   +   '   ' ) ;   } ,          ' | = ' :   f u n c t i o n ( n v ,   v )   {   r e t u r n   ( ' - '   +   n v . t o U p p e r C a s e ( )   +   ' - ' ) . i n c l u d e ( ' - '   +   v . t o U p p e r C a s e ( )   +   ' - ' ) ;   }      } ,       s p l i t :   f u n c t i o n ( e x p r e s s i o n )   {          v a r   e x p r e s s i o n s   =   [ ] ;          e x p r e s s i o n . s c a n ( / ( ( [ \ w # : . ~ > + ( ) \ s - ] + | \ * | \ [ . * ? \ ] ) + ) \ s * ( , | $ ) / ,   f u n c t i o n ( m )   {              e x p r e s s i o n s . p u s h ( m [ 1 ] . s t r i p ( ) ) ;          } ) ;          r e t u r n   e x p r e s s i o n s ;      } ,       m a t c h E l e m e n t s :   f u n c t i o n ( e l e m e n t s ,   e x p r e s s i o n )   {          v a r   m a t c h e s   =   $ $ ( e x p r e s s i o n ) ,   h   =   S e l e c t o r . h a n d l e r s ;          h . m a r k ( m a t c h e s ) ;          f o r   ( v a r   i   =   0 ,   r e s u l t s   =   [ ] ,   e l e m e n t ;   e l e m e n t   =   e l e m e n t s [ i ] ;   i + + )              i f   ( e l e m e n t . _ c o u n t e d B y P r o t o t y p e )   r e s u l t s . p u s h ( e l e m e n t ) ;          h . u n m a r k ( m a t c h e s ) ;          r e t u r n   r e s u l t s ;      } ,       f i n d E l e m e n t :   f u n c t i o n ( e l e m e n t s ,   e x p r e s s i o n ,   i n d e x )   {          i f   ( O b j e c t . i s N u m b e r ( e x p r e s s i o n ) )   {              i n d e x   =   e x p r e s s i o n ;   e x p r e s s i o n   =   f a l s e ;          }          r e t u r n   S e l e c t o r . m a t c h E l e m e n t s ( e l e m e n t s ,   e x p r e s s i o n   | |   ' * ' ) [ i n d e x   | |   0 ] ;      } ,       f i n d C h i l d E l e m e n t s :   f u n c t i o n ( e l e m e n t ,   e x p r e s s i o n s )   {          e x p r e s s i o n s   =   S e l e c t o r . s p l i t ( e x p r e s s i o n s . j o i n ( ' , ' ) ) ;          v a r   r e s u l t s   =   [ ] ,   h   =   S e l e c t o r . h a n d l e r s ;          f o r   ( v a r   i   =   0 ,   l   =   e x p r e s s i o n s . l e n g t h ,   s e l e c t o r ;   i   <   l ;   i + + )   {              s e l e c t o r   =   n e w   S e l e c t o r ( e x p r e s s i o n s [ i ] . s t r i p ( ) ) ;              h . c o n c a t ( r e s u l t s ,   s e l e c t o r . f i n d E l e m e n t s ( e l e m e n t ) ) ;          }          r e t u r n   ( l   >   1 )   ?   h . u n i q u e ( r e s u l t s )   :   r e s u l t s ;      }  } ) ;   i f   ( P r o t o t y p e . B r o w s e r . I E )   {      O b j e c t . e x t e n d ( S e l e c t o r . h a n d l e r s ,   {          / /   I E   r e t u r n s   c o m m e n t   n o d e s   o n   g e t E l e m e n t s B y T a g N a m e ( " * " ) .          / /   F i l t e r   t h e m   o u t .          c o n c a t :   f u n c t i o n ( a ,   b )   {              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   b [ i ] ;   i + + )                  i f   ( n o d e . t a g N a m e   ! = =   " ! " )   a . p u s h ( n o d e ) ;              r e t u r n   a ;          } ,           / /   I E   i m p r o p e r l y   s e r i a l i z e s   _ c o u n t e d B y P r o t o t y p e   i n   ( i n n e r | o u t e r ) H T M L .          u n m a r k :   f u n c t i o n ( n o d e s )   {              f o r   ( v a r   i   =   0 ,   n o d e ;   n o d e   =   n o d e s [ i ] ;   i + + )                  n o d e . r e m o v e A t t r i b u t e ( ' _ c o u n t e d B y P r o t o t y p e ' ) ;              r e t u r n   n o d e s ;          }      } ) ;  }   f u n c t i o n   $ $ ( )   {      r e t u r n   S e l e c t o r . f i n d C h i l d E l e m e n t s ( d o c u m e n t ,   $ A ( a r g u m e n t s ) ) ;  }  v a r   F o r m   =   {      r e s e t :   f u n c t i o n ( f o r m )   {          $ ( f o r m ) . r e s e t ( ) ;          r e t u r n   f o r m ;      } ,       s e r i a l i z e E l e m e n t s :   f u n c t i o n ( e l e m e n t s ,   o p t i o n s )   {          i f   ( t y p e o f   o p t i o n s   ! =   ' o b j e c t ' )   o p t i o n s   =   {   h a s h :   ! ! o p t i o n s   } ;          e l s e   i f   ( O b j e c t . i s U n d e f i n e d ( o p t i o n s . h a s h ) )   o p t i o n s . h a s h   =   t r u e ;          v a r   k e y ,   v a l u e ,   s u b m i t t e d   =   f a l s e ,   s u b m i t   =   o p t i o n s . s u b m i t ;           v a r   d a t a   =   e l e m e n t s . i n j e c t ( {   } ,   f u n c t i o n ( r e s u l t ,   e l e m e n t )   {              i f   ( ! e l e m e n t . d i s a b l e d   & &   e l e m e n t . n a m e )   {                  k e y   =   e l e m e n t . n a m e ;   v a l u e   =   $ ( e l e m e n t ) . g e t V a l u e ( ) ;                  i f   ( v a l u e   ! =   n u l l   & &   ( e l e m e n t . t y p e   ! =   ' s u b m i t '   | |   ( ! s u b m i t t e d   & &                          s u b m i t   ! = =   f a l s e   & &   ( ! s u b m i t   | |   k e y   = =   s u b m i t )   & &   ( s u b m i t t e d   =   t r u e ) ) ) )   {                      i f   ( k e y   i n   r e s u l t )   {                          / /   a   k e y   i s   a l r e a d y   p r e s e n t ;   c o n s t r u c t   a n   a r r a y   o f   v a l u e s                          i f   ( ! O b j e c t . i s A r r a y ( r e s u l t [ k e y ] ) )   r e s u l t [ k e y ]   =   [ r e s u l t [ k e y ] ] ;                          r e s u l t [ k e y ] . p u s h ( v a l u e ) ;                      }                      e l s e   r e s u l t [ k e y ]   =   v a l u e ;                  }              }              r e t u r n   r e s u l t ;          } ) ;           r e t u r n   o p t i o n s . h a s h   ?   d a t a   :   O b j e c t . t o Q u e r y S t r i n g ( d a t a ) ;      }  } ;   F o r m . M e t h o d s   =   {      s e r i a l i z e :   f u n c t i o n ( f o r m ,   o p t i o n s )   {          r e t u r n   F o r m . s e r i a l i z e E l e m e n t s ( F o r m . g e t E l e m e n t s ( f o r m ) ,   o p t i o n s ) ;      } ,       g e t E l e m e n t s :   f u n c t i o n ( f o r m )   {          r e t u r n   $ A ( $ ( f o r m ) . g e t E l e m e n t s B y T a g N a m e ( ' * ' ) ) . i n j e c t ( [ ] ,              f u n c t i o n ( e l e m e n t s ,   c h i l d )   {                  i f   ( F o r m . E l e m e n t . S e r i a l i z e r s [ c h i l d . t a g N a m e . t o L o w e r C a s e ( ) ] )                      e l e m e n t s . p u s h ( E l e m e n t . e x t e n d ( c h i l d ) ) ;                  r e t u r n   e l e m e n t s ;              }          ) ;      } ,       g e t I n p u t s :   f u n c t i o n ( f o r m ,   t y p e N a m e ,   n a m e )   {          f o r m   =   $ ( f o r m ) ;          v a r   i n p u t s   =   f o r m . g e t E l e m e n t s B y T a g N a m e ( ' i n p u t ' ) ;           i f   ( ! t y p e N a m e   & &   ! n a m e )   r e t u r n   $ A ( i n p u t s ) . m a p ( E l e m e n t . e x t e n d ) ;           f o r   ( v a r   i   =   0 ,   m a t c h i n g I n p u t s   =   [ ] ,   l e n g t h   =   i n p u t s . l e n g t h ;   i   <   l e n g t h ;   i + + )   {              v a r   i n p u t   =   i n p u t s [ i ] ;              i f   ( ( t y p e N a m e   & &   i n p u t . t y p e   ! =   t y p e N a m e )   | |   ( n a m e   & &   i n p u t . n a m e   ! =   n a m e ) )                  c o n t i n u e ;              m a t c h i n g I n p u t s . p u s h ( E l e m e n t . e x t e n d ( i n p u t ) ) ;          }           r e t u r n   m a t c h i n g I n p u t s ;      } ,       d i s a b l e :   f u n c t i o n ( f o r m )   {          f o r m   =   $ ( f o r m ) ;          F o r m . g e t E l e m e n t s ( f o r m ) . i n v o k e ( ' d i s a b l e ' ) ;          r e t u r n   f o r m ;      } ,       e n a b l e :   f u n c t i o n ( f o r m )   {          f o r m   =   $ ( f o r m ) ;          F o r m . g e t E l e m e n t s ( f o r m ) . i n v o k e ( ' e n a b l e ' ) ;          r e t u r n   f o r m ;      } ,       f i n d F i r s t E l e m e n t :   f u n c t i o n ( f o r m )   {          v a r   e l e m e n t s   =   $ ( f o r m ) . g e t E l e m e n t s ( ) . f i n d A l l ( f u n c t i o n ( e l e m e n t )   {              r e t u r n   ' h i d d e n '   ! =   e l e m e n t . t y p e   & &   ! e l e m e n t . d i s a b l e d ;          } ) ;          v a r   f i r s t B y I n d e x   =   e l e m e n t s . f i n d A l l ( f u n c t i o n ( e l e m e n t )   {              r e t u r n   e l e m e n t . h a s A t t r i b u t e ( ' t a b I n d e x ' )   & &   e l e m e n t . t a b I n d e x   > =   0 ;          } ) . s o r t B y ( f u n c t i o n ( e l e m e n t )   {   r e t u r n   e l e m e n t . t a b I n d e x   } ) . f i r s t ( ) ;           r e t u r n   f i r s t B y I n d e x   ?   f i r s t B y I n d e x   :   e l e m e n t s . f i n d ( f u n c t i o n ( e l e m e n t )   {              r e t u r n   [ ' i n p u t ' ,   ' s e l e c t ' ,   ' t e x t a r e a ' ] . i n c l u d e ( e l e m e n t . t a g N a m e . t o L o w e r C a s e ( ) ) ;          } ) ;      } ,       f o c u s F i r s t E l e m e n t :   f u n c t i o n ( f o r m )   {          f o r m   =   $ ( f o r m ) ;          f o r m . f i n d F i r s t E l e m e n t ( ) . a c t i v a t e ( ) ;          r e t u r n   f o r m ;      } ,       r e q u e s t :   f u n c t i o n ( f o r m ,   o p t i o n s )   {          f o r m   =   $ ( f o r m ) ,   o p t i o n s   =   O b j e c t . c l o n e ( o p t i o n s   | |   {   } ) ;           v a r   p a r a m s   =   o p t i o n s . p a r a m e t e r s ,   a c t i o n   =   f o r m . r e a d A t t r i b u t e ( ' a c t i o n ' )   | |   ' ' ;          i f   ( a c t i o n . b l a n k ( ) )   a c t i o n   =   w i n d o w . l o c a t i o n . h r e f ;          o p t i o n s . p a r a m e t e r s   =   f o r m . s e r i a l i z e ( t r u e ) ;           i f   ( p a r a m s )   {              i f   ( O b j e c t . i s S t r i n g ( p a r a m s ) )   p a r a m s   =   p a r a m s . t o Q u e r y P a r a m s ( ) ;              O b j e c t . e x t e n d ( o p t i o n s . p a r a m e t e r s ,   p a r a m s ) ;          }           i f   ( f o r m . h a s A t t r i b u t e ( ' m e t h o d ' )   & &   ! o p t i o n s . m e t h o d )              o p t i o n s . m e t h o d   =   f o r m . m e t h o d ;           r e t u r n   n e w   A j a x . R e q u e s t ( a c t i o n ,   o p t i o n s ) ;      }  } ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   F o r m . E l e m e n t   =   {      f o c u s :   f u n c t i o n ( e l e m e n t )   {          $ ( e l e m e n t ) . f o c u s ( ) ;          r e t u r n   e l e m e n t ;      } ,       s e l e c t :   f u n c t i o n ( e l e m e n t )   {          $ ( e l e m e n t ) . s e l e c t ( ) ;          r e t u r n   e l e m e n t ;      }  } ;   F o r m . E l e m e n t . M e t h o d s   =   {      s e r i a l i z e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          i f   ( ! e l e m e n t . d i s a b l e d   & &   e l e m e n t . n a m e )   {              v a r   v a l u e   =   e l e m e n t . g e t V a l u e ( ) ;              i f   ( v a l u e   ! =   u n d e f i n e d )   {                  v a r   p a i r   =   {   } ;                  p a i r [ e l e m e n t . n a m e ]   =   v a l u e ;                  r e t u r n   O b j e c t . t o Q u e r y S t r i n g ( p a i r ) ;              }          }          r e t u r n   ' ' ;      } ,       g e t V a l u e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   m e t h o d   =   e l e m e n t . t a g N a m e . t o L o w e r C a s e ( ) ;          r e t u r n   F o r m . E l e m e n t . S e r i a l i z e r s [ m e t h o d ] ( e l e m e n t ) ;      } ,       s e t V a l u e :   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          v a r   m e t h o d   =   e l e m e n t . t a g N a m e . t o L o w e r C a s e ( ) ;          F o r m . E l e m e n t . S e r i a l i z e r s [ m e t h o d ] ( e l e m e n t ,   v a l u e ) ;          r e t u r n   e l e m e n t ;      } ,       c l e a r :   f u n c t i o n ( e l e m e n t )   {          $ ( e l e m e n t ) . v a l u e   =   ' ' ;          r e t u r n   e l e m e n t ;      } ,       p r e s e n t :   f u n c t i o n ( e l e m e n t )   {          r e t u r n   $ ( e l e m e n t ) . v a l u e   ! =   ' ' ;      } ,       a c t i v a t e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          t r y   {              e l e m e n t . f o c u s ( ) ;              i f   ( e l e m e n t . s e l e c t   & &   ( e l e m e n t . t a g N a m e . t o L o w e r C a s e ( )   ! =   ' i n p u t '   | |                      ! [ ' b u t t o n ' ,   ' r e s e t ' ,   ' s u b m i t ' ] . i n c l u d e ( e l e m e n t . t y p e ) ) )                  e l e m e n t . s e l e c t ( ) ;          }   c a t c h   ( e )   {   }          r e t u r n   e l e m e n t ;      } ,       d i s a b l e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          e l e m e n t . b l u r ( ) ;          e l e m e n t . d i s a b l e d   =   t r u e ;          r e t u r n   e l e m e n t ;      } ,       e n a b l e :   f u n c t i o n ( e l e m e n t )   {          e l e m e n t   =   $ ( e l e m e n t ) ;          e l e m e n t . d i s a b l e d   =   f a l s e ;          r e t u r n   e l e m e n t ;      }  } ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   v a r   F i e l d   =   F o r m . E l e m e n t ;  v a r   $ F   =   F o r m . E l e m e n t . M e t h o d s . g e t V a l u e ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   F o r m . E l e m e n t . S e r i a l i z e r s   =   {      i n p u t :   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          s w i t c h   ( e l e m e n t . t y p e . t o L o w e r C a s e ( ) )   {              c a s e   ' c h e c k b o x ' :              c a s e   ' r a d i o ' :                  r e t u r n   F o r m . E l e m e n t . S e r i a l i z e r s . i n p u t S e l e c t o r ( e l e m e n t ,   v a l u e ) ;              d e f a u l t :                  r e t u r n   F o r m . E l e m e n t . S e r i a l i z e r s . t e x t a r e a ( e l e m e n t ,   v a l u e ) ;          }      } ,       i n p u t S e l e c t o r :   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          i f   ( O b j e c t . i s U n d e f i n e d ( v a l u e ) )   r e t u r n   e l e m e n t . c h e c k e d   ?   e l e m e n t . v a l u e   :   n u l l ;          e l s e   e l e m e n t . c h e c k e d   =   ! ! v a l u e ;      } ,       t e x t a r e a :   f u n c t i o n ( e l e m e n t ,   v a l u e )   {          i f   ( O b j e c t . i s U n d e f i n e d ( v a l u e ) )   r e t u r n   e l e m e n t . v a l u e ;          e l s e   e l e m e n t . v a l u e   =   v a l u e ;      } ,       s e l e c t :   f u n c t i o n ( e l e m e n t ,   i n d e x )   {          i f   ( O b j e c t . i s U n d e f i n e d ( i n d e x ) )              r e t u r n   t h i s [ e l e m e n t . t y p e   = =   ' s e l e c t - o n e '   ?                  ' s e l e c t O n e '   :   ' s e l e c t M a n y ' ] ( e l e m e n t ) ;          e l s e   {              v a r   o p t ,   v a l u e ,   s i n g l e   =   ! O b j e c t . i s A r r a y ( i n d e x ) ;              f o r   ( v a r   i   =   0 ,   l e n g t h   =   e l e m e n t . l e n g t h ;   i   <   l e n g t h ;   i + + )   {                  o p t   =   e l e m e n t . o p t i o n s [ i ] ;                  v a l u e   =   t h i s . o p t i o n V a l u e ( o p t ) ;                  i f   ( s i n g l e )   {                      i f   ( v a l u e   = =   i n d e x )   {                          o p t . s e l e c t e d   =   t r u e ;                          r e t u r n ;                      }                  }                  e l s e   o p t . s e l e c t e d   =   i n d e x . i n c l u d e ( v a l u e ) ;              }          }      } ,       s e l e c t O n e :   f u n c t i o n ( e l e m e n t )   {          v a r   i n d e x   =   e l e m e n t . s e l e c t e d I n d e x ;          r e t u r n   i n d e x   > =   0   ?   t h i s . o p t i o n V a l u e ( e l e m e n t . o p t i o n s [ i n d e x ] )   :   n u l l ;      } ,       s e l e c t M a n y :   f u n c t i o n ( e l e m e n t )   {          v a r   v a l u e s ,   l e n g t h   =   e l e m e n t . l e n g t h ;          i f   ( ! l e n g t h )   r e t u r n   n u l l ;           f o r   ( v a r   i   =   0 ,   v a l u e s   =   [ ] ;   i   <   l e n g t h ;   i + + )   {              v a r   o p t   =   e l e m e n t . o p t i o n s [ i ] ;              i f   ( o p t . s e l e c t e d )   v a l u e s . p u s h ( t h i s . o p t i o n V a l u e ( o p t ) ) ;          }          r e t u r n   v a l u e s ;      } ,       o p t i o n V a l u e :   f u n c t i o n ( o p t )   {          / /   e x t e n d   e l e m e n t   b e c a u s e   h a s A t t r i b u t e   m a y   n o t   b e   n a t i v e          r e t u r n   E l e m e n t . e x t e n d ( o p t ) . h a s A t t r i b u t e ( ' v a l u e ' )   ?   o p t . v a l u e   :   o p t . t e x t ;      }  } ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   A b s t r a c t . T i m e d O b s e r v e r   =   C l a s s . c r e a t e ( P e r i o d i c a l E x e c u t e r ,   {      i n i t i a l i z e :   f u n c t i o n ( $ s u p e r ,   e l e m e n t ,   f r e q u e n c y ,   c a l l b a c k )   {          $ s u p e r ( c a l l b a c k ,   f r e q u e n c y ) ;          t h i s . e l e m e n t       =   $ ( e l e m e n t ) ;          t h i s . l a s t V a l u e   =   t h i s . g e t V a l u e ( ) ;      } ,       e x e c u t e :   f u n c t i o n ( )   {          v a r   v a l u e   =   t h i s . g e t V a l u e ( ) ;          i f   ( O b j e c t . i s S t r i n g ( t h i s . l a s t V a l u e )   & &   O b j e c t . i s S t r i n g ( v a l u e )   ?                  t h i s . l a s t V a l u e   ! =   v a l u e   :   S t r i n g ( t h i s . l a s t V a l u e )   ! =   S t r i n g ( v a l u e ) )   {              t h i s . c a l l b a c k ( t h i s . e l e m e n t ,   v a l u e ) ;              t h i s . l a s t V a l u e   =   v a l u e ;          }      }  } ) ;   F o r m . E l e m e n t . O b s e r v e r   =   C l a s s . c r e a t e ( A b s t r a c t . T i m e d O b s e r v e r ,   {      g e t V a l u e :   f u n c t i o n ( )   {          r e t u r n   F o r m . E l e m e n t . g e t V a l u e ( t h i s . e l e m e n t ) ;      }  } ) ;   F o r m . O b s e r v e r   =   C l a s s . c r e a t e ( A b s t r a c t . T i m e d O b s e r v e r ,   {      g e t V a l u e :   f u n c t i o n ( )   {          r e t u r n   F o r m . s e r i a l i z e ( t h i s . e l e m e n t ) ;      }  } ) ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   A b s t r a c t . E v e n t O b s e r v e r   =   C l a s s . c r e a t e ( {      i n i t i a l i z e :   f u n c t i o n ( e l e m e n t ,   c a l l b a c k )   {          t h i s . e l e m e n t     =   $ ( e l e m e n t ) ;          t h i s . c a l l b a c k   =   c a l l b a c k ;           t h i s . l a s t V a l u e   =   t h i s . g e t V a l u e ( ) ;          i f   ( t h i s . e l e m e n t . t a g N a m e . t o L o w e r C a s e ( )   = =   ' f o r m ' )              t h i s . r e g i s t e r F o r m C a l l b a c k s ( ) ;          e l s e              t h i s . r e g i s t e r C a l l b a c k ( t h i s . e l e m e n t ) ;      } ,       o n E l e m e n t E v e n t :   f u n c t i o n ( )   {          v a r   v a l u e   =   t h i s . g e t V a l u e ( ) ;          i f   ( t h i s . l a s t V a l u e   ! =   v a l u e )   {              t h i s . c a l l b a c k ( t h i s . e l e m e n t ,   v a l u e ) ;              t h i s . l a s t V a l u e   =   v a l u e ;          }      } ,       r e g i s t e r F o r m C a l l b a c k s :   f u n c t i o n ( )   {          F o r m . g e t E l e m e n t s ( t h i s . e l e m e n t ) . e a c h ( t h i s . r e g i s t e r C a l l b a c k ,   t h i s ) ;      } ,       r e g i s t e r C a l l b a c k :   f u n c t i o n ( e l e m e n t )   {          i f   ( e l e m e n t . t y p e )   {              s w i t c h   ( e l e m e n t . t y p e . t o L o w e r C a s e ( ) )   {                  c a s e   ' c h e c k b o x ' :                  c a s e   ' r a d i o ' :                      E v e n t . o b s e r v e ( e l e m e n t ,   ' c l i c k ' ,   t h i s . o n E l e m e n t E v e n t . b i n d ( t h i s ) ) ;                      b r e a k ;                  d e f a u l t :                      E v e n t . o b s e r v e ( e l e m e n t ,   ' c h a n g e ' ,   t h i s . o n E l e m e n t E v e n t . b i n d ( t h i s ) ) ;                      b r e a k ;              }          }      }  } ) ;   F o r m . E l e m e n t . E v e n t O b s e r v e r   =   C l a s s . c r e a t e ( A b s t r a c t . E v e n t O b s e r v e r ,   {      g e t V a l u e :   f u n c t i o n ( )   {          r e t u r n   F o r m . E l e m e n t . g e t V a l u e ( t h i s . e l e m e n t ) ;      }  } ) ;   F o r m . E v e n t O b s e r v e r   =   C l a s s . c r e a t e ( A b s t r a c t . E v e n t O b s e r v e r ,   {      g e t V a l u e :   f u n c t i o n ( )   {          r e t u r n   F o r m . s e r i a l i z e ( t h i s . e l e m e n t ) ;      }  } ) ;  i f   ( ! w i n d o w . E v e n t )   v a r   E v e n t   =   {   } ;   O b j e c t . e x t e n d ( E v e n t ,   {      K E Y _ B A C K S P A C E :   8 ,      K E Y _ T A B :               9 ,      K E Y _ R E T U R N :       1 3 ,      K E Y _ E S C :             2 7 ,      K E Y _ L E F T :           3 7 ,      K E Y _ U P :               3 8 ,      K E Y _ R I G H T :         3 9 ,      K E Y _ D O W N :           4 0 ,      K E Y _ D E L E T E :       4 6 ,      K E Y _ H O M E :           3 6 ,      K E Y _ E N D :             3 5 ,      K E Y _ P A G E U P :       3 3 ,      K E Y _ P A G E D O W N :   3 4 ,      K E Y _ I N S E R T :       4 5 ,       c a c h e :   {   } ,       r e l a t e d T a r g e t :   f u n c t i o n ( e v e n t )   {          v a r   e l e m e n t ;          s w i t c h ( e v e n t . t y p e )   {              c a s e   ' m o u s e o v e r ' :   e l e m e n t   =   e v e n t . f r o m E l e m e n t ;   b r e a k ;              c a s e   ' m o u s e o u t ' :     e l e m e n t   =   e v e n t . t o E l e m e n t ;       b r e a k ;              d e f a u l t :   r e t u r n   n u l l ;          }          r e t u r n   E l e m e n t . e x t e n d ( e l e m e n t ) ;      }  } ) ;   E v e n t . M e t h o d s   =   ( f u n c t i o n ( )   {      v a r   i s B u t t o n ;       i f   ( P r o t o t y p e . B r o w s e r . I E )   {          v a r   b u t t o n M a p   =   {   0 :   1 ,   1 :   4 ,   2 :   2   } ;          i s B u t t o n   =   f u n c t i o n ( e v e n t ,   c o d e )   {              r e t u r n   e v e n t . b u t t o n   = =   b u t t o n M a p [ c o d e ] ;          } ;       }   e l s e   i f   ( P r o t o t y p e . B r o w s e r . W e b K i t )   {          i s B u t t o n   =   f u n c t i o n ( e v e n t ,   c o d e )   {              s w i t c h   ( c o d e )   {                  c a s e   0 :   r e t u r n   e v e n t . w h i c h   = =   1   & &   ! e v e n t . m e t a K e y ;                  c a s e   1 :   r e t u r n   e v e n t . w h i c h   = =   1   & &   e v e n t . m e t a K e y ;                  d e f a u l t :   r e t u r n   f a l s e ;              }          } ;       }   e l s e   {          i s B u t t o n   =   f u n c t i o n ( e v e n t ,   c o d e )   {              r e t u r n   e v e n t . w h i c h   ?   ( e v e n t . w h i c h   = = =   c o d e   +   1 )   :   ( e v e n t . b u t t o n   = = =   c o d e ) ;          } ;      }       r e t u r n   {          i s L e f t C l i c k :       f u n c t i o n ( e v e n t )   {   r e t u r n   i s B u t t o n ( e v e n t ,   0 )   } ,          i s M i d d l e C l i c k :   f u n c t i o n ( e v e n t )   {   r e t u r n   i s B u t t o n ( e v e n t ,   1 )   } ,          i s R i g h t C l i c k :     f u n c t i o n ( e v e n t )   {   r e t u r n   i s B u t t o n ( e v e n t ,   2 )   } ,           e l e m e n t :   f u n c t i o n ( e v e n t )   {              v a r   n o d e   =   E v e n t . e x t e n d ( e v e n t ) . t a r g e t ;              r e t u r n   E l e m e n t . e x t e n d ( n o d e . n o d e T y p e   = =   N o d e . T E X T _ N O D E   ?   n o d e . p a r e n t N o d e   :   n o d e ) ;          } ,           f i n d E l e m e n t :   f u n c t i o n ( e v e n t ,   e x p r e s s i o n )   {              v a r   e l e m e n t   =   E v e n t . e l e m e n t ( e v e n t ) ;              i f   ( ! e x p r e s s i o n )   r e t u r n   e l e m e n t ;              v a r   e l e m e n t s   =   [ e l e m e n t ] . c o n c a t ( e l e m e n t . a n c e s t o r s ( ) ) ;              r e t u r n   S e l e c t o r . f i n d E l e m e n t ( e l e m e n t s ,   e x p r e s s i o n ,   0 ) ;          } ,           p o i n t e r :   f u n c t i o n ( e v e n t )   {              r e t u r n   {                  x :   e v e n t . p a g e X   | |   ( e v e n t . c l i e n t X   +                      ( d o c u m e n t . d o c u m e n t E l e m e n t . s c r o l l L e f t   | |   d o c u m e n t . b o d y . s c r o l l L e f t ) ) ,                  y :   e v e n t . p a g e Y   | |   ( e v e n t . c l i e n t Y   +                      ( d o c u m e n t . d o c u m e n t E l e m e n t . s c r o l l T o p   | |   d o c u m e n t . b o d y . s c r o l l T o p ) )              } ;          } ,           p o i n t e r X :   f u n c t i o n ( e v e n t )   {   r e t u r n   E v e n t . p o i n t e r ( e v e n t ) . x   } ,          p o i n t e r Y :   f u n c t i o n ( e v e n t )   {   r e t u r n   E v e n t . p o i n t e r ( e v e n t ) . y   } ,           s t o p :   f u n c t i o n ( e v e n t )   {              E v e n t . e x t e n d ( e v e n t ) ;              e v e n t . p r e v e n t D e f a u l t ( ) ;              e v e n t . s t o p P r o p a g a t i o n ( ) ;              e v e n t . s t o p p e d   =   t r u e ;          }      } ;  } ) ( ) ;   E v e n t . e x t e n d   =   ( f u n c t i o n ( )   {      v a r   m e t h o d s   =   O b j e c t . k e y s ( E v e n t . M e t h o d s ) . i n j e c t ( {   } ,   f u n c t i o n ( m ,   n a m e )   {          m [ n a m e ]   =   E v e n t . M e t h o d s [ n a m e ] . m e t h o d i z e ( ) ;          r e t u r n   m ;      } ) ;       i f   ( P r o t o t y p e . B r o w s e r . I E )   {          O b j e c t . e x t e n d ( m e t h o d s ,   {              s t o p P r o p a g a t i o n :   f u n c t i o n ( )   {   t h i s . c a n c e l B u b b l e   =   t r u e   } ,              p r e v e n t D e f a u l t :     f u n c t i o n ( )   {   t h i s . r e t u r n V a l u e   =   f a l s e   } ,              i n s p e c t :   f u n c t i o n ( )   {   r e t u r n   " [ o b j e c t   E v e n t ] "   }          } ) ;           r e t u r n   f u n c t i o n ( e v e n t )   {              i f   ( ! e v e n t )   r e t u r n   f a l s e ;              i f   ( e v e n t . _ e x t e n d e d B y P r o t o t y p e )   r e t u r n   e v e n t ;               e v e n t . _ e x t e n d e d B y P r o t o t y p e   =   P r o t o t y p e . e m p t y F u n c t i o n ;              v a r   p o i n t e r   =   E v e n t . p o i n t e r ( e v e n t ) ;              O b j e c t . e x t e n d ( e v e n t ,   {                  t a r g e t :   e v e n t . s r c E l e m e n t ,                  r e l a t e d T a r g e t :   E v e n t . r e l a t e d T a r g e t ( e v e n t ) ,                  p a g e X :     p o i n t e r . x ,                  p a g e Y :     p o i n t e r . y              } ) ;              r e t u r n   O b j e c t . e x t e n d ( e v e n t ,   m e t h o d s ) ;          } ;       }   e l s e   {          E v e n t . p r o t o t y p e   =   E v e n t . p r o t o t y p e   | |   d o c u m e n t . c r e a t e E v e n t ( " H T M L E v e n t s " ) . _ _ p r o t o _ _ ;          O b j e c t . e x t e n d ( E v e n t . p r o t o t y p e ,   m e t h o d s ) ;          r e t u r n   P r o t o t y p e . K ;      }  } ) ( ) ;   O b j e c t . e x t e n d ( E v e n t ,   ( f u n c t i o n ( )   {      v a r   c a c h e   =   E v e n t . c a c h e ;       f u n c t i o n   g e t E v e n t I D ( e l e m e n t )   {          i f   ( e l e m e n t . _ p r o t o t y p e E v e n t I D )   r e t u r n   e l e m e n t . _ p r o t o t y p e E v e n t I D [ 0 ] ;          a r g u m e n t s . c a l l e e . i d   =   a r g u m e n t s . c a l l e e . i d   | |   1 ;          r e t u r n   e l e m e n t . _ p r o t o t y p e E v e n t I D   =   [ + + a r g u m e n t s . c a l l e e . i d ] ;      }       f u n c t i o n   g e t D O M E v e n t N a m e ( e v e n t N a m e )   {          i f   ( e v e n t N a m e   & &   e v e n t N a m e . i n c l u d e ( ' : ' ) )   r e t u r n   " d a t a a v a i l a b l e " ;          r e t u r n   e v e n t N a m e ;      }       f u n c t i o n   g e t C a c h e F o r I D ( i d )   {          r e t u r n   c a c h e [ i d ]   =   c a c h e [ i d ]   | |   {   } ;      }       f u n c t i o n   g e t W r a p p e r s F o r E v e n t N a m e ( i d ,   e v e n t N a m e )   {          v a r   c   =   g e t C a c h e F o r I D ( i d ) ;          r e t u r n   c [ e v e n t N a m e ]   =   c [ e v e n t N a m e ]   | |   [ ] ;      }       f u n c t i o n   c r e a t e W r a p p e r ( e l e m e n t ,   e v e n t N a m e ,   h a n d l e r )   {          v a r   i d   =   g e t E v e n t I D ( e l e m e n t ) ;          v a r   c   =   g e t W r a p p e r s F o r E v e n t N a m e ( i d ,   e v e n t N a m e ) ;          i f   ( c . p l u c k ( " h a n d l e r " ) . i n c l u d e ( h a n d l e r ) )   r e t u r n   f a l s e ;           v a r   w r a p p e r   =   f u n c t i o n ( e v e n t )   {              i f   ( ! E v e n t   | |   ! E v e n t . e x t e n d   | |                  ( e v e n t . e v e n t N a m e   & &   e v e n t . e v e n t N a m e   ! =   e v e n t N a m e ) )                      r e t u r n   f a l s e ;               E v e n t . e x t e n d ( e v e n t ) ;              h a n d l e r . c a l l ( e l e m e n t ,   e v e n t ) ;          } ;           w r a p p e r . h a n d l e r   =   h a n d l e r ;          c . p u s h ( w r a p p e r ) ;          r e t u r n   w r a p p e r ;      }       f u n c t i o n   f i n d W r a p p e r ( i d ,   e v e n t N a m e ,   h a n d l e r )   {          v a r   c   =   g e t W r a p p e r s F o r E v e n t N a m e ( i d ,   e v e n t N a m e ) ;          r e t u r n   c . f i n d ( f u n c t i o n ( w r a p p e r )   {   r e t u r n   w r a p p e r . h a n d l e r   = =   h a n d l e r   } ) ;      }       f u n c t i o n   d e s t r o y W r a p p e r ( i d ,   e v e n t N a m e ,   h a n d l e r )   {          v a r   c   =   g e t C a c h e F o r I D ( i d ) ;          i f   ( ! c [ e v e n t N a m e ] )   r e t u r n   f a l s e ;          c [ e v e n t N a m e ]   =   c [ e v e n t N a m e ] . w i t h o u t ( f i n d W r a p p e r ( i d ,   e v e n t N a m e ,   h a n d l e r ) ) ;      }       f u n c t i o n   d e s t r o y C a c h e ( )   {          f o r   ( v a r   i d   i n   c a c h e )              f o r   ( v a r   e v e n t N a m e   i n   c a c h e [ i d ] )                  c a c h e [ i d ] [ e v e n t N a m e ]   =   n u l l ;      }       i f   ( w i n d o w . a t t a c h E v e n t )   {          w i n d o w . a t t a c h E v e n t ( " o n u n l o a d " ,   d e s t r o y C a c h e ) ;      }       r e t u r n   {          o b s e r v e :   f u n c t i o n ( e l e m e n t ,   e v e n t N a m e ,   h a n d l e r )   {              e l e m e n t   =   $ ( e l e m e n t ) ;              v a r   n a m e   =   g e t D O M E v e n t N a m e ( e v e n t N a m e ) ;               v a r   w r a p p e r   =   c r e a t e W r a p p e r ( e l e m e n t ,   e v e n t N a m e ,   h a n d l e r ) ;              i f   ( ! w r a p p e r )   r e t u r n   e l e m e n t ;               i f   ( e l e m e n t . a d d E v e n t L i s t e n e r )   {                  e l e m e n t . a d d E v e n t L i s t e n e r ( n a m e ,   w r a p p e r ,   f a l s e ) ;              }   e l s e   {                  e l e m e n t . a t t a c h E v e n t ( " o n "   +   n a m e ,   w r a p p e r ) ;              }               r e t u r n   e l e m e n t ;          } ,           s t o p O b s e r v i n g :   f u n c t i o n ( e l e m e n t ,   e v e n t N a m e ,   h a n d l e r )   {              e l e m e n t   =   $ ( e l e m e n t ) ;              v a r   i d   =   g e t E v e n t I D ( e l e m e n t ) ,   n a m e   =   g e t D O M E v e n t N a m e ( e v e n t N a m e ) ;               i f   ( ! h a n d l e r   & &   e v e n t N a m e )   {                  g e t W r a p p e r s F o r E v e n t N a m e ( i d ,   e v e n t N a m e ) . e a c h ( f u n c t i o n ( w r a p p e r )   {                      e l e m e n t . s t o p O b s e r v i n g ( e v e n t N a m e ,   w r a p p e r . h a n d l e r ) ;                  } ) ;                  r e t u r n   e l e m e n t ;               }   e l s e   i f   ( ! e v e n t N a m e )   {                  O b j e c t . k e y s ( g e t C a c h e F o r I D ( i d ) ) . e a c h ( f u n c t i o n ( e v e n t N a m e )   {                      e l e m e n t . s t o p O b s e r v i n g ( e v e n t N a m e ) ;                  } ) ;                  r e t u r n   e l e m e n t ;              }               v a r   w r a p p e r   =   f i n d W r a p p e r ( i d ,   e v e n t N a m e ,   h a n d l e r ) ;              i f   ( ! w r a p p e r )   r e t u r n   e l e m e n t ;               i f   ( e l e m e n t . r e m o v e E v e n t L i s t e n e r )   {                  e l e m e n t . r e m o v e E v e n t L i s t e n e r ( n a m e ,   w r a p p e r ,   f a l s e ) ;              }   e l s e   {                  e l e m e n t . d e t a c h E v e n t ( " o n "   +   n a m e ,   w r a p p e r ) ;              }               d e s t r o y W r a p p e r ( i d ,   e v e n t N a m e ,   h a n d l e r ) ;               r e t u r n   e l e m e n t ;          } ,           f i r e :   f u n c t i o n ( e l e m e n t ,   e v e n t N a m e ,   m e m o )   {              e l e m e n t   =   $ ( e l e m e n t ) ;              i f   ( e l e m e n t   = =   d o c u m e n t   & &   d o c u m e n t . c r e a t e E v e n t   & &   ! e l e m e n t . d i s p a t c h E v e n t )                  e l e m e n t   =   d o c u m e n t . d o c u m e n t E l e m e n t ;               v a r   e v e n t ;              i f   ( d o c u m e n t . c r e a t e E v e n t )   {                  e v e n t   =   d o c u m e n t . c r e a t e E v e n t ( " H T M L E v e n t s " ) ;                  e v e n t . i n i t E v e n t ( " d a t a a v a i l a b l e " ,   t r u e ,   t r u e ) ;              }   e l s e   {                  e v e n t   =   d o c u m e n t . c r e a t e E v e n t O b j e c t ( ) ;                  e v e n t . e v e n t T y p e   =   " o n d a t a a v a i l a b l e " ;              }               e v e n t . e v e n t N a m e   =   e v e n t N a m e ;              e v e n t . m e m o   =   m e m o   | |   {   } ;               i f   ( d o c u m e n t . c r e a t e E v e n t )   {                  e l e m e n t . d i s p a t c h E v e n t ( e v e n t ) ;              }   e l s e   {                  e l e m e n t . f i r e E v e n t ( e v e n t . e v e n t T y p e ,   e v e n t ) ;              }               r e t u r n   E v e n t . e x t e n d ( e v e n t ) ;          }      } ;  } ) ( ) ) ;   O b j e c t . e x t e n d ( E v e n t ,   E v e n t . M e t h o d s ) ;   E l e m e n t . a d d M e t h o d s ( {      f i r e :                     E v e n t . f i r e ,      o b s e r v e :               E v e n t . o b s e r v e ,      s t o p O b s e r v i n g :   E v e n t . s t o p O b s e r v i n g  } ) ;   O b j e c t . e x t e n d ( d o c u m e n t ,   {      f i r e :                     E l e m e n t . M e t h o d s . f i r e . m e t h o d i z e ( ) ,      o b s e r v e :               E l e m e n t . M e t h o d s . o b s e r v e . m e t h o d i z e ( ) ,      s t o p O b s e r v i n g :   E l e m e n t . M e t h o d s . s t o p O b s e r v i n g . m e t h o d i z e ( ) ,      l o a d e d :                 f a l s e  } ) ;   ( f u n c t i o n ( )   {      / *   S u p p o r t   f o r   t h e   D O M C o n t e n t L o a d e d   e v e n t   i s   b a s e d   o n   w o r k   b y   D a n   W e b b ,            M a t t h i a s   M i l l e r ,   D e a n   E d w a r d s   a n d   J o h n   R e s i g .   * /       v a r   t i m e r ;       f u n c t i o n   f i r e C o n t e n t L o a d e d E v e n t ( )   {          i f   ( d o c u m e n t . l o a d e d )   r e t u r n ;          i f   ( t i m e r )   w i n d o w . c l e a r I n t e r v a l ( t i m e r ) ;          d o c u m e n t . f i r e ( " d o m : l o a d e d " ) ;          d o c u m e n t . l o a d e d   =   t r u e ;      }       i f   ( d o c u m e n t . a d d E v e n t L i s t e n e r )   {          i f   ( P r o t o t y p e . B r o w s e r . W e b K i t )   {              t i m e r   =   w i n d o w . s e t I n t e r v a l ( f u n c t i o n ( )   {                  i f   ( / l o a d e d | c o m p l e t e / . t e s t ( d o c u m e n t . r e a d y S t a t e ) )                      f i r e C o n t e n t L o a d e d E v e n t ( ) ;              } ,   0 ) ;               E v e n t . o b s e r v e ( w i n d o w ,   " l o a d " ,   f i r e C o n t e n t L o a d e d E v e n t ) ;           }   e l s e   {              d o c u m e n t . a d d E v e n t L i s t e n e r ( " D O M C o n t e n t L o a d e d " ,                  f i r e C o n t e n t L o a d e d E v e n t ,   f a l s e ) ;          }       }   e l s e   {          d o c u m e n t . w r i t e ( " < s c r i p t   i d = _ _ o n D O M C o n t e n t L o a d e d   d e f e r   s r c = / / : > < \ / s c r i p t > " ) ;          $ ( " _ _ o n D O M C o n t e n t L o a d e d " ) . o n r e a d y s t a t e c h a n g e   =   f u n c t i o n ( )   {              i f   ( t h i s . r e a d y S t a t e   = =   " c o m p l e t e " )   {                  t h i s . o n r e a d y s t a t e c h a n g e   =   n u l l ;                  f i r e C o n t e n t L o a d e d E v e n t ( ) ;              }          } ;      }  } ) ( ) ;  / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   D E P R E C A T E D   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   H a s h . t o Q u e r y S t r i n g   =   O b j e c t . t o Q u e r y S t r i n g ;   v a r   T o g g l e   =   {   d i s p l a y :   E l e m e n t . t o g g l e   } ;   E l e m e n t . M e t h o d s . c h i l d O f   =   E l e m e n t . M e t h o d s . d e s c e n d a n t O f ;   v a r   I n s e r t i o n   =   {      B e f o r e :   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          r e t u r n   E l e m e n t . i n s e r t ( e l e m e n t ,   { b e f o r e : c o n t e n t } ) ;      } ,       T o p :   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          r e t u r n   E l e m e n t . i n s e r t ( e l e m e n t ,   { t o p : c o n t e n t } ) ;      } ,       B o t t o m :   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          r e t u r n   E l e m e n t . i n s e r t ( e l e m e n t ,   { b o t t o m : c o n t e n t } ) ;      } ,       A f t e r :   f u n c t i o n ( e l e m e n t ,   c o n t e n t )   {          r e t u r n   E l e m e n t . i n s e r t ( e l e m e n t ,   { a f t e r : c o n t e n t } ) ;      }  } ;   v a r   $ c o n t i n u e   =   n e w   E r r o r ( ' " t h r o w   $ c o n t i n u e "   i s   d e p r e c a t e d ,   u s e   " r e t u r n "   i n s t e a d ' ) ;   / /   T h i s   s h o u l d   b e   m o v e d   t o   s c r i p t . a c u l o . u s ;   n o t i c e   t h e   d e p r e c a t e d   m e t h o d s  / /   f u r t h e r   b e l o w ,   t h a t   m a p   t o   t h e   n e w e r   E l e m e n t   m e t h o d s .  v a r   P o s i t i o n   =   {      / /   s e t   t o   t r u e   i f   n e e d e d ,   w a r n i n g :   f i r e f o x   p e r f o r m a n c e   p r o b l e m s      / /   N O T   n e e e d e d   f o r   p a g e   s c r o l l i n g ,   o n l y   i f   d r a g g a b l e   c o n t a i n e d   i n      / /   s c r o l l a b l e   e l e m e n t s      i n c l u d e S c r o l l O f f s e t s :   f a l s e ,       / /   m u s t   b e   c a l l e d   b e f o r e   c a l l i n g   w i t h i n I n c l u d i n g S c r o l l o f f s e t ,   e v e r y   t i m e   t h e      / /   p a g e   i s   s c r o l l e d      p r e p a r e :   f u n c t i o n ( )   {          t h i s . d e l t a X   =     w i n d o w . p a g e X O f f s e t                                  | |   d o c u m e n t . d o c u m e n t E l e m e n t . s c r o l l L e f t                                  | |   d o c u m e n t . b o d y . s c r o l l L e f t                                  | |   0 ;          t h i s . d e l t a Y   =     w i n d o w . p a g e Y O f f s e t                                  | |   d o c u m e n t . d o c u m e n t E l e m e n t . s c r o l l T o p                                  | |   d o c u m e n t . b o d y . s c r o l l T o p                                  | |   0 ;      } ,       / /   c a c h e s   x / y   c o o r d i n a t e   p a i r   t o   u s e   w i t h   o v e r l a p      w i t h i n :   f u n c t i o n ( e l e m e n t ,   x ,   y )   {          i f   ( t h i s . i n c l u d e S c r o l l O f f s e t s )              r e t u r n   t h i s . w i t h i n I n c l u d i n g S c r o l l o f f s e t s ( e l e m e n t ,   x ,   y ) ;          t h i s . x c o m p   =   x ;          t h i s . y c o m p   =   y ;          t h i s . o f f s e t   =   E l e m e n t . c u m u l a t i v e O f f s e t ( e l e m e n t ) ;           r e t u r n   ( y   > =   t h i s . o f f s e t [ 1 ]   & &                          y   <     t h i s . o f f s e t [ 1 ]   +   e l e m e n t . o f f s e t H e i g h t   & &                          x   > =   t h i s . o f f s e t [ 0 ]   & &                          x   <     t h i s . o f f s e t [ 0 ]   +   e l e m e n t . o f f s e t W i d t h ) ;      } ,       w i t h i n I n c l u d i n g S c r o l l o f f s e t s :   f u n c t i o n ( e l e m e n t ,   x ,   y )   {          v a r   o f f s e t c a c h e   =   E l e m e n t . c u m u l a t i v e S c r o l l O f f s e t ( e l e m e n t ) ;           t h i s . x c o m p   =   x   +   o f f s e t c a c h e [ 0 ]   -   t h i s . d e l t a X ;          t h i s . y c o m p   =   y   +   o f f s e t c a c h e [ 1 ]   -   t h i s . d e l t a Y ;          t h i s . o f f s e t   =   E l e m e n t . c u m u l a t i v e O f f s e t ( e l e m e n t ) ;           r e t u r n   ( t h i s . y c o m p   > =   t h i s . o f f s e t [ 1 ]   & &                          t h i s . y c o m p   <     t h i s . o f f s e t [ 1 ]   +   e l e m e n t . o f f s e t H e i g h t   & &                          t h i s . x c o m p   > =   t h i s . o f f s e t [ 0 ]   & &                          t h i s . x c o m p   <     t h i s . o f f s e t [ 0 ]   +   e l e m e n t . o f f s e t W i d t h ) ;      } ,       / /   w i t h i n   m u s t   b e   c a l l e d   d i r e c t l y   b e f o r e      o v e r l a p :   f u n c t i o n ( m o d e ,   e l e m e n t )   {          i f   ( ! m o d e )   r e t u r n   0 ;          i f   ( m o d e   = =   ' v e r t i c a l ' )              r e t u r n   ( ( t h i s . o f f s e t [ 1 ]   +   e l e m e n t . o f f s e t H e i g h t )   -   t h i s . y c o m p )   /                  e l e m e n t . o f f s e t H e i g h t ;          i f   ( m o d e   = =   ' h o r i z o n t a l ' )              r e t u r n   ( ( t h i s . o f f s e t [ 0 ]   +   e l e m e n t . o f f s e t W i d t h )   -   t h i s . x c o m p )   /                  e l e m e n t . o f f s e t W i d t h ;      } ,       / /   D e p r e c a t i o n   l a y e r   - -   u s e   n e w e r   E l e m e n t   m e t h o d s   n o w   ( 1 . 5 . 2 ) .       c u m u l a t i v e O f f s e t :   E l e m e n t . M e t h o d s . c u m u l a t i v e O f f s e t ,       p o s i t i o n e d O f f s e t :   E l e m e n t . M e t h o d s . p o s i t i o n e d O f f s e t ,       a b s o l u t i z e :   f u n c t i o n ( e l e m e n t )   {          P o s i t i o n . p r e p a r e ( ) ;          r e t u r n   E l e m e n t . a b s o l u t i z e ( e l e m e n t ) ;      } ,       r e l a t i v i z e :   f u n c t i o n ( e l e m e n t )   {          P o s i t i o n . p r e p a r e ( ) ;          r e t u r n   E l e m e n t . r e l a t i v i z e ( e l e m e n t ) ;      } ,       r e a l O f f s e t :   E l e m e n t . M e t h o d s . c u m u l a t i v e S c r o l l O f f s e t ,       o f f s e t P a r e n t :   E l e m e n t . M e t h o d s . g e t O f f s e t P a r e n t ,       p a g e :   E l e m e n t . M e t h o d s . v i e w p o r t O f f s e t ,       c l o n e :   f u n c t i o n ( s o u r c e ,   t a r g e t ,   o p t i o n s )   {          o p t i o n s   =   o p t i o n s   | |   {   } ;          r e t u r n   E l e m e n t . c l o n e P o s i t i o n ( t a r g e t ,   s o u r c e ,   o p t i o n s ) ;      }  } ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   i f   ( ! d o c u m e n t . g e t E l e m e n t s B y C l a s s N a m e )   d o c u m e n t . g e t E l e m e n t s B y C l a s s N a m e   =   f u n c t i o n ( i n s t a n c e M e t h o d s ) {      f u n c t i o n   i t e r ( n a m e )   {          r e t u r n   n a m e . b l a n k ( )   ?   n u l l   :   " [ c o n t a i n s ( c o n c a t ( '   ' ,   @ c l a s s ,   '   ' ) ,   '   "   +   n a m e   +   "   ' ) ] " ;      }       i n s t a n c e M e t h o d s . g e t E l e m e n t s B y C l a s s N a m e   =   P r o t o t y p e . B r o w s e r F e a t u r e s . X P a t h   ?      f u n c t i o n ( e l e m e n t ,   c l a s s N a m e )   {          c l a s s N a m e   =   c l a s s N a m e . t o S t r i n g ( ) . s t r i p ( ) ;          v a r   c o n d   =   / \ s / . t e s t ( c l a s s N a m e )   ?   $ w ( c l a s s N a m e ) . m a p ( i t e r ) . j o i n ( ' ' )   :   i t e r ( c l a s s N a m e ) ;          r e t u r n   c o n d   ?   d o c u m e n t . _ g e t E l e m e n t s B y X P a t h ( ' . / / * '   +   c o n d ,   e l e m e n t )   :   [ ] ;      }   :   f u n c t i o n ( e l e m e n t ,   c l a s s N a m e )   {          c l a s s N a m e   =   c l a s s N a m e . t o S t r i n g ( ) . s t r i p ( ) ;          v a r   e l e m e n t s   =   [ ] ,   c l a s s N a m e s   =   ( / \ s / . t e s t ( c l a s s N a m e )   ?   $ w ( c l a s s N a m e )   :   n u l l ) ;          i f   ( ! c l a s s N a m e s   & &   ! c l a s s N a m e )   r e t u r n   e l e m e n t s ;           v a r   n o d e s   =   $ ( e l e m e n t ) . g e t E l e m e n t s B y T a g N a m e ( ' * ' ) ;          c l a s s N a m e   =   '   '   +   c l a s s N a m e   +   '   ' ;           f o r   ( v a r   i   =   0 ,   c h i l d ,   c n ;   c h i l d   =   n o d e s [ i ] ;   i + + )   {              i f   ( c h i l d . c l a s s N a m e   & &   ( c n   =   '   '   +   c h i l d . c l a s s N a m e   +   '   ' )   & &   ( c n . i n c l u d e ( c l a s s N a m e )   | |                      ( c l a s s N a m e s   & &   c l a s s N a m e s . a l l ( f u n c t i o n ( n a m e )   {                          r e t u r n   ! n a m e . t o S t r i n g ( ) . b l a n k ( )   & &   c n . i n c l u d e ( '   '   +   n a m e   +   '   ' ) ;                      } ) ) ) )                  e l e m e n t s . p u s h ( E l e m e n t . e x t e n d ( c h i l d ) ) ;          }          r e t u r n   e l e m e n t s ;      } ;       r e t u r n   f u n c t i o n ( c l a s s N a m e ,   p a r e n t E l e m e n t )   {          r e t u r n   $ ( p a r e n t E l e m e n t   | |   d o c u m e n t . b o d y ) . g e t E l e m e n t s B y C l a s s N a m e ( c l a s s N a m e ) ;      } ;  } ( E l e m e n t . M e t h o d s ) ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   E l e m e n t . C l a s s N a m e s   =   C l a s s . c r e a t e ( ) ;  E l e m e n t . C l a s s N a m e s . p r o t o t y p e   =   {      i n i t i a l i z e :   f u n c t i o n ( e l e m e n t )   {          t h i s . e l e m e n t   =   $ ( e l e m e n t ) ;      } ,       _ e a c h :   f u n c t i o n ( i t e r a t o r )   {          t h i s . e l e m e n t . c l a s s N a m e . s p l i t ( / \ s + / ) . s e l e c t ( f u n c t i o n ( n a m e )   {              r e t u r n   n a m e . l e n g t h   >   0 ;          } ) . _ e a c h ( i t e r a t o r ) ;      } ,       s e t :   f u n c t i o n ( c l a s s N a m e )   {          t h i s . e l e m e n t . c l a s s N a m e   =   c l a s s N a m e ;      } ,       a d d :   f u n c t i o n ( c l a s s N a m e T o A d d )   {          i f   ( t h i s . i n c l u d e ( c l a s s N a m e T o A d d ) )   r e t u r n ;          t h i s . s e t ( $ A ( t h i s ) . c o n c a t ( c l a s s N a m e T o A d d ) . j o i n ( '   ' ) ) ;      } ,       r e m o v e :   f u n c t i o n ( c l a s s N a m e T o R e m o v e )   {          i f   ( ! t h i s . i n c l u d e ( c l a s s N a m e T o R e m o v e ) )   r e t u r n ;          t h i s . s e t ( $ A ( t h i s ) . w i t h o u t ( c l a s s N a m e T o R e m o v e ) . j o i n ( '   ' ) ) ;      } ,       t o S t r i n g :   f u n c t i o n ( )   {          r e t u r n   $ A ( t h i s ) . j o i n ( '   ' ) ;      }  } ;   O b j e c t . e x t e n d ( E l e m e n t . C l a s s N a m e s . p r o t o t y p e ,   E n u m e r a b l e ) ;   / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * /   E l e m e n t . a d d M e t h o d s ( ) ;  _7https://itunesconnect.apple.com/javascript/prototype.js‘EAFGO`bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_5https://itunesconnect.apple.com/javascript/effects.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫eçEï»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:16 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptU38986_Wed, 15 Jul 2009 18:30:32 GMT_"1fb3064-984a-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryòJ“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
FKT_bhqz|Éãñò£•ß©´≠Ø±≥µ∑¬ƒ∆» ÃŒ–“‘÷‰Ú˙+05@`néî≠»ŒÓ-:=BFZ             l              hOòJ// script.aculo.us effects.js v1.8.1, Thu Jan 03 22:07:12 -0500 2008

// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
// Contributors:
//  Justin Palmer (http://encytemedia.com/)
//  Mark Pilgrim (http://diveintomark.org/)
//  Martin Bialasinki
// 
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/ 

// converts rgb() and #xxx to #xxxxxx format,  
// returns self (or first argument) if not convertable  
String.prototype.parseColor = function() {  
  var color = '#';
  if (this.slice(0,4) == 'rgb(') {  
    var cols = this.slice(4,this.length-1).split(',');  
    var i=0; do { color += parseInt(cols[i]).toColorPart() } while (++i<3);  
  } else {  
    if (this.slice(0,1) == '#') {  
      if (this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();  
      if (this.length==7) color = this.toLowerCase();  
    }  
  }  
  return (color.length==7 ? color : (arguments[0] || this));  
};

/*--------------------------------------------------------------------------*/

Element.collectTextNodes = function(element) {  
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue : 
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));
  }).flatten().join('');
};

Element.collectTextNodesIgnoreClass = function(element, className) {  
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType==3 ? node.nodeValue : 
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ? 
        Element.collectTextNodesIgnoreClass(node, className) : ''));
  }).flatten().join('');
};

Element.setContentZoom = function(element, percent) {
  element = $(element);  
  element.setStyle({fontSize: (percent/100) + 'em'});   
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);
  return element;
};

Element.getInlineOpacity = function(element){
  return $(element).style.opacity || '';
};

Element.forceRerendering = function(element) {
  try {
    element = $(element);
    var n = document.createTextNode(' ');
    element.appendChild(n);
    element.removeChild(n);
  } catch(e) { }
};

/*--------------------------------------------------------------------------*/

var Effect = {
  _elementDoesNotExistError: {
    name: 'ElementDoesNotExistError',
    message: 'The specified DOM element does not exist, but is required for this effect to operate'
  },
  Transitions: {
    linear: Prototype.K,
    sinoidal: function(pos) {
      return (-Math.cos(pos*Math.PI)/2) + 0.5;
    },
    reverse: function(pos) {
      return 1-pos;
    },
    flicker: function(pos) {
      var pos = ((-Math.cos(pos*Math.PI)/4) + 0.75) + Math.random()/4;
      return pos > 1 ? 1 : pos;
    },
    wobble: function(pos) {
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + 0.5;
    },
    pulse: function(pos, pulses) { 
      pulses = pulses || 5; 
      return (
        ((pos % (1/pulses)) * pulses).round() == 0 ? 
              ((pos * pulses * 2) - (pos * pulses * 2).floor()) : 
          1 - ((pos * pulses * 2) - (pos * pulses * 2).floor())
        );
    },
    spring: function(pos) { 
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6)); 
    },
    none: function(pos) {
      return 0;
    },
    full: function(pos) {
      return 1;
    }
  },
  DefaultOptions: {
    duration:   1.0,   // seconds
    fps:        100,   // 100= assume 66fps max.
    sync:       false, // true for combining
    from:       0.0,
    to:         1.0,
    delay:      0.0,
    queue:      'parallel'
  },
  tagifyText: function(element) {
    var tagifyStyle = 'position:relative';
    if (Prototype.Browser.IE) tagifyStyle += ';zoom:1';
    
    element = $(element);
    $A(element.childNodes).each( function(child) {
      if (child.nodeType==3) {
        child.nodeValue.toArray().each( function(character) {
          element.insertBefore(
            new Element('span', {style: tagifyStyle}).update(
              character == ' ' ? String.fromCharCode(160) : character), 
              child);
        });
        Element.remove(child);
      }
    });
  },
  multiple: function(element, effect) {
    var elements;
    if (((typeof element == 'object') || 
        Object.isFunction(element)) && 
       (element.length))
      elements = element;
    else
      elements = $(element).childNodes;
      
    var options = Object.extend({
      speed: 0.1,
      delay: 0.0
    }, arguments[2] || { });
    var masterDelay = options.delay;

    $A(elements).each( function(element, index) {
      new effect(element, Object.extend(options, { delay: index * options.speed + masterDelay }));
    });
  },
  PAIRS: {
    'slide':  ['SlideDown','SlideUp'],
    'blind':  ['BlindDown','BlindUp'],
    'appear': ['Appear','Fade']
  },
  toggle: function(element, effect) {
    element = $(element);
    effect = (effect || 'appear').toLowerCase();
    var options = Object.extend({
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }
    }, arguments[2] || { });
    Effect[element.visible() ? 
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
  }
};

Effect.DefaultOptions.transition = Effect.Transitions.sinoidal;

/* ------------- core effects ------------- */

Effect.ScopedQueue = Class.create(Enumerable, {
  initialize: function() {
    this.effects  = [];
    this.interval = null;    
  },
  _each: function(iterator) {
    this.effects._each(iterator);
  },
  add: function(effect) {
    var timestamp = new Date().getTime();
    
    var position = Object.isString(effect.options.queue) ? 
      effect.options.queue : effect.options.queue.position;
    
    switch(position) {
      case 'front':
        // move unstarted effects after this effect  
        this.effects.findAll(function(e){ return e.state=='idle' }).each( function(e) {
            e.startOn  += effect.finishOn;
            e.finishOn += effect.finishOn;
          });
        break;
      case 'with-last':
        timestamp = this.effects.pluck('startOn').max() || timestamp;
        break;
      case 'end':
        // start effect after last queued effect has finished
        timestamp = this.effects.pluck('finishOn').max() || timestamp;
        break;
    }
    
    effect.startOn  += timestamp;
    effect.finishOn += timestamp;

    if (!effect.options.queue.limit || (this.effects.length < effect.options.queue.limit))
      this.effects.push(effect);
    
    if (!this.interval)
      this.interval = setInterval(this.loop.bind(this), 15);
  },
  remove: function(effect) {
    this.effects = this.effects.reject(function(e) { return e==effect });
    if (this.effects.length == 0) {
      clearInterval(this.interval);
      this.interval = null;
    }
  },
  loop: function() {
    var timePos = new Date().getTime();
    for(var i=0, len=this.effects.length;i<len;i++) 
      this.effects[i] && this.effects[i].loop(timePos);
  }
});

Effect.Queues = {
  instances: $H(),
  get: function(queueName) {
    if (!Object.isString(queueName)) return queueName;
    
    return this.instances.get(queueName) ||
      this.instances.set(queueName, new Effect.ScopedQueue());
  }
};
Effect.Queue = Effect.Queues.get('global');

Effect.Base = Class.create({
  position: null,
  start: function(options) {
    function codeForEvent(options,eventName){
      return (
        (options[eventName+'Internal'] ? 'this.options.'+eventName+'Internal(this);' : '') +
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')
      );
    }
    if (options && options.transition === false) options.transition = Effect.Transitions.linear;
    this.options      = Object.extend(Object.extend({ },Effect.DefaultOptions), options || { });
    this.currentFrame = 0;
    this.state        = 'idle';
    this.startOn      = this.options.delay*1000;
    this.finishOn     = this.startOn+(this.options.duration*1000);
    this.fromToDelta  = this.options.to-this.options.from;
    this.totalTime    = this.finishOn-this.startOn;
    this.totalFrames  = this.options.fps*this.options.duration;
    
    eval('this.render = function(pos){ '+
      'if (this.state=="idle"){this.state="running";'+
      codeForEvent(this.options,'beforeSetup')+
      (this.setup ? 'this.setup();':'')+ 
      codeForEvent(this.options,'afterSetup')+
      '};if (this.state=="running"){'+
      'pos=this.options.transition(pos)*'+this.fromToDelta+'+'+this.options.from+';'+
      'this.position=pos;'+
      codeForEvent(this.options,'beforeUpdate')+
      (this.update ? 'this.update(pos);':'')+
      codeForEvent(this.options,'afterUpdate')+
      '}}');
    
    this.event('beforeStart');
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ? 
        'global' : this.options.queue.scope).add(this);
  },
  loop: function(timePos) {
    if (timePos >= this.startOn) {
      if (timePos >= this.finishOn) {
        this.render(1.0);
        this.cancel();
        this.event('beforeFinish');
        if (this.finish) this.finish(); 
        this.event('afterFinish');
        return;  
      }
      var pos   = (timePos - this.startOn) / this.totalTime,
          frame = (pos * this.totalFrames).round();
      if (frame > this.currentFrame) {
        this.render(pos);
        this.currentFrame = frame;
      }
    }
  },
  cancel: function() {
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ? 
        'global' : this.options.queue.scope).remove(this);
    this.state = 'finished';
  },
  event: function(eventName) {
    if (this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);
    if (this.options[eventName]) this.options[eventName](this);
  },
  inspect: function() {
    var data = $H();
    for(property in this)
      if (!Object.isFunction(this[property])) data.set(property, this[property]);
    return '#<Effect:' + data.inspect() + ',options:' + $H(this.options).inspect() + '>';
  }
});

Effect.Parallel = Class.create(Effect.Base, {
  initialize: function(effects) {
    this.effects = effects || [];
    this.start(arguments[1]);
  },
  update: function(position) {
    this.effects.invoke('render', position);
  },
  finish: function(position) {
    this.effects.each( function(effect) {
      effect.render(1.0);
      effect.cancel();
      effect.event('beforeFinish');
      if (effect.finish) effect.finish(position);
      effect.event('afterFinish');
    });
  }
});

Effect.Tween = Class.create(Effect.Base, {
  initialize: function(object, from, to) {
    object = Object.isString(object) ? $(object) : object;
    var args = $A(arguments), method = args.last(), 
      options = args.length == 5 ? args[3] : null;
    this.method = Object.isFunction(method) ? method.bind(object) :
      Object.isFunction(object[method]) ? object[method].bind(object) : 
      function(value) { object[method] = value };
    this.start(Object.extend({ from: from, to: to }, options || { }));
  },
  update: function(position) {
    this.method(position);
  }
});

Effect.Event = Class.create(Effect.Base, {
  initialize: function() {
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));
  },
  update: Prototype.emptyFunction
});

Effect.Opacity = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    // make this work on IE on elements without 'layout'
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
      this.element.setStyle({zoom: 1});
    var options = Object.extend({
      from: this.element.getOpacity() || 0.0,
      to:   1.0
    }, arguments[1] || { });
    this.start(options);
  },
  update: function(position) {
    this.element.setOpacity(position);
  }
});

Effect.Move = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      x:    0,
      y:    0,
      mode: 'relative'
    }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    this.element.makePositioned();
    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');
    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');
    if (this.options.mode == 'absolute') {
      this.options.x = this.options.x - this.originalLeft;
      this.options.y = this.options.y - this.originalTop;
    }
  },
  update: function(position) {
    this.element.setStyle({
      left: (this.options.x  * position + this.originalLeft).round() + 'px',
      top:  (this.options.y  * position + this.originalTop).round()  + 'px'
    });
  }
});

// for backwards compatibility
Effect.MoveBy = function(element, toTop, toLeft) {
  return new Effect.Move(element, 
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));
};

Effect.Scale = Class.create(Effect.Base, {
  initialize: function(element, percent) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      scaleX: true,
      scaleY: true,
      scaleContent: true,
      scaleFromCenter: false,
      scaleMode: 'box',        // 'box' or 'contents' or { } with provided values
      scaleFrom: 100.0,
      scaleTo:   percent
    }, arguments[2] || { });
    this.start(options);
  },
  setup: function() {
    this.restoreAfterFinish = this.options.restoreAfterFinish || false;
    this.elementPositioning = this.element.getStyle('position');
    
    this.originalStyle = { };
    ['top','left','width','height','fontSize'].each( function(k) {
      this.originalStyle[k] = this.element.style[k];
    }.bind(this));
      
    this.originalTop  = this.element.offsetTop;
    this.originalLeft = this.element.offsetLeft;
    
    var fontSize = this.element.getStyle('font-size') || '100%';
    ['em','px','%','pt'].each( function(fontSizeType) {
      if (fontSize.indexOf(fontSizeType)>0) {
        this.fontSize     = parseFloat(fontSize);
        this.fontSizeType = fontSizeType;
      }
    }.bind(this));
    
    this.factor = (this.options.scaleTo - this.options.scaleFrom)/100;
    
    this.dims = null;
    if (this.options.scaleMode=='box')
      this.dims = [this.element.offsetHeight, this.element.offsetWidth];
    if (/^content/.test(this.options.scaleMode))
      this.dims = [this.element.scrollHeight, this.element.scrollWidth];
    if (!this.dims)
      this.dims = [this.options.scaleMode.originalHeight,
                   this.options.scaleMode.originalWidth];
  },
  update: function(position) {
    var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);
    if (this.options.scaleContent && this.fontSize)
      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType });
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);
  },
  finish: function(position) {
    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
  },
  setDimensions: function(height, width) {
    var d = { };
    if (this.options.scaleX) d.width = width.round() + 'px';
    if (this.options.scaleY) d.height = height.round() + 'px';
    if (this.options.scaleFromCenter) {
      var topd  = (height - this.dims[0])/2;
      var leftd = (width  - this.dims[1])/2;
      if (this.elementPositioning == 'absolute') {
        if (this.options.scaleY) d.top = this.originalTop-topd + 'px';
        if (this.options.scaleX) d.left = this.originalLeft-leftd + 'px';
      } else {
        if (this.options.scaleY) d.top = -topd + 'px';
        if (this.options.scaleX) d.left = -leftd + 'px';
      }
    }
    this.element.setStyle(d);
  }
});

Effect.Highlight = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({ startcolor: '#ffff99' }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    // Prevent executing on elements not in the layout flow
    if (this.element.getStyle('display')=='none') { this.cancel(); return; }
    // Disable background image during the effect
    this.oldStyle = { };
    if (!this.options.keepBackgroundImage) {
      this.oldStyle.backgroundImage = this.element.getStyle('background-image');
      this.element.setStyle({backgroundImage: 'none'});
    }
    if (!this.options.endcolor)
      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');
    if (!this.options.restorecolor)
      this.options.restorecolor = this.element.getStyle('background-color');
    // init color calculations
    this._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));
    this._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));
  },
  update: function(position) {
    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){
      return m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); }.bind(this)) });
  },
  finish: function() {
    this.element.setStyle(Object.extend(this.oldStyle, {
      backgroundColor: this.options.restorecolor
    }));
  }
});

Effect.ScrollTo = function(element) {
  var options = arguments[1] || { },
    scrollOffsets = document.viewport.getScrollOffsets(),
    elementOffsets = $(element).cumulativeOffset(),
    max = (window.height || document.body.scrollHeight) - document.viewport.getHeight();  

  if (options.offset) elementOffsets[1] += options.offset;

  return new Effect.Tween(null,
    scrollOffsets.top,
    elementOffsets[1] > max ? max : elementOffsets[1],
    options,
    function(p){ scrollTo(scrollOffsets.left, p.round()) }
  );
};

/* ------------- combination effects ------------- */

Effect.Fade = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  var options = Object.extend({
    from: element.getOpacity() || 1.0,
    to:   0.0,
    afterFinishInternal: function(effect) { 
      if (effect.options.to!=0) return;
      effect.element.hide().setStyle({opacity: oldOpacity}); 
    }
  }, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Appear = function(element) {
  element = $(element);
  var options = Object.extend({
  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),
  to:   1.0,
  // force Safari to render floated elements properly
  afterFinishInternal: function(effect) {
    effect.element.forceRerendering();
  },
  beforeSetup: function(effect) {
    effect.element.setOpacity(effect.options.from).show(); 
  }}, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Puff = function(element) {
  element = $(element);
  var oldStyle = { 
    opacity: element.getInlineOpacity(), 
    position: element.getStyle('position'),
    top:  element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height
  };
  return new Effect.Parallel(
   [ new Effect.Scale(element, 200, 
      { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }), 
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ], 
     Object.extend({ duration: 1.0, 
      beforeSetupInternal: function(effect) {
        Position.absolutize(effect.effects[0].element)
      },
      afterFinishInternal: function(effect) {
         effect.effects[0].element.hide().setStyle(oldStyle); }
     }, arguments[1] || { })
   );
};

Effect.BlindUp = function(element) {
  element = $(element);
  element.makeClipping();
  return new Effect.Scale(element, 0,
    Object.extend({ scaleContent: false, 
      scaleX: false, 
      restoreAfterFinish: true,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping();
      } 
    }, arguments[1] || { })
  );
};

Effect.BlindDown = function(element) {
  element = $(element);
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({ 
    scaleContent: false, 
    scaleX: false,
    scaleFrom: 0,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makeClipping().setStyle({height: '0px'}).show(); 
    },  
    afterFinishInternal: function(effect) {
      effect.element.undoClipping();
    }
  }, arguments[1] || { }));
};

Effect.SwitchOff = function(element) {
  element = $(element);
  var oldOpacity = element.getInlineOpacity();
  return new Effect.Appear(element, Object.extend({
    duration: 0.4,
    from: 0,
    transition: Effect.Transitions.flicker,
    afterFinishInternal: function(effect) {
      new Effect.Scale(effect.element, 1, { 
        duration: 0.3, scaleFromCenter: true,
        scaleX: false, scaleContent: false, restoreAfterFinish: true,
        beforeSetup: function(effect) { 
          effect.element.makePositioned().makeClipping();
        },
        afterFinishInternal: function(effect) {
          effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: oldOpacity});
        }
      })
    }
  }, arguments[1] || { }));
};

Effect.DropOut = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left'),
    opacity: element.getInlineOpacity() };
  return new Effect.Parallel(
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }), 
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],
    Object.extend(
      { duration: 0.5,
        beforeSetup: function(effect) {
          effect.effects[0].element.makePositioned(); 
        },
        afterFinishInternal: function(effect) {
          effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);
        } 
      }, arguments[1] || { }));
};

Effect.Shake = function(element) {
  element = $(element);
  var options = Object.extend({
    distance: 20,
    duration: 0.5
  }, arguments[1] || {});
  var distance = parseFloat(options.distance);
  var split = parseFloat(options.duration) / 10.0;
  var oldStyle = {
    top: element.getStyle('top'),
    left: element.getStyle('left') };
    return new Effect.Move(element,
      { x:  distance, y: 0, duration: split, afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {
    new Effect.Move(effect.element,
      { x: -distance, y: 0, duration: split, afterFinishInternal: function(effect) {
        effect.element.undoPositioned().setStyle(oldStyle);
  }}) }}) }}) }}) }}) }});
};

Effect.SlideDown = function(element) {
  element = $(element).cleanWhitespace();
  // SlideDown need to have the content of the element wrapped in a container element with fixed height!
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({ 
    scaleContent: false, 
    scaleX: false, 
    scaleFrom: window.opera ? 0 : 1,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().setStyle({height: '0px'}).show(); 
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' }); 
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom}); }
    }, arguments[1] || { })
  );
};

Effect.SlideUp = function(element) {
  element = $(element).cleanWhitespace();
  var oldInnerBottom = element.down().getStyle('bottom');
  var elementDimensions = element.getDimensions();
  return new Effect.Scale(element, window.opera ? 0 : 1,
   Object.extend({ scaleContent: false, 
    scaleX: false, 
    scaleMode: 'box',
    scaleFrom: 100,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().show();
    },  
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom});
    }
   }, arguments[1] || { })
  );
};

// Bug in opera makes the TD containing this element expand for a instance after finish 
Effect.Squish = function(element) {
  return new Effect.Scale(element, window.opera ? 1 : 0, { 
    restoreAfterFinish: true,
    beforeSetup: function(effect) {
      effect.element.makeClipping(); 
    },  
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping(); 
    }
  });
};

Effect.Grow = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.full
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();    
  var initialMoveX, initialMoveY;
  var moveX, moveY;
  
  switch (options.direction) {
    case 'top-left':
      initialMoveX = initialMoveY = moveX = moveY = 0; 
      break;
    case 'top-right':
      initialMoveX = dims.width;
      initialMoveY = moveY = 0;
      moveX = -dims.width;
      break;
    case 'bottom-left':
      initialMoveX = moveX = 0;
      initialMoveY = dims.height;
      moveY = -dims.height;
      break;
    case 'bottom-right':
      initialMoveX = dims.width;
      initialMoveY = dims.height;
      moveX = -dims.width;
      moveY = -dims.height;
      break;
    case 'center':
      initialMoveX = dims.width / 2;
      initialMoveY = dims.height / 2;
      moveX = -dims.width / 2;
      moveY = -dims.height / 2;
      break;
  }
  
  return new Effect.Move(element, {
    x: initialMoveX,
    y: initialMoveY,
    duration: 0.01, 
    beforeSetup: function(effect) {
      effect.element.hide().makeClipping().makePositioned();
    },
    afterFinishInternal: function(effect) {
      new Effect.Parallel(
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition }),
          new Effect.Scale(effect.element, 100, {
            scaleMode: { originalHeight: dims.height, originalWidth: dims.width }, 
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})
        ], Object.extend({
             beforeSetup: function(effect) {
               effect.effects[0].element.setStyle({height: '0px'}).show(); 
             },
             afterFinishInternal: function(effect) {
               effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldStyle); 
             }
           }, options)
      )
    }
  });
};

Effect.Shrink = function(element) {
  element = $(element);
  var options = Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.none
  }, arguments[1] || { });
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims = element.getDimensions();
  var moveX, moveY;
  
  switch (options.direction) {
    case 'top-left':
      moveX = moveY = 0;
      break;
    case 'top-right':
      moveX = dims.width;
      moveY = 0;
      break;
    case 'bottom-left':
      moveX = 0;
      moveY = dims.height;
      break;
    case 'bottom-right':
      moveX = dims.width;
      moveY = dims.height;
      break;
    case 'center':  
      moveX = dims.width / 2;
      moveY = dims.height / 2;
      break;
  }
  
  return new Effect.Parallel(
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition }),
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })
    ], Object.extend({            
         beforeStartInternal: function(effect) {
           effect.effects[0].element.makePositioned().makeClipping(); 
         },
         afterFinishInternal: function(effect) {
           effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle(oldStyle); }
       }, options)
  );
};

Effect.Pulsate = function(element) {
  element = $(element);
  var options    = arguments[1] || { };
  var oldOpacity = element.getInlineOpacity();
  var transition = options.transition || Effect.Transitions.sinoidal;
  var reverser   = function(pos){ return transition(1-Effect.Transitions.pulse(pos, options.pulses)) };
  reverser.bind(transition);
  return new Effect.Opacity(element, 
    Object.extend(Object.extend({  duration: 2.0, from: 0,
      afterFinishInternal: function(effect) { effect.element.setStyle({opacity: oldOpacity}); }
    }, options), {transition: reverser}));
};

Effect.Fold = function(element) {
  element = $(element);
  var oldStyle = {
    top: element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height };
  element.makeClipping();
  return new Effect.Scale(element, 5, Object.extend({   
    scaleContent: false,
    scaleX: false,
    afterFinishInternal: function(effect) {
    new Effect.Scale(element, 1, { 
      scaleContent: false, 
      scaleY: false,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping().setStyle(oldStyle);
      } });
  }}, arguments[1] || { }));
};

Effect.Morph = Class.create(Effect.Base, {
  initialize: function(element) {
    this.element = $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options = Object.extend({
      style: { }
    }, arguments[1] || { });
    
    if (!Object.isString(options.style)) this.style = $H(options.style);
    else {
      if (options.style.include(':'))
        this.style = options.style.parseStyle();
      else {
        this.element.addClassName(options.style);
        this.style = $H(this.element.getStyles());
        this.element.removeClassName(options.style);
        var css = this.element.getStyles();
        this.style = this.style.reject(function(style) {
          return style.value == css[style.key];
        });
        options.afterFinishInternal = function(effect) {
          effect.element.addClassName(effect.options.style);
          effect.transforms.each(function(transform) {
            effect.element.style[transform.style] = '';
          });
        }
      }
    }
    this.start(options);
  },
  
  setup: function(){
    function parseColor(color){
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) color = '#ffffff';
      color = color.parseColor();
      return $R(0,2).map(function(i){
        return parseInt( color.slice(i*2+1,i*2+3), 16 ) 
      });
    }
    this.transforms = this.style.map(function(pair){
      var property = pair[0], value = pair[1], unit = null;

      if (value.parseColor('#zzzzzz') != '#zzzzzz') {
        value = value.parseColor();
        unit  = 'color';
      } else if (property == 'opacity') {
        value = parseFloat(value);
        if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
          this.element.setStyle({zoom: 1});
      } else if (Element.CSS_LENGTH.test(value)) {
          var components = value.match(/^([\+\-]?[0-9\.]+)(.*)$/);
          value = parseFloat(components[1]);
          unit = (components.length == 3) ? components[2] : null;
      }

      var originalValue = this.element.getStyle(property);
      return { 
        style: property.camelize(), 
        originalValue: unit=='color' ? parseColor(originalValue) : parseFloat(originalValue || 0), 
        targetValue: unit=='color' ? parseColor(value) : value,
        unit: unit
      };
    }.bind(this)).reject(function(transform){
      return (
        (transform.originalValue == transform.targetValue) ||
        (
          transform.unit != 'color' &&
          (isNaN(transform.originalValue) || isNaN(transform.targetValue))
        )
      )
    });
  },
  update: function(position) {
    var style = { }, transform, i = this.transforms.length;
    while(i--)
      style[(transform = this.transforms[i]).style] = 
        transform.unit=='color' ? '#'+
          (Math.round(transform.originalValue[0]+
            (transform.targetValue[0]-transform.originalValue[0])*position)).toColorPart() +
          (Math.round(transform.originalValue[1]+
            (transform.targetValue[1]-transform.originalValue[1])*position)).toColorPart() +
          (Math.round(transform.originalValue[2]+
            (transform.targetValue[2]-transform.originalValue[2])*position)).toColorPart() :
        (transform.originalValue +
          (transform.targetValue - transform.originalValue) * position).toFixed(3) + 
            (transform.unit === null ? '' : transform.unit);
    this.element.setStyle(style, true);
  }
});

Effect.Transform = Class.create({
  initialize: function(tracks){
    this.tracks  = [];
    this.options = arguments[1] || { };
    this.addTracks(tracks);
  },
  addTracks: function(tracks){
    tracks.each(function(track){
      track = $H(track);
      var data = track.values().first();
      this.tracks.push($H({
        ids:     track.keys().first(),
        effect:  Effect.Morph,
        options: { style: data }
      }));
    }.bind(this));
    return this;
  },
  play: function(){
    return new Effect.Parallel(
      this.tracks.map(function(track){
        var ids = track.get('ids'), effect = track.get('effect'), options = track.get('options');
        var elements = [$(ids) || $$(ids)].flatten();
        return elements.map(function(e){ return new effect(e, Object.extend({ sync:true }, options)) });
      }).flatten(),
      this.options
    );
  }
});

Element.CSS_PROPERTIES = $w(
  'backgroundColor backgroundPosition borderBottomColor borderBottomStyle ' + 
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +
  'fontSize fontWeight height left letterSpacing lineHeight ' +
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight '+
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +
  'right textIndent top width wordSpacing zIndex');
  
Element.CSS_LENGTH = /^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;

String.__parseStyleElement = document.createElement('div');
String.prototype.parseStyle = function(){
  var style, styleRules = $H();
  if (Prototype.Browser.WebKit)
    style = new Element('div',{style:this}).style;
  else {
    String.__parseStyleElement.innerHTML = '<div style="' + this + '"></div>';
    style = String.__parseStyleElement.childNodes[0].style;
  }
  
  Element.CSS_PROPERTIES.each(function(property){
    if (style[property]) styleRules.set(property, style[property]); 
  });
  
  if (Prototype.Browser.IE && this.include('opacity'))
    styleRules.set('opacity', this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);

  return styleRules;
};

if (document.defaultView && document.defaultView.getComputedStyle) {
  Element.getStyles = function(element) {
    var css = document.defaultView.getComputedStyle($(element), null);
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) {
      styles[property] = css[property];
      return styles;
    });
  };
} else {
  Element.getStyles = function(element) {
    element = $(element);
    var css = element.currentStyle, styles;
    styles = Element.CSS_PROPERTIES.inject({ }, function(results, property) {
      results[property] = css[property];
      return results;
    });
    if (!styles.opacity) styles.opacity = element.getOpacity();
    return styles;
  };
};

Effect.Methods = {
  morph: function(element, style) {
    element = $(element);
    new Effect.Morph(element, Object.extend({ style: style }, arguments[2] || { }));
    return element;
  },
  visualEffect: function(element, effect, options) {
    element = $(element)
    var s = effect.dasherize().camelize(), klass = s.charAt(0).toUpperCase() + s.substring(1);
    new Effect[klass](element, options);
    return element;
  },
  highlight: function(element, options) {
    element = $(element);
    new Effect.Highlight(element, options);
    return element;
  }
};

$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+
  'pulsate shake puff squish switchOff dropOut').each(
  function(effect) { 
    Effect.Methods[effect] = function(element, options){
      element = $(element);
      Effect[effect.charAt(0).toUpperCase() + effect.substring(1)](element, options);
      return element;
    }
  }
);

$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes collectTextNodesIgnoreClass getStyles').each( 
  function(f) { Effect.Methods[f] = Element[f]; }
);

Element.addMethods(Effect.Methods);
_5https://itunesconnect.apple.com/javascript/effects.js‘IAJKOabplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_6https://itunesconnect.apple.com/javascript/dragdrop.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫e≈ã/»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:16 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptU31605_Wed, 15 Jul 2009 18:30:32 GMT_"1fb3062-7b75-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionary{u“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
GLU`cir{}Ñåóô§¶®™¨Æ∞≤¥∂∏√≈«…ÀÕœ—”’◊ÂÛ˚	,16AaoèïÆ…œÔ	.;>CG[             l              iO{u// script.aculo.us dragdrop.js v1.8.1, Thu Jan 03 22:07:12 -0500 2008

// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//           (c) 2005-2007 Sammi Williams (http://www.oriontransfer.co.nz, sammi@oriontransfer.co.nz)
// 
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if(Object.isUndefined(Effect))
  throw("dragdrop.js requires including script.aculo.us' effects.js library");

var Droppables = {
  drops: [],

  remove: function(element) {
    this.drops = this.drops.reject(function(d) { return d.element==$(element) });
  },

  add: function(element) {
    element = $(element);
    var options = Object.extend({
      greedy:     true,
      hoverclass: null,
      tree:       false
    }, arguments[1] || { });

    // cache containers
    if(options.containment) {
      options._containers = [];
      var containment = options.containment;
      if(Object.isArray(containment)) {
        containment.each( function(c) { options._containers.push($(c)) });
      } else {
        options._containers.push($(containment));
      }
    }
    
    if(options.accept) options.accept = [options.accept].flatten();

    Element.makePositioned(element); // fix IE
    options.element = element;

    this.drops.push(options);
  },
  
  findDeepestChild: function(drops) {
    deepest = drops[0];
      
    for (i = 1; i < drops.length; ++i)
      if (Element.isParent(drops[i].element, deepest.element))
        deepest = drops[i];
    
    return deepest;
  },

  isContained: function(element, drop) {
    var containmentNode;
    if(drop.tree) {
      containmentNode = element.treeNode; 
    } else {
      containmentNode = element.parentNode;
    }
    return drop._containers.detect(function(c) { return containmentNode == c });
  },
  
  isAffected: function(point, element, drop) {
    return (
      (drop.element!=element) &&
      ((!drop._containers) ||
        this.isContained(element, drop)) &&
      ((!drop.accept) ||
        (Element.classNames(element).detect( 
          function(v) { return drop.accept.include(v) } ) )) &&
      Position.within(drop.element, point[0], point[1]) );
  },

  deactivate: function(drop) {
    if(drop.hoverclass)
      Element.removeClassName(drop.element, drop.hoverclass);
    this.last_active = null;
  },

  activate: function(drop) {
    if(drop.hoverclass)
      Element.addClassName(drop.element, drop.hoverclass);
    this.last_active = drop;
  },

  show: function(point, element) {
    if(!this.drops.length) return;
    var drop, affected = [];
    
    this.drops.each( function(drop) {
      if(Droppables.isAffected(point, element, drop))
        affected.push(drop);
    });
        
    if(affected.length>0)
      drop = Droppables.findDeepestChild(affected);

    if(this.last_active && this.last_active != drop) this.deactivate(this.last_active);
    if (drop) {
      Position.within(drop.element, point[0], point[1]);
      if(drop.onHover)
        drop.onHover(element, drop.element, Position.overlap(drop.overlap, drop.element));
      
      if (drop != this.last_active) Droppables.activate(drop);
    }
  },

  fire: function(event, element) {
    if(!this.last_active) return;
    Position.prepare();

    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], element, this.last_active))
      if (this.last_active.onDrop) {
        this.last_active.onDrop(element, this.last_active.element, event); 
        return true; 
      }
  },

  reset: function() {
    if(this.last_active)
      this.deactivate(this.last_active);
  }
}

var Draggables = {
  drags: [],
  observers: [],
  
  register: function(draggable) {
    if(this.drags.length == 0) {
      this.eventMouseUp   = this.endDrag.bindAsEventListener(this);
      this.eventMouseMove = this.updateDrag.bindAsEventListener(this);
      this.eventKeypress  = this.keyPress.bindAsEventListener(this);
      
      Event.observe(document, "mouseup", this.eventMouseUp);
      Event.observe(document, "mousemove", this.eventMouseMove);
      Event.observe(document, "keypress", this.eventKeypress);
    }
    this.drags.push(draggable);
  },
  
  unregister: function(draggable) {
    this.drags = this.drags.reject(function(d) { return d==draggable });
    if(this.drags.length == 0) {
      Event.stopObserving(document, "mouseup", this.eventMouseUp);
      Event.stopObserving(document, "mousemove", this.eventMouseMove);
      Event.stopObserving(document, "keypress", this.eventKeypress);
    }
  },
  
  activate: function(draggable) {
    if(draggable.options.delay) { 
      this._timeout = setTimeout(function() { 
        Draggables._timeout = null; 
        window.focus(); 
        Draggables.activeDraggable = draggable; 
      }.bind(this), draggable.options.delay); 
    } else {
      window.focus(); // allows keypress events if window isn't currently focused, fails for Safari
      this.activeDraggable = draggable;
    }
  },
  
  deactivate: function() {
    this.activeDraggable = null;
  },
  
  updateDrag: function(event) {
    if(!this.activeDraggable) return;
    var pointer = [Event.pointerX(event), Event.pointerY(event)];
    // Mozilla-based browsers fire successive mousemove events with
    // the same coordinates, prevent needless redrawing (moz bug?)
    if(this._lastPointer && (this._lastPointer.inspect() == pointer.inspect())) return;
    this._lastPointer = pointer;
    
    this.activeDraggable.updateDrag(event, pointer);
  },
  
  endDrag: function(event) {
    if(this._timeout) { 
      clearTimeout(this._timeout); 
      this._timeout = null; 
    }
    if(!this.activeDraggable) return;
    this._lastPointer = null;
    this.activeDraggable.endDrag(event);
    this.activeDraggable = null;
  },
  
  keyPress: function(event) {
    if(this.activeDraggable)
      this.activeDraggable.keyPress(event);
  },
  
  addObserver: function(observer) {
    this.observers.push(observer);
    this._cacheObserverCallbacks();
  },
  
  removeObserver: function(element) {  // element instead of observer fixes mem leaks
    this.observers = this.observers.reject( function(o) { return o.element==element });
    this._cacheObserverCallbacks();
  },
  
  notify: function(eventName, draggable, event) {  // 'onStart', 'onEnd', 'onDrag'
    if(this[eventName+'Count'] > 0)
      this.observers.each( function(o) {
        if(o[eventName]) o[eventName](eventName, draggable, event);
      });
    if(draggable.options[eventName]) draggable.options[eventName](draggable, event);
  },
  
  _cacheObserverCallbacks: function() {
    ['onStart','onEnd','onDrag'].each( function(eventName) {
      Draggables[eventName+'Count'] = Draggables.observers.select(
        function(o) { return o[eventName]; }
      ).length;
    });
  }
}

/*--------------------------------------------------------------------------*/

var Draggable = Class.create({
  initialize: function(element) {
    var defaults = {
      handle: false,
      reverteffect: function(element, top_offset, left_offset) {
        var dur = Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;
        new Effect.Move(element, { x: -left_offset, y: -top_offset, duration: dur,
          queue: {scope:'_draggable', position:'end'}
        });
      },
      endeffect: function(element) {
        var toOpacity = Object.isNumber(element._opacity) ? element._opacity : 1.0;
        new Effect.Opacity(element, {duration:0.2, from:0.7, to:toOpacity, 
          queue: {scope:'_draggable', position:'end'},
          afterFinish: function(){ 
            Draggable._dragging[element] = false 
          }
        }); 
      },
      zindex: 1000,
      revert: false,
      quiet: false,
      scroll: false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      snap: false,  // false, or xy or [x,y] or function(x,y){ return [x,y] }
      delay: 0
    };
    
    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))
      Object.extend(defaults, {
        starteffect: function(element) {
          element._opacity = Element.getOpacity(element);
          Draggable._dragging[element] = true;
          new Effect.Opacity(element, {duration:0.2, from:element._opacity, to:0.7}); 
        }
      });
    
    var options = Object.extend(defaults, arguments[1] || { });

    this.element = $(element);
    
    if(options.handle && Object.isString(options.handle))
      this.handle = this.element.down('.'+options.handle, 0);
    
    if(!this.handle) this.handle = $(options.handle);
    if(!this.handle) this.handle = this.element;
    
    if(options.scroll && !options.scroll.scrollTo && !options.scroll.outerHTML) {
      options.scroll = $(options.scroll);
      this._isScrollChild = Element.childOf(this.element, options.scroll);
    }

    Element.makePositioned(this.element); // fix IE    

    this.options  = options;
    this.dragging = false;   

    this.eventMouseDown = this.initDrag.bindAsEventListener(this);
    Event.observe(this.handle, "mousedown", this.eventMouseDown);
    
    Draggables.register(this);
  },
  
  destroy: function() {
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);
    Draggables.unregister(this);
  },
  
  currentDelta: function() {
    return([
      parseInt(Element.getStyle(this.element,'left') || '0'),
      parseInt(Element.getStyle(this.element,'top') || '0')]);
  },
  
  initDrag: function(event) {
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&
      Draggable._dragging[this.element]) return;
    if(Event.isLeftClick(event)) {    
      // abort on form elements, fixes a Firefox issue
      var src = Event.element(event);
      if((tag_name = src.tagName.toUpperCase()) && (
        tag_name=='INPUT' ||
        tag_name=='SELECT' ||
        tag_name=='OPTION' ||
        tag_name=='BUTTON' ||
        tag_name=='TEXTAREA')) return;
        
      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      var pos     = Position.cumulativeOffset(this.element);
      this.offset = [0,1].map( function(i) { return (pointer[i] - pos[i]) });
      
      Draggables.activate(this);
      Event.stop(event);
    }
  },
  
  startDrag: function(event) {
    this.dragging = true;
    if(!this.delta)
      this.delta = this.currentDelta();
    
    if(this.options.zindex) {
      this.originalZ = parseInt(Element.getStyle(this.element,'z-index') || 0);
      this.element.style.zIndex = this.options.zindex;
    }
    
    if(this.options.ghosting) {
      this._clone = this.element.cloneNode(true);
      this.element._originallyAbsolute = (this.element.getStyle('position') == 'absolute');
      if (!this.element._originallyAbsolute)
        Position.absolutize(this.element);
      this.element.parentNode.insertBefore(this._clone, this.element);
    }
    
    if(this.options.scroll) {
      if (this.options.scroll == window) {
        var where = this._getWindowScroll(this.options.scroll);
        this.originalScrollLeft = where.left;
        this.originalScrollTop = where.top;
      } else {
        this.originalScrollLeft = this.options.scroll.scrollLeft;
        this.originalScrollTop = this.options.scroll.scrollTop;
      }
    }
    
    Draggables.notify('onStart', this, event);
        
    if(this.options.starteffect) this.options.starteffect(this.element);
  },
  
  updateDrag: function(event, pointer) {
    if(!this.dragging) this.startDrag(event);
    
    if(!this.options.quiet){
      Position.prepare();
      Droppables.show(pointer, this.element);
    }
    
    Draggables.notify('onDrag', this, event);
    
    this.draw(pointer);
    if(this.options.change) this.options.change(this);
    
    if(this.options.scroll) {
      this.stopScrolling();
      
      var p;
      if (this.options.scroll == window) {
        with(this._getWindowScroll(this.options.scroll)) { p = [ left, top, left+width, top+height ]; }
      } else {
        p = Position.page(this.options.scroll);
        p[0] += this.options.scroll.scrollLeft + Position.deltaX;
        p[1] += this.options.scroll.scrollTop + Position.deltaY;
        p.push(p[0]+this.options.scroll.offsetWidth);
        p.push(p[1]+this.options.scroll.offsetHeight);
      }
      var speed = [0,0];
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[0]+this.options.scrollSensitivity);
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[1]+this.options.scrollSensitivity);
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[2]-this.options.scrollSensitivity);
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[3]-this.options.scrollSensitivity);
      this.startScrolling(speed);
    }
    
    // fix AppleWebKit rendering
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);
    
    Event.stop(event);
  },
  
  finishDrag: function(event, success) {
    this.dragging = false;
    
    if(this.options.quiet){
      Position.prepare();
      var pointer = [Event.pointerX(event), Event.pointerY(event)];
      Droppables.show(pointer, this.element);
    }

    if(this.options.ghosting) {
      if (!this.element._originallyAbsolute)
        Position.relativize(this.element);
      delete this.element._originallyAbsolute;
      Element.remove(this._clone);
      this._clone = null;
    }

    var dropped = false; 
    if(success) { 
      dropped = Droppables.fire(event, this.element); 
      if (!dropped) dropped = false; 
    }
    if(dropped && this.options.onDropped) this.options.onDropped(this.element);
    Draggables.notify('onEnd', this, event);

    var revert = this.options.revert;
    if(revert && Object.isFunction(revert)) revert = revert(this.element);
    
    var d = this.currentDelta();
    if(revert && this.options.reverteffect) {
      if (dropped == 0 || revert != 'failure')
        this.options.reverteffect(this.element,
          d[1]-this.delta[1], d[0]-this.delta[0]);
    } else {
      this.delta = d;
    }

    if(this.options.zindex)
      this.element.style.zIndex = this.originalZ;

    if(this.options.endeffect) 
      this.options.endeffect(this.element);
      
    Draggables.deactivate(this);
    Droppables.reset();
  },
  
  keyPress: function(event) {
    if(event.keyCode!=Event.KEY_ESC) return;
    this.finishDrag(event, false);
    Event.stop(event);
  },
  
  endDrag: function(event) {
    if(!this.dragging) return;
    this.stopScrolling();
    this.finishDrag(event, true);
    Event.stop(event);
  },
  
  draw: function(point) {
    var pos = Position.cumulativeOffset(this.element);
    if(this.options.ghosting) {
      var r   = Position.realOffset(this.element);
      pos[0] += r[0] - Position.deltaX; pos[1] += r[1] - Position.deltaY;
    }
    
    var d = this.currentDelta();
    pos[0] -= d[0]; pos[1] -= d[1];
    
    if(this.options.scroll && (this.options.scroll != window && this._isScrollChild)) {
      pos[0] -= this.options.scroll.scrollLeft-this.originalScrollLeft;
      pos[1] -= this.options.scroll.scrollTop-this.originalScrollTop;
    }
    
    var p = [0,1].map(function(i){ 
      return (point[i]-pos[i]-this.offset[i]) 
    }.bind(this));
    
    if(this.options.snap) {
      if(Object.isFunction(this.options.snap)) {
        p = this.options.snap(p[0],p[1],this);
      } else {
      if(Object.isArray(this.options.snap)) {
        p = p.map( function(v, i) {
          return (v/this.options.snap[i]).round()*this.options.snap[i] }.bind(this))
      } else {
        p = p.map( function(v) {
          return (v/this.options.snap).round()*this.options.snap }.bind(this))
      }
    }}
    
    var style = this.element.style;
    if((!this.options.constraint) || (this.options.constraint=='horizontal'))
      style.left = p[0] + "px";
    if((!this.options.constraint) || (this.options.constraint=='vertical'))
      style.top  = p[1] + "px";
    
    if(style.visibility=="hidden") style.visibility = ""; // fix gecko rendering
  },
  
  stopScrolling: function() {
    if(this.scrollInterval) {
      clearInterval(this.scrollInterval);
      this.scrollInterval = null;
      Draggables._lastScrollPointer = null;
    }
  },
  
  startScrolling: function(speed) {
    if(!(speed[0] || speed[1])) return;
    this.scrollSpeed = [speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];
    this.lastScrolled = new Date();
    this.scrollInterval = setInterval(this.scroll.bind(this), 10);
  },
  
  scroll: function() {
    var current = new Date();
    var delta = current - this.lastScrolled;
    this.lastScrolled = current;
    if(this.options.scroll == window) {
      with (this._getWindowScroll(this.options.scroll)) {
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {
          var d = delta / 1000;
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], top + d*this.scrollSpeed[1] );
        }
      }
    } else {
      this.options.scroll.scrollLeft += this.scrollSpeed[0] * delta / 1000;
      this.options.scroll.scrollTop  += this.scrollSpeed[1] * delta / 1000;
    }
    
    Position.prepare();
    Droppables.show(Draggables._lastPointer, this.element);
    Draggables.notify('onDrag', this);
    if (this._isScrollChild) {
      Draggables._lastScrollPointer = Draggables._lastScrollPointer || $A(Draggables._lastPointer);
      Draggables._lastScrollPointer[0] += this.scrollSpeed[0] * delta / 1000;
      Draggables._lastScrollPointer[1] += this.scrollSpeed[1] * delta / 1000;
      if (Draggables._lastScrollPointer[0] < 0)
        Draggables._lastScrollPointer[0] = 0;
      if (Draggables._lastScrollPointer[1] < 0)
        Draggables._lastScrollPointer[1] = 0;
      this.draw(Draggables._lastScrollPointer);
    }
    
    if(this.options.change) this.options.change(this);
  },
  
  _getWindowScroll: function(w) {
    var T, L, W, H;
    with (w.document) {
      if (w.document.documentElement && documentElement.scrollTop) {
        T = documentElement.scrollTop;
        L = documentElement.scrollLeft;
      } else if (w.document.body) {
        T = body.scrollTop;
        L = body.scrollLeft;
      }
      if (w.innerWidth) {
        W = w.innerWidth;
        H = w.innerHeight;
      } else if (w.document.documentElement && documentElement.clientWidth) {
        W = documentElement.clientWidth;
        H = documentElement.clientHeight;
      } else {
        W = body.offsetWidth;
        H = body.offsetHeight
      }
    }
    return { top: T, left: L, width: W, height: H };
  }
});

Draggable._dragging = { };

/*--------------------------------------------------------------------------*/

var SortableObserver = Class.create({
  initialize: function(element, observer) {
    this.element   = $(element);
    this.observer  = observer;
    this.lastValue = Sortable.serialize(this.element);
  },
  
  onStart: function() {
    this.lastValue = Sortable.serialize(this.element);
  },
  
  onEnd: function() {
    Sortable.unmark();
    if(this.lastValue != Sortable.serialize(this.element))
      this.observer(this.element)
  }
});

var Sortable = {
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,
  
  sortables: { },
  
  _findRootElement: function(element) {
    while (element.tagName.toUpperCase() != "BODY") {  
      if(element.id && Sortable.sortables[element.id]) return element;
      element = element.parentNode;
    }
  },

  options: function(element) {
    element = Sortable._findRootElement($(element));
    if(!element) return;
    return Sortable.sortables[element.id];
  },
  
  destroy: function(element){
    var s = Sortable.options(element);
    
    if(s) {
      Draggables.removeObserver(s.element);
      s.droppables.each(function(d){ Droppables.remove(d) });
      s.draggables.invoke('destroy');
      
      delete Sortable.sortables[s.element.id];
    }
  },

  create: function(element) {
    element = $(element);
    var options = Object.extend({ 
      element:     element,
      tag:         'li',       // assumes li children, override with tag: 'tagname'
      dropOnEmpty: false,
      tree:        false,
      treeTag:     'ul',
      overlap:     'vertical', // one of 'vertical', 'horizontal'
      constraint:  'vertical', // one of 'vertical', 'horizontal', false
      containment: element,    // also takes array of elements (or id's); or false
      handle:      false,      // or a CSS class
      only:        false,
      delay:       0,
      hoverclass:  null,
      ghosting:    false,
      quiet:       false, 
      scroll:      false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      format:      this.SERIALIZE_RULE,
      
      // these take arrays of elements or ids and can be 
      // used for better initialization performance
      elements:    false,
      handles:     false,
      
      onChange:    Prototype.emptyFunction,
      onUpdate:    Prototype.emptyFunction
    }, arguments[1] || { });

    // clear any old sortable with same element
    this.destroy(element);

    // build options for the draggables
    var options_for_draggable = {
      revert:      true,
      quiet:       options.quiet,
      scroll:      options.scroll,
      scrollSpeed: options.scrollSpeed,
      scrollSensitivity: options.scrollSensitivity,
      delay:       options.delay,
      ghosting:    options.ghosting,
      constraint:  options.constraint,
      handle:      options.handle };

    if(options.starteffect)
      options_for_draggable.starteffect = options.starteffect;

    if(options.reverteffect)
      options_for_draggable.reverteffect = options.reverteffect;
    else
      if(options.ghosting) options_for_draggable.reverteffect = function(element) {
        element.style.top  = 0;
        element.style.left = 0;
      };

    if(options.endeffect)
      options_for_draggable.endeffect = options.endeffect;

    if(options.zindex)
      options_for_draggable.zindex = options.zindex;

    // build options for the droppables  
    var options_for_droppable = {
      overlap:     options.overlap,
      containment: options.containment,
      tree:        options.tree,
      hoverclass:  options.hoverclass,
      onHover:     Sortable.onHover
    }
    
    var options_for_tree = {
      onHover:      Sortable.onEmptyHover,
      overlap:      options.overlap,
      containment:  options.containment,
      hoverclass:   options.hoverclass
    }

    // fix for gecko engine
    Element.cleanWhitespace(element); 

    options.draggables = [];
    options.droppables = [];

    // drop on empty handling
    if(options.dropOnEmpty || options.tree) {
      Droppables.add(element, options_for_tree);
      options.droppables.push(element);
    }

    (options.elements || this.findElements(element, options) || []).each( function(e,i) {
      var handle = options.handles ? $(options.handles[i]) :
        (options.handle ? $(e).select('.' + options.handle)[0] : e); 
      options.draggables.push(
        new Draggable(e, Object.extend(options_for_draggable, { handle: handle })));
      Droppables.add(e, options_for_droppable);
      if(options.tree) e.treeNode = element;
      options.droppables.push(e);      
    });
    
    if(options.tree) {
      (Sortable.findTreeElements(element, options) || []).each( function(e) {
        Droppables.add(e, options_for_tree);
        e.treeNode = element;
        options.droppables.push(e);
      });
    }

    // keep reference
    this.sortables[element.id] = options;

    // for onupdate
    Draggables.addObserver(new SortableObserver(element, options.onUpdate));

  },

  // return all suitable-for-sortable elements in a guaranteed order
  findElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.tag);
  },
  
  findTreeElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.treeTag);
  },

  onHover: function(element, dropon, overlap) {
    if(Element.isParent(dropon, element)) return;

    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {
      return;
    } else if(overlap>0.5) {
      Sortable.mark(dropon, 'before');
      if(dropon.previousSibling != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, dropon);
        if(dropon.parentNode!=oldParentNode) 
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    } else {
      Sortable.mark(dropon, 'after');
      var nextElement = dropon.nextSibling || null;
      if(nextElement != element) {
        var oldParentNode = element.parentNode;
        element.style.visibility = "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, nextElement);
        if(dropon.parentNode!=oldParentNode) 
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    }
  },
  
  onEmptyHover: function(element, dropon, overlap) {
    var oldParentNode = element.parentNode;
    var droponOptions = Sortable.options(dropon);
        
    if(!Element.isParent(dropon, element)) {
      var index;
      
      var children = Sortable.findElements(dropon, {tag: droponOptions.tag, only: droponOptions.only});
      var child = null;
            
      if(children) {
        var offset = Element.offsetSize(dropon, droponOptions.overlap) * (1.0 - overlap);
        
        for (index = 0; index < children.length; index += 1) {
          if (offset - Element.offsetSize (children[index], droponOptions.overlap) >= 0) {
            offset -= Element.offsetSize (children[index], droponOptions.overlap);
          } else if (offset - (Element.offsetSize (children[index], droponOptions.overlap) / 2) >= 0) {
            child = index + 1 < children.length ? children[index + 1] : null;
            break;
          } else {
            child = children[index];
            break;
          }
        }
      }
      
      dropon.insertBefore(element, child);
      
      Sortable.options(oldParentNode).onChange(element);
      droponOptions.onChange(element);
    }
  },

  unmark: function() {
    if(Sortable._marker) Sortable._marker.hide();
  },

  mark: function(dropon, position) {
    // mark on ghosting only
    var sortable = Sortable.options(dropon.parentNode);
    if(sortable && !sortable.ghosting) return; 

    if(!Sortable._marker) {
      Sortable._marker = 
        ($('dropmarker') || Element.extend(document.createElement('DIV'))).
          hide().addClassName('dropmarker').setStyle({position:'absolute'});
      document.getElementsByTagName("body").item(0).appendChild(Sortable._marker);
    }    
    var offsets = Position.cumulativeOffset(dropon);
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + 'px'});
    
    if(position=='after')
      if(sortable.overlap == 'horizontal') 
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) + 'px'});
      else
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) + 'px'});
    
    Sortable._marker.show();
  },
  
  _tree: function(element, options, parent) {
    var children = Sortable.findElements(element, options) || [];
  
    for (var i = 0; i < children.length; ++i) {
      var match = children[i].id.match(options.format);

      if (!match) continue;
      
      var child = {
        id: encodeURIComponent(match ? match[1] : null),
        element: element,
        parent: parent,
        children: [],
        position: parent.children.length,
        container: $(children[i]).down(options.treeTag)
      }
      
      /* Get the element containing the children and recurse over it */
      if (child.container)
        this._tree(child.container, options, child)
      
      parent.children.push (child);
    }

    return parent; 
  },

  tree: function(element) {
    element = $(element);
    var sortableOptions = this.options(element);
    var options = Object.extend({
      tag: sortableOptions.tag,
      treeTag: sortableOptions.treeTag,
      only: sortableOptions.only,
      name: element.id,
      format: sortableOptions.format
    }, arguments[1] || { });
    
    var root = {
      id: null,
      parent: null,
      children: [],
      container: element,
      position: 0
    }
    
    return Sortable._tree(element, options, root);
  },

  /* Construct a [i] index for a particular node */
  _constructIndex: function(node) {
    var index = '';
    do {
      if (node.id) index = '[' + node.position + ']' + index;
    } while ((node = node.parent) != null);
    return index;
  },

  sequence: function(element) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[1] || { });
    
    return $(this.findElements(element, options) || []).map( function(item) {
      return item.id.match(options.format) ? item.id.match(options.format)[1] : '';
    });
  },

  setSequence: function(element, new_sequence) {
    element = $(element);
    var options = Object.extend(this.options(element), arguments[2] || { });
    
    var nodeMap = { };
    this.findElements(element, options).each( function(n) {
        if (n.id.match(options.format))
            nodeMap[n.id.match(options.format)[1]] = [n, n.parentNode];
        n.parentNode.removeChild(n);
    });
   
    new_sequence.each(function(ident) {
      var n = nodeMap[ident];
      if (n) {
        n[1].appendChild(n[0]);
        delete nodeMap[ident];
      }
    });
  },
  
  serialize: function(element) {
    element = $(element);
    var options = Object.extend(Sortable.options(element), arguments[1] || { });
    var name = encodeURIComponent(
      (arguments[1] && arguments[1].name) ? arguments[1].name : element.id);
    
    if (options.tree) {
      return Sortable.tree(element, arguments[1]).children.map( function (item) {
        return [name + Sortable._constructIndex(item) + "[id]=" + 
                encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
      }).flatten().join('&');
    } else {
      return Sortable.sequence(element, arguments[1]).map( function(item) {
        return name + "[]=" + encodeURIComponent(item);
      }).join('&');
    }
  }
}

// Returns true if child is contained within element
Element.isParent = function(child, element) {
  if (!child.parentNode || child == element) return false;
  if (child.parentNode == element) return true;
  return Element.isParent(child.parentNode, element);
}

Element.findChildren = function(element, only, recursive, tagName) {   
  if(!element.hasChildNodes()) return null;
  tagName = tagName.toUpperCase();
  if(only) only = [only].flatten();
  var elements = [];
  $A(element.childNodes).each( function(e) {
    if(e.tagName && e.tagName.toUpperCase()==tagName &&
      (!only || (Element.classNames(e).detect(function(v) { return only.include(v) }))))
        elements.push(e);
    if(recursive) {
      var grandchildren = Element.findChildren(e, only, recursive, tagName);
      if(grandchildren) elements.push(grandchildren);
    }
  });

  return (elements.length>0 ? elements.flatten() : []);
}

Element.offsetSize = function (element, type) {
  return element['offset' + ((type=='vertical' || type=='height') ? 'Height' : 'Width')];
}
_6https://itunesconnect.apple.com/javascript/dragdrop.js‘MANOOabplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_6https://itunesconnect.apple.com/javascript/controls.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫fV¶n»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptU34868_Wed, 15 Jul 2009 18:30:33 GMT_"1fb3061-8834-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryà4“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
GLU`cir{}Ñåóô§¶®™¨Æ∞≤¥∂∏√≈«…ÀÕœ—”’◊ÂÛ˚	,16AaoèïÆ…œÔ	.;>CG[             l              iOà4// script.aculo.us controls.js v1.8.1, Thu Jan 03 22:07:12 -0500 2008

// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
//           (c) 2005-2007 Ivan Krstic (http://blogs.law.harvard.edu/ivan)
//           (c) 2005-2007 Jon Tirsen (http://www.tirsen.com)
// Contributors:
//  Richard Livsey
//  Rahul Bhargava
//  Rob Wills
// 
// script.aculo.us is freely distributable under the terms of an MIT-style license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// Autocompleter.Base handles all the autocompletion functionality 
// that's independent of the data source for autocompletion. This
// includes drawing the autocompletion menu, observing keyboard
// and mouse events, and similar.
//
// Specific autocompleters need to provide, at the very least, 
// a getUpdatedChoices function that will be invoked every time
// the text inside the monitored textbox changes. This method 
// should get the text for which to provide autocompletion by
// invoking this.getToken(), NOT by directly accessing
// this.element.value. This is to allow incremental tokenized
// autocompletion. Specific auto-completion logic (AJAX, etc)
// belongs in getUpdatedChoices.
//
// Tokenized incremental autocompletion is enabled automatically
// when an autocompleter is instantiated with the 'tokens' option
// in the options parameter, e.g.:
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });
// will incrementally autocomplete with a comma as the token.
// Additionally, ',' in the above example can be replaced with
// a token array, e.g. { tokens: [',', '\n'] } which
// enables autocompletion on multiple tokens. This is most 
// useful when one of the tokens is \n (a newline), as it 
// allows smart autocompletion after linebreaks.

if(typeof Effect == 'undefined')
  throw("controls.js requires including script.aculo.us' effects.js library");

var Autocompleter = { }
Autocompleter.Base = Class.create({
  baseInitialize: function(element, update, options) {
    element          = $(element)
    this.element     = element; 
    this.update      = $(update);  
    this.hasFocus    = false; 
    this.changed     = false; 
    this.active      = false; 
    this.index       = 0;     
    this.entryCount  = 0;
    this.oldElementValue = this.element.value;

    if(this.setOptions)
      this.setOptions(options);
    else
      this.options = options || { };

    this.options.paramName    = this.options.paramName || this.element.name;
    this.options.tokens       = this.options.tokens || [];
    this.options.frequency    = this.options.frequency || 0.4;
    this.options.minChars     = this.options.minChars || 1;
    this.options.onShow       = this.options.onShow || 
      function(element, update){ 
        if(!update.style.position || update.style.position=='absolute') {
          update.style.position = 'absolute';
          Position.clone(element, update, {
            setHeight: false, 
            offsetTop: element.offsetHeight
          });
        }
        Effect.Appear(update,{duration:0.15});
      };
    this.options.onHide = this.options.onHide || 
      function(element, update){ new Effect.Fade(update,{duration:0.15}) };

    if(typeof(this.options.tokens) == 'string') 
      this.options.tokens = new Array(this.options.tokens);
    // Force carriage returns as token delimiters anyway
    if (!this.options.tokens.include('\n'))
      this.options.tokens.push('\n');

    this.observer = null;
    
    this.element.setAttribute('autocomplete','off');

    Element.hide(this.update);

    Event.observe(this.element, 'blur', this.onBlur.bindAsEventListener(this));
    Event.observe(this.element, 'keydown', this.onKeyPress.bindAsEventListener(this));
  },

  show: function() {
    if(Element.getStyle(this.update, 'display')=='none') this.options.onShow(this.element, this.update);
    if(!this.iefix && 
      (Prototype.Browser.IE) &&
      (Element.getStyle(this.update, 'position')=='absolute')) {
      new Insertion.After(this.update, 
       '<iframe id="' + this.update.id + '_iefix" '+
       'style="display:none;position:absolute;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);" ' +
       'src="javascript:false;" frameborder="0" scrolling="no"></iframe>');
      this.iefix = $(this.update.id+'_iefix');
    }
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);
  },
  
  fixIEOverlapping: function() {
    Position.clone(this.update, this.iefix, {setTop:(!this.update.style.height)});
    this.iefix.style.zIndex = 1;
    this.update.style.zIndex = 2;
    Element.show(this.iefix);
  },

  hide: function() {
    this.stopIndicator();
    if(Element.getStyle(this.update, 'display')!='none') this.options.onHide(this.element, this.update);
    if(this.iefix) Element.hide(this.iefix);
  },

  startIndicator: function() {
    if(this.options.indicator) Element.show(this.options.indicator);
  },

  stopIndicator: function() {
    if(this.options.indicator) Element.hide(this.options.indicator);
  },

  onKeyPress: function(event) {
    if(this.active)
      switch(event.keyCode) {
       case Event.KEY_TAB:
       case Event.KEY_RETURN:
         this.selectEntry();
         Event.stop(event);
       case Event.KEY_ESC:
         this.hide();
         this.active = false;
         Event.stop(event);
         return;
       case Event.KEY_LEFT:
       case Event.KEY_RIGHT:
         return;
       case Event.KEY_UP:
         this.markPrevious();
         this.render();
         Event.stop(event);
         return;
       case Event.KEY_DOWN:
         this.markNext();
         this.render();
         Event.stop(event);
         return;
      }
     else 
       if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN || 
         (Prototype.Browser.WebKit > 0 && event.keyCode == 0)) return;

    this.changed = true;
    this.hasFocus = true;

    if(this.observer) clearTimeout(this.observer);
      this.observer = 
        setTimeout(this.onObserverEvent.bind(this), this.options.frequency*1000);
  },

  activate: function() {
    this.changed = false;
    this.hasFocus = true;
    this.getUpdatedChoices();
  },

  onHover: function(event) {
    var element = Event.findElement(event, 'LI');
    if(this.index != element.autocompleteIndex) 
    {
        this.index = element.autocompleteIndex;
        this.render();
    }
    Event.stop(event);
  },
  
  onClick: function(event) {
    var element = Event.findElement(event, 'LI');
    this.index = element.autocompleteIndex;
    this.selectEntry();
    this.hide();
  },
  
  onBlur: function(event) {
    // needed to make click events working
    setTimeout(this.hide.bind(this), 250);
    this.hasFocus = false;
    this.active = false;     
  }, 
  
  render: function() {
    if(this.entryCount > 0) {
      for (var i = 0; i < this.entryCount; i++)
        this.index==i ? 
          Element.addClassName(this.getEntry(i),"selected") : 
          Element.removeClassName(this.getEntry(i),"selected");
      if(this.hasFocus) { 
        this.show();
        this.active = true;
      }
    } else {
      this.active = false;
      this.hide();
    }
  },
  
  markPrevious: function() {
    if(this.index > 0) this.index--
      else this.index = this.entryCount-1;
    this.getEntry(this.index).scrollIntoView(true);
  },
  
  markNext: function() {
    if(this.index < this.entryCount-1) this.index++
      else this.index = 0;
    this.getEntry(this.index).scrollIntoView(false);
  },
  
  getEntry: function(index) {
    return this.update.firstChild.childNodes[index];
  },
  
  getCurrentEntry: function() {
    return this.getEntry(this.index);
  },
  
  selectEntry: function() {
    this.active = false;
    this.updateElement(this.getCurrentEntry());
  },

  updateElement: function(selectedElement) {
    if (this.options.updateElement) {
      this.options.updateElement(selectedElement);
      return;
    }
    var value = '';
    if (this.options.select) {
      var nodes = $(selectedElement).select('.' + this.options.select) || [];
      if(nodes.length>0) value = Element.collectTextNodes(nodes[0], this.options.select);
    } else
      value = Element.collectTextNodesIgnoreClass(selectedElement, 'informal');
    
    var bounds = this.getTokenBounds();
    if (bounds[0] != -1) {
      var newValue = this.element.value.substr(0, bounds[0]);
      var whitespace = this.element.value.substr(bounds[0]).match(/^\s+/);
      if (whitespace)
        newValue += whitespace[0];
      this.element.value = newValue + value + this.element.value.substr(bounds[1]);
    } else {
      this.element.value = value;
    }
    this.oldElementValue = this.element.value;
    this.element.focus();
    
    if (this.options.afterUpdateElement)
      this.options.afterUpdateElement(this.element, selectedElement);
  },

  updateChoices: function(choices) {
    if(!this.changed && this.hasFocus) {
      this.update.innerHTML = choices;
      Element.cleanWhitespace(this.update);
      Element.cleanWhitespace(this.update.down());

      if(this.update.firstChild && this.update.down().childNodes) {
        this.entryCount = 
          this.update.down().childNodes.length;
        for (var i = 0; i < this.entryCount; i++) {
          var entry = this.getEntry(i);
          entry.autocompleteIndex = i;
          this.addObservers(entry);
        }
      } else { 
        this.entryCount = 0;
      }

      this.stopIndicator();
      this.index = 0;
      
      if(this.entryCount==1 && this.options.autoSelect) {
        this.selectEntry();
        this.hide();
      } else {
        this.render();
      }
    }
  },

  addObservers: function(element) {
    Event.observe(element, "mouseover", this.onHover.bindAsEventListener(this));
    Event.observe(element, "click", this.onClick.bindAsEventListener(this));
  },

  onObserverEvent: function() {
    this.changed = false;   
    this.tokenBounds = null;
    if(this.getToken().length>=this.options.minChars) {
      this.getUpdatedChoices();
    } else {
      this.active = false;
      this.hide();
    }
    this.oldElementValue = this.element.value;
  },

  getToken: function() {
    var bounds = this.getTokenBounds();
    return this.element.value.substring(bounds[0], bounds[1]).strip();
  },

  getTokenBounds: function() {
    if (null != this.tokenBounds) return this.tokenBounds;
    var value = this.element.value;
    if (value.strip().empty()) return [-1, 0];
    var diff = arguments.callee.getFirstDifferencePos(value, this.oldElementValue);
    var offset = (diff == this.oldElementValue.length ? 1 : 0);
    var prevTokenPos = -1, nextTokenPos = value.length;
    var tp;
    for (var index = 0, l = this.options.tokens.length; index < l; ++index) {
      tp = value.lastIndexOf(this.options.tokens[index], diff + offset - 1);
      if (tp > prevTokenPos) prevTokenPos = tp;
      tp = value.indexOf(this.options.tokens[index], diff + offset);
      if (-1 != tp && tp < nextTokenPos) nextTokenPos = tp;
    }
    return (this.tokenBounds = [prevTokenPos + 1, nextTokenPos]);
  }
});

Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos = function(newS, oldS) {
  var boundary = Math.min(newS.length, oldS.length);
  for (var index = 0; index < boundary; ++index)
    if (newS[index] != oldS[index])
      return index;
  return boundary;
};

Ajax.Autocompleter = Class.create(Autocompleter.Base, {
  initialize: function(element, update, url, options) {
    this.baseInitialize(element, update, options);
    this.options.asynchronous  = true;
    this.options.onComplete    = this.onComplete.bind(this);
    this.options.defaultParams = this.options.parameters || null;
    this.url                   = url;
  },

  getUpdatedChoices: function() {
    this.startIndicator();
    
    var entry = encodeURIComponent(this.options.paramName) + '=' + 
      encodeURIComponent(this.getToken());

    this.options.parameters = this.options.callback ?
      this.options.callback(this.element, entry) : entry;

    if(this.options.defaultParams) 
      this.options.parameters += '&' + this.options.defaultParams;
    
    new Ajax.Request(this.url, this.options);
  },

  onComplete: function(request) {
    this.updateChoices(request.responseText);
  }
});

// The local array autocompleter. Used when you'd prefer to
// inject an array of autocompletion options into the page, rather
// than sending out Ajax queries, which can be quite slow sometimes.
//
// The constructor takes four parameters. The first two are, as usual,
// the id of the monitored textbox, and id of the autocompletion menu.
// The third is the array you want to autocomplete from, and the fourth
// is the options block.
//
// Extra local autocompletion options:
// - choices - How many autocompletion choices to offer
//
// - partialSearch - If false, the autocompleter will match entered
//                    text only at the beginning of strings in the 
//                    autocomplete array. Defaults to true, which will
//                    match text at the beginning of any *word* in the
//                    strings in the autocomplete array. If you want to
//                    search anywhere in the string, additionally set
//                    the option fullSearch to true (default: off).
//
// - fullSsearch - Search anywhere in autocomplete array strings.
//
// - partialChars - How many characters to enter before triggering
//                   a partial match (unlike minChars, which defines
//                   how many characters are required to do any match
//                   at all). Defaults to 2.
//
// - ignoreCase - Whether to ignore case when autocompleting.
//                 Defaults to true.
//
// It's possible to pass in a custom function as the 'selector' 
// option, if you prefer to write your own autocompletion logic.
// In that case, the other options above will not apply unless
// you support them.

Autocompleter.Local = Class.create(Autocompleter.Base, {
  initialize: function(element, update, array, options) {
    this.baseInitialize(element, update, options);
    this.options.array = array;
  },

  getUpdatedChoices: function() {
    this.updateChoices(this.options.selector(this));
  },

  setOptions: function(options) {
    this.options = Object.extend({
      choices: 10,
      partialSearch: true,
      partialChars: 2,
      ignoreCase: true,
      fullSearch: false,
      selector: function(instance) {
        var ret       = []; // Beginning matches
        var partial   = []; // Inside matches
        var entry     = instance.getToken();
        var count     = 0;

        for (var i = 0; i < instance.options.array.length &&  
          ret.length < instance.options.choices ; i++) { 

          var elem = instance.options.array[i];
          var foundPos = instance.options.ignoreCase ? 
            elem.toLowerCase().indexOf(entry.toLowerCase()) : 
            elem.indexOf(entry);

          while (foundPos != -1) {
            if (foundPos == 0 && elem.length != entry.length) { 
              ret.push("<li><strong>" + elem.substr(0, entry.length) + "</strong>" + 
                elem.substr(entry.length) + "</li>");
              break;
            } else if (entry.length >= instance.options.partialChars && 
              instance.options.partialSearch && foundPos != -1) {
              if (instance.options.fullSearch || /\s/.test(elem.substr(foundPos-1,1))) {
                partial.push("<li>" + elem.substr(0, foundPos) + "<strong>" +
                  elem.substr(foundPos, entry.length) + "</strong>" + elem.substr(
                  foundPos + entry.length) + "</li>");
                break;
              }
            }

            foundPos = instance.options.ignoreCase ? 
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + 1) : 
              elem.indexOf(entry, foundPos + 1);

          }
        }
        if (partial.length)
          ret = ret.concat(partial.slice(0, instance.options.choices - ret.length))
        return "<ul>" + ret.join('') + "</ul>";
      }
    }, options || { });
  }
});

// AJAX in-place editor and collection editor
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April 2007).

// Use this if you notice weird scrolling problems on some browsers,
// the DOM might be a bit confused when this gets called so do this
// waits 1 ms (with setTimeout) until it does the activation
Field.scrollFreeActivate = function(field) {
  setTimeout(function() {
    Field.activate(field);
  }, 1);
}

Ajax.InPlaceEditor = Class.create({
  initialize: function(element, url, options) {
    this.url = url;
    this.element = element = $(element);
    this.prepareOptions();
    this._controls = { };
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION LAYER!!!
    Object.extend(this.options, options || { });
    if (!this.options.formId && this.element.id) {
      this.options.formId = this.element.id + '-inplaceeditor';
      if ($(this.options.formId))
        this.options.formId = '';
    }
    if (this.options.externalControl)
      this.options.externalControl = $(this.options.externalControl);
    if (!this.options.externalControl)
      this.options.externalControlOnly = false;
    this._originalBackground = this.element.getStyle('background-color') || 'transparent';
    this.element.title = this.options.clickToEditText;
    this._boundCancelHandler = this.handleFormCancellation.bind(this);
    this._boundComplete = (this.options.onComplete || Prototype.emptyFunction).bind(this);
    this._boundFailureHandler = this.handleAJAXFailure.bind(this);
    this._boundSubmitHandler = this.handleFormSubmission.bind(this);
    this._boundWrapperHandler = this.wrapUp.bind(this);
    this.registerListeners();
  },
  checkForEscapeOrReturn: function(e) {
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;
    if (Event.KEY_ESC == e.keyCode)
      this.handleFormCancellation(e);
    else if (Event.KEY_RETURN == e.keyCode)
      this.handleFormSubmission(e);
  },
  createControl: function(mode, handler, extraClasses) {
    var control = this.options[mode + 'Control'];
    var text = this.options[mode + 'Text'];
    if ('button' == control) {
      var btn = document.createElement('input');
      btn.type = 'submit';
      btn.value = text;
      btn.className = 'editor_' + mode + '_button';
      if ('cancel' == mode)
        btn.onclick = this._boundCancelHandler;
      this._form.appendChild(btn);
      this._controls[mode] = btn;
    } else if ('link' == control) {
      var link = document.createElement('a');
      link.href = '#';
      link.appendChild(document.createTextNode(text));
      link.onclick = 'cancel' == mode ? this._boundCancelHandler : this._boundSubmitHandler;
      link.className = 'editor_' + mode + '_link';
      if (extraClasses)
        link.className += ' ' + extraClasses;
      this._form.appendChild(link);
      this._controls[mode] = link;
    }
  },
  createEditField: function() {
    var text = (this.options.loadTextURL ? this.options.loadingText : this.getText());
    var fld;
    if (1 >= this.options.rows && !/\r|\n/.test(this.getText())) {
      fld = document.createElement('input');
      fld.type = 'text';
      var size = this.options.size || this.options.cols || 0;
      if (0 < size) fld.size = size;
    } else {
      fld = document.createElement('textarea');
      fld.rows = (1 >= this.options.rows ? this.options.autoRows : this.options.rows);
      fld.cols = this.options.cols || 40;
    }
    fld.name = this.options.paramName;
    fld.value = text; // No HTML breaks conversion anymore
    fld.className = 'editor_field';
    if (this.options.submitOnBlur)
      fld.onblur = this._boundSubmitHandler;
    this._controls.editor = fld;
    if (this.options.loadTextURL)
      this.loadExternalText();
    this._form.appendChild(this._controls.editor);
  },
  createForm: function() {
    var ipe = this;
    function addText(mode, condition) {
      var text = ipe.options['text' + mode + 'Controls'];
      if (!text || condition === false) return;
      ipe._form.appendChild(document.createTextNode(text));
    };
    this._form = $(document.createElement('form'));
    this._form.id = this.options.formId;
    this._form.addClassName(this.options.formClassName);
    this._form.onsubmit = this._boundSubmitHandler;
    this.createEditField();
    if ('textarea' == this._controls.editor.tagName.toLowerCase())
      this._form.appendChild(document.createElement('br'));
    if (this.options.onFormCustomization)
      this.options.onFormCustomization(this, this._form);
    addText('Before', this.options.okControl || this.options.cancelControl);
    this.createControl('ok', this._boundSubmitHandler);
    addText('Between', this.options.okControl && this.options.cancelControl);
    this.createControl('cancel', this._boundCancelHandler, 'editor_cancel');
    addText('After', this.options.okControl || this.options.cancelControl);
  },
  destroy: function() {
    if (this._oldInnerHTML)
      this.element.innerHTML = this._oldInnerHTML;
    this.leaveEditMode();
    this.unregisterListeners();
  },
  enterEditMode: function(e) {
    if (this._saving || this._editing) return;
    this._editing = true;
    this.triggerCallback('onEnterEditMode');
    if (this.options.externalControl)
      this.options.externalControl.hide();
    this.element.hide();
    this.createForm();
    this.element.parentNode.insertBefore(this._form, this.element);
    if (!this.options.loadTextURL)
      this.postProcessEditField();
    if (e) Event.stop(e);
  },
  enterHover: function(e) {
    if (this.options.hoverClassName)
      this.element.addClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onEnterHover');
  },
  getText: function() {
    return this.element.innerHTML;
  },
  handleAJAXFailure: function(transport) {
    this.triggerCallback('onFailure', transport);
    if (this._oldInnerHTML) {
      this.element.innerHTML = this._oldInnerHTML;
      this._oldInnerHTML = null;
    }
  },
  handleFormCancellation: function(e) {
    this.wrapUp();
    if (e) Event.stop(e);
  },
  handleFormSubmission: function(e) {
    var form = this._form;
    var value = $F(this._controls.editor);
    this.prepareSubmission();
    var params = this.options.callback(form, value) || '';
    if (Object.isString(params))
      params = params.toQueryParams();
    params.editorId = this.element.id;
    if (this.options.htmlResponse) {
      var options = Object.extend({ evalScripts: true }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Updater({ success: this.element }, this.url, options);
    } else {
      var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Request(this.url, options);
    }
    if (e) Event.stop(e);
  },
  leaveEditMode: function() {
    this.element.removeClassName(this.options.savingClassName);
    this.removeForm();
    this.leaveHover();
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
    if (this.options.externalControl)
      this.options.externalControl.show();
    this._saving = false;
    this._editing = false;
    this._oldInnerHTML = null;
    this.triggerCallback('onLeaveEditMode');
  },
  leaveHover: function(e) {
    if (this.options.hoverClassName)
      this.element.removeClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onLeaveHover');
  },
  loadExternalText: function() {
    this._form.addClassName(this.options.loadingClassName);
    this._controls.editor.disabled = true;
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._form.removeClassName(this.options.loadingClassName);
        var text = transport.responseText;
        if (this.options.stripLoadedTextTags)
          text = text.stripTags();
        this._controls.editor.value = text;
        this._controls.editor.disabled = false;
        this.postProcessEditField();
      }.bind(this),
      onFailure: this._boundFailureHandler
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },
  postProcessEditField: function() {
    var fpc = this.options.fieldPostCreation;
    if (fpc)
      $(this._controls.editor)['focus' == fpc ? 'focus' : 'activate']();
  },
  prepareOptions: function() {
    this.options = Object.clone(Ajax.InPlaceEditor.DefaultOptions);
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {
      Object.extend(this.options, defs);
    }.bind(this));
  },
  prepareSubmission: function() {
    this._saving = true;
    this.removeForm();
    this.leaveHover();
    this.showSaving();
  },
  registerListeners: function() {
    this._listeners = { };
    var listener;
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {
      listener = this[pair.value].bind(this);
      this._listeners[pair.key] = listener;
      if (!this.options.externalControlOnly)
        this.element.observe(pair.key, listener);
      if (this.options.externalControl)
        this.options.externalControl.observe(pair.key, listener);
    }.bind(this));
  },
  removeForm: function() {
    if (!this._form) return;
    this._form.remove();
    this._form = null;
    this._controls = { };
  },
  showSaving: function() {
    this._oldInnerHTML = this.element.innerHTML;
    this.element.innerHTML = this.options.savingText;
    this.element.addClassName(this.options.savingClassName);
    this.element.style.backgroundColor = this._originalBackground;
    this.element.show();
  },
  triggerCallback: function(cbName, arg) {
    if ('function' == typeof this.options[cbName]) {
      this.options[cbName](this, arg);
    }
  },
  unregisterListeners: function() {
    $H(this._listeners).each(function(pair) {
      if (!this.options.externalControlOnly)
        this.element.stopObserving(pair.key, pair.value);
      if (this.options.externalControl)
        this.options.externalControl.stopObserving(pair.key, pair.value);
    }.bind(this));
  },
  wrapUp: function(transport) {
    this.leaveEditMode();
    // Can't use triggerCallback due to backward compatibility: requires
    // binding + direct element
    this._boundComplete(transport, this.element);
  }
});

Object.extend(Ajax.InPlaceEditor.prototype, {
  dispose: Ajax.InPlaceEditor.prototype.destroy
});

Ajax.InPlaceCollectionEditor = Class.create(Ajax.InPlaceEditor, {
  initialize: function($super, element, url, options) {
    this._extraDefaultOptions = Ajax.InPlaceCollectionEditor.DefaultOptions;
    $super(element, url, options);
  },

  createEditField: function() {
    var list = document.createElement('select');
    list.name = this.options.paramName;
    list.size = 1;
    this._controls.editor = list;
    this._collection = this.options.collection || [];
    if (this.options.loadCollectionURL)
      this.loadCollection();
    else
      this.checkForExternalText();
    this._form.appendChild(this._controls.editor);
  },

  loadCollection: function() {
    this._form.addClassName(this.options.loadingClassName);
    this.showLoadingText(this.options.loadingCollectionText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        var js = transport.responseText.strip();
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check
          throw 'Server returned an invalid collection representation.';
        this._collection = eval(js);
        this.checkForExternalText();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadCollectionURL, options);
  },

  showLoadingText: function(text) {
    this._controls.editor.disabled = true;
    var tempOption = this._controls.editor.firstChild;
    if (!tempOption) {
      tempOption = document.createElement('option');
      tempOption.value = '';
      this._controls.editor.appendChild(tempOption);
      tempOption.selected = true;
    }
    tempOption.update((text || '').stripScripts().stripTags());
  },

  checkForExternalText: function() {
    this._text = this.getText();
    if (this.options.loadTextURL)
      this.loadExternalText();
    else
      this.buildOptionList();
  },

  loadExternalText: function() {
    this.showLoadingText(this.options.loadingText);
    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);
    Object.extend(options, {
      parameters: 'editorId=' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._text = transport.responseText.strip();
        this.buildOptionList();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },

  buildOptionList: function() {
    this._form.removeClassName(this.options.loadingClassName);
    this._collection = this._collection.map(function(entry) {
      return 2 === entry.length ? entry : [entry, entry].flatten();
    });
    var marker = ('value' in this.options) ? this.options.value : this._text;
    var textFound = this._collection.any(function(entry) {
      return entry[0] == marker;
    }.bind(this));
    this._controls.editor.update('');
    var option;
    this._collection.each(function(entry, index) {
      option = document.createElement('option');
      option.value = entry[0];
      option.selected = textFound ? entry[0] == marker : 0 == index;
      option.appendChild(document.createTextNode(entry[1]));
      this._controls.editor.appendChild(option);
    }.bind(this));
    this._controls.editor.disabled = false;
    Field.scrollFreeActivate(this._controls.editor);
  }
});

//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****
//**** This only  exists for a while,  in order to  let ****
//**** users adapt to  the new API.  Read up on the new ****
//**** API and convert your code to it ASAP!            ****

Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions = function(options) {
  if (!options) return;
  function fallback(name, expr) {
    if (name in options || expr === undefined) return;
    options[name] = expr;
  };
  fallback('cancelControl', (options.cancelLink ? 'link' : (options.cancelButton ? 'button' :
    options.cancelLink == options.cancelButton == false ? false : undefined)));
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? 'button' :
    options.okLink == options.okButton == false ? false : undefined)));
  fallback('highlightColor', options.highlightcolor);
  fallback('highlightEndColor', options.highlightendcolor);
};

Object.extend(Ajax.InPlaceEditor, {
  DefaultOptions: {
    ajaxOptions: { },
    autoRows: 3,                                // Use when multi-line w/ rows == 1
    cancelControl: 'link',                      // 'link'|'button'|false
    cancelText: 'cancel',
    clickToEditText: 'Click to edit',
    externalControl: null,                      // id|elt
    externalControlOnly: false,
    fieldPostCreation: 'activate',              // 'activate'|'focus'|false
    formClassName: 'inplaceeditor-form',
    formId: null,                               // id|elt
    highlightColor: '#ffff99',
    highlightEndColor: '#ffffff',
    hoverClassName: '',
    htmlResponse: true,
    loadingClassName: 'inplaceeditor-loading',
    loadingText: 'Loading...',
    okControl: 'button',                        // 'link'|'button'|false
    okText: 'ok',
    paramName: 'value',
    rows: 1,                                    // If 1 and multi-line, uses autoRows
    savingClassName: 'inplaceeditor-saving',
    savingText: 'Saving...',
    size: 0,
    stripLoadedTextTags: false,
    submitOnBlur: false,
    textAfterControls: '',
    textBeforeControls: '',
    textBetweenControls: ''
  },
  DefaultCallbacks: {
    callback: function(form) {
      return Form.serialize(form);
    },
    onComplete: function(transport, element) {
      // For backward compatibility, this one is bound to the IPE, and passes
      // the element directly.  It was too often customized, so we don't break it.
      new Effect.Highlight(element, {
        startcolor: this.options.highlightColor, keepBackgroundImage: true });
    },
    onEnterEditMode: null,
    onEnterHover: function(ipe) {
      ipe.element.style.backgroundColor = ipe.options.highlightColor;
      if (ipe._effect)
        ipe._effect.cancel();
    },
    onFailure: function(transport, ipe) {
      alert('Error communication with the server: ' + transport.responseText.stripTags());
    },
    onFormCustomization: null, // Takes the IPE and its generated form, after editor, before controls.
    onLeaveEditMode: null,
    onLeaveHover: function(ipe) {
      ipe._effect = new Effect.Highlight(ipe.element, {
        startcolor: ipe.options.highlightColor, endcolor: ipe.options.highlightEndColor,
        restorecolor: ipe._originalBackground, keepBackgroundImage: true
      });
    }
  },
  Listeners: {
    click: 'enterEditMode',
    keydown: 'checkForEscapeOrReturn',
    mouseover: 'enterHover',
    mouseout: 'leaveHover'
  }
});

Ajax.InPlaceCollectionEditor.DefaultOptions = {
  loadingCollectionText: 'Loading options...'
};

// Delayed observer, like Form.Element.Observer, 
// but waits for delay after last key input
// Ideal for live-search fields

Form.Element.DelayedObserver = Class.create({
  initialize: function(element, delay, callback) {
    this.delay     = delay || 0.5;
    this.element   = $(element);
    this.callback  = callback;
    this.timer     = null;
    this.lastValue = $F(this.element); 
    Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListener(this));
  },
  delayedListener: function(event) {
    if(this.lastValue == $F(this.element)) return;
    if(this.timer) clearTimeout(this.timer);
    this.timer = setTimeout(this.onTimerEvent.bind(this), this.delay * 1000);
    this.lastValue = $F(this.element);
  },
  onTimerEvent: function() {
    this.timer = null;
    this.callback(this.element, $F(this.element));
  }
});
_6https://itunesconnect.apple.com/javascript/controls.js‘QARSO`bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_7https://itunesconnect.apple.com/javascript/behaviour.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫fmıj»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptT8149_Wed, 15 Jul 2009 18:30:33 GMT_"b5ec95-1fd5-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionary’“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
HMVadjs|~Öçòö•ß©´≠Ø±≥µ∑πƒ∆» ÃŒ–“‘÷ÿÊÙ¸
-27BbpêñØ œÔ-:=BFZ             l              hO’/*
   Behaviour v1.1 by Ben Nolan, June 2005. Based largely on the work
   of Simon Willison (see comments by Simon below).

   Description:
   	
   	Uses css selectors to apply javascript behaviours to enable
   	unobtrusive javascript in html documents.
   	
   Usage:   
   
	var myrules = {
		'b.someclass' : function(element){
			element.onclick = function(){
				alert(this.innerHTML);
			}
		},
		'#someid u' : function(element){
			element.onmouseover = function(){
				this.innerHTML = "BLAH!";
			}
		}
	};
	
	Behaviour.register(myrules);
	
	// Call Behaviour.apply() to re-apply the rules (if you
	// update the dom, etc).

   License:
   
   	This file is entirely BSD licensed.
   	
   More information:
   	
   	http://ripcord.co.nz/behaviour/
   
*/   

var Behaviour = {
	list : new Array,
	
	register : function(sheet){
		Behaviour.list.push(sheet);
	},
	
	start : function(){
		Behaviour.addLoadEvent(function(){
			Behaviour.apply();
		});
	},
	
	apply : function(){
		for (h=0;sheet=Behaviour.list[h];h++){
			for (selector in sheet){
				list = document.getElementsBySelector(selector);
				
				if (!list){
					continue;
				}

				for (i=0;element=list[i];i++){
					sheet[selector](element);
				}
			}
		}
	},
	
	addLoadEvent : function(func){
		var oldonload = window.onload;
		
		if (typeof window.onload != 'function') {
			window.onload = func;
		} else {
			window.onload = function() {
				oldonload();
				func();
			}
		}
	}
}

Behaviour.start();

/*
   The following code is Copyright (C) Simon Willison 2004.

   document.getElementsBySelector(selector)
   - returns an array of element objects from the current document
     matching the CSS selector. Selectors can contain element names, 
     class names and ids and can be nested. For example:
     
       elements = document.getElementsBySelect('div#main p a.external')
     
     Will return an array of all 'a' elements with 'external' in their 
     class attribute that are contained inside 'p' elements that are 
     contained inside the 'div' element which has id="main"

   New in version 0.4: Support for CSS2 and CSS3 attribute selectors:
   See http://www.w3.org/TR/css3-selectors/#attribute-selectors

   Version 0.4 - Simon Willison, March 25th 2003
   -- Works in Phoenix 0.5, Mozilla 1.3, Opera 7, Internet Explorer 6, Internet Explorer 5 on Windows
   -- Opera 7 fails 
*/

function getAllChildren(e) {
  // Returns all children of element. Workaround required for IE5/Windows. Ugh.
  return e.all ? e.all : e.getElementsByTagName('*');
}

document.getElementsBySelector = function(selector) {
  // Attempt to fail gracefully in lesser browsers
  if (!document.getElementsByTagName) {
    return new Array();
  }
  // Split selector in to tokens
  var tokens = selector.split(' ');
  var currentContext = new Array(document);
  for (var i = 0; i < tokens.length; i++) {
    token = tokens[i].replace(/^\s+/,'').replace(/\s+$/,'');;
    if (token.indexOf('#') > -1) {
      // Token is an ID selector
      var bits = token.split('#');
      var tagName = bits[0];
      var id = bits[1];
      var element = document.getElementById(id);
      if (tagName && element.nodeName.toLowerCase() != tagName) {
        // tag with that ID not found, return false
        return new Array();
      }
      // Set currentContext to contain just this element
      currentContext = new Array(element);
      continue; // Skip to next token
    }
    if (token.indexOf('.') > -1) {
      // Token contains a class selector
      var bits = token.split('.');
      var tagName = bits[0];
      var className = bits[1];
      if (!tagName) {
        tagName = '*';
      }
      // Get elements matching tag, filter them for class selector
      var found = new Array;
      var foundCount = 0;
      for (var h = 0; h < currentContext.length; h++) {
        var elements;
        if (tagName == '*') {
            elements = getAllChildren(currentContext[h]);
        } else {
            elements = currentContext[h].getElementsByTagName(tagName);
        }
        for (var j = 0; j < elements.length; j++) {
          found[foundCount++] = elements[j];
        }
      }
      currentContext = new Array;
      var currentContextIndex = 0;
      for (var k = 0; k < found.length; k++) {
        if (found[k].className && found[k].className.match(new RegExp('\\b'+className+'\\b'))) {
          currentContext[currentContextIndex++] = found[k];
        }
      }
      continue; // Skip to next token
    }
    // Code to deal with attribute selectors
    if (token.match(/^(\w*)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/)) {
      var tagName = RegExp.$1;
      var attrName = RegExp.$2;
      var attrOperator = RegExp.$3;
      var attrValue = RegExp.$4;
      if (!tagName) {
        tagName = '*';
      }
      // Grab all of the tagName elements within current context
      var found = new Array;
      var foundCount = 0;
      for (var h = 0; h < currentContext.length; h++) {
        var elements;
        if (tagName == '*') {
            elements = getAllChildren(currentContext[h]);
        } else {
            elements = currentContext[h].getElementsByTagName(tagName);
        }
        for (var j = 0; j < elements.length; j++) {
          found[foundCount++] = elements[j];
        }
      }
      currentContext = new Array;
      var currentContextIndex = 0;
      var checkFunction; // This function will be used to filter the elements
      switch (attrOperator) {
        case '=': // Equality
          checkFunction = function(e) { return (e.getAttribute(attrName) == attrValue); };
          break;
        case '~': // Match one of space seperated words 
          checkFunction = function(e) { return (e.getAttribute(attrName).match(new RegExp('\\b'+attrValue+'\\b'))); };
          break;
        case '|': // Match start with value followed by optional hyphen
          checkFunction = function(e) { return (e.getAttribute(attrName).match(new RegExp('^'+attrValue+'-?'))); };
          break;
        case '^': // Match starts with value
          checkFunction = function(e) { return (e.getAttribute(attrName).indexOf(attrValue) == 0); };
          break;
        case '$': // Match ends with value - fails with "Warning" in Opera 7
          checkFunction = function(e) { return (e.getAttribute(attrName).lastIndexOf(attrValue) == e.getAttribute(attrName).length - attrValue.length); };
          break;
        case '*': // Match ends with value
          checkFunction = function(e) { return (e.getAttribute(attrName).indexOf(attrValue) > -1); };
          break;
        default :
          // Just test for existence of attribute
          checkFunction = function(e) { return e.getAttribute(attrName); };
      }
      currentContext = new Array;
      var currentContextIndex = 0;
      for (var k = 0; k < found.length; k++) {
        if (checkFunction(found[k])) {
          currentContext[currentContextIndex++] = found[k];
        }
      }
      // alert('Attribute Selector: '+tagName+' '+attrName+' '+attrOperator+' '+attrValue);
      continue; // Skip to next token
    }
    
    if (!currentContext[0]){
    	return;
    }
    
    // If we get here, token is JUST an element (not a class or ID selector)
    tagName = token;
    var found = new Array;
    var foundCount = 0;
    for (var h = 0; h < currentContext.length; h++) {
      var elements = currentContext[h].getElementsByTagName(tagName);
      for (var j = 0; j < elements.length; j++) {
        found[foundCount++] = elements[j];
      }
    }
    currentContext = found;
  }
  return currentContext;
}

/* That revolting regular expression explained 
/^(\w+)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/
  \---/  \---/\-------------/    \-------/
    |      |         |               |
    |      |         |           The value
    |      |    ~,|,^,$,* or =
    |   Attribute 
   Tag
*/
_7https://itunesconnect.apple.com/javascript/behaviour.js‘UAVWO_bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_2https://itunesconnect.apple.com/javascript/rico.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫fyCÚ»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptU90115_Wed, 15 Jul 2009 18:30:33 GMT_"b5ec93-16003-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionary `“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
CHQ\_enwyÄàìï†¢§¶®™¨Æ∞≤¥ø¡√≈«…ÀÕœ—”·Ô˜(-2=]kãë™≈ÀÎ*7<AEY             l              gO `/**
  *
  *  Copyright 2005 Sabre Airline Solutions
  *
  *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
  *  file except in compliance with the License. You may obtain a copy of the License at
  *
  *         http://www.apache.org/licenses/LICENSE-2.0
  *
  *  Unless required by applicable law or agreed to in writing, software distributed under the
  *  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  *  either express or implied. See the License for the specific language governing permissions
  *  and limitations under the License.
  **/


//-------------------- rico.js
var Rico = {
  Version: '1.1.2',
  prototypeVersion: parseFloat(Prototype.Version.split(".")[0] + "." + Prototype.Version.split(".")[1])
}

if((typeof Prototype=='undefined') || Rico.prototypeVersion < 1.3)
      throw("Rico requires the Prototype JavaScript framework >= 1.3");

Rico.ArrayExtensions = new Array();

if (Object.prototype.extend) {
   Rico.ArrayExtensions[ Rico.ArrayExtensions.length ] = Object.prototype.extend;
}else{
  Object.prototype.extend = function(object) {
    return Object.extend.apply(this, [this, object]);
  }
  Rico.ArrayExtensions[ Rico.ArrayExtensions.length ] = Object.prototype.extend;
}

if (Array.prototype.push) {
   Rico.ArrayExtensions[ Rico.ArrayExtensions.length ] = Array.prototype.push;
}

if (!Array.prototype.remove) {
   Array.prototype.remove = function(dx) {
      if( isNaN(dx) || dx > this.length )
         return false;
      for( var i=0,n=0; i<this.length; i++ )
         if( i != dx )
            this[n++]=this[i];
      this.length-=1;
   };
  Rico.ArrayExtensions[ Rico.ArrayExtensions.length ] = Array.prototype.remove;
}

if (!Array.prototype.removeItem) {
   Array.prototype.removeItem = function(item) {
      for ( var i = 0 ; i < this.length ; i++ )
         if ( this[i] == item ) {
            this.remove(i);
            break;
         }
   };
  Rico.ArrayExtensions[ Rico.ArrayExtensions.length ] = Array.prototype.removeItem;
}

if (!Array.prototype.indices) {
   Array.prototype.indices = function() {
      var indexArray = new Array();
      for ( index in this ) {
         var ignoreThis = false;
         for ( var i = 0 ; i < Rico.ArrayExtensions.length ; i++ ) {
            if ( this[index] == Rico.ArrayExtensions[i] ) {
               ignoreThis = true;
               break;
            }
         }
         if ( !ignoreThis )
            indexArray[ indexArray.length ] = index;
      }
      return indexArray;
   }
  Rico.ArrayExtensions[ Rico.ArrayExtensions.length ] = Array.prototype.indices;
}

// Create the loadXML method and xml getter for Mozilla
if ( window.DOMParser &&
	  window.XMLSerializer &&
	  window.Node && Node.prototype && Node.prototype.__defineGetter__ ) {

   if (!Document.prototype.loadXML) {
      Document.prototype.loadXML = function (s) {
         var doc2 = (new DOMParser()).parseFromString(s, "text/xml");
         while (this.hasChildNodes())
            this.removeChild(this.lastChild);

         for (var i = 0; i < doc2.childNodes.length; i++) {
            this.appendChild(this.importNode(doc2.childNodes[i], true));
         }
      };
	}

	Document.prototype.__defineGetter__( "xml",
	   function () {
		   return (new XMLSerializer()).serializeToString(this);
	   }
	 );
}

document.getElementsByTagAndClassName = function(tagName, className) {
  if ( tagName == null )
     tagName = '*';

  var children = document.getElementsByTagName(tagName) || document.all;
  var elements = new Array();

  if ( className == null )
    return children;

  for (var i = 0; i < children.length; i++) {
    var child = children[i];
    var classNames = child.className.split(' ');
    for (var j = 0; j < classNames.length; j++) {
      if (classNames[j] == className) {
        elements.push(child);
        break;
      }
    }
  }

  return elements;
}


//-------------------- ricoAccordion.js
Rico.Accordion = Class.create();

Rico.Accordion.prototype = {

   initialize: function(container, options) {
      this.container            = $(container);
      this.lastExpandedTab      = null;
      this.accordionTabs        = new Array();
      this.setOptions(options);
      this._attachBehaviors();
      if(!container) return;

      this.container.style.borderBottom = '1px solid ' + this.options.borderColor;
      // validate onloadShowTab
       if (this.options.onLoadShowTab >= this.accordionTabs.length)
        this.options.onLoadShowTab = 0;

      // set the initial visual state...
      for ( var i=0 ; i < this.accordionTabs.length ; i++ )
      {
        if (i != this.options.onLoadShowTab){
         this.accordionTabs[i].collapse();
         this.accordionTabs[i].content.style.display = 'none';
        }
      }
      this.lastExpandedTab = this.accordionTabs[this.options.onLoadShowTab];
      if (this.options.panelHeight == 'auto'){
          var tabToCheck = (this.options.onloadShowTab === 0)? 1 : 0;
          var titleBarSize = parseInt(RicoUtil.getElementsComputedStyle(this.accordionTabs[tabToCheck].titleBar, 'height'));
          if (isNaN(titleBarSize))
            titleBarSize = this.accordionTabs[tabToCheck].titleBar.offsetHeight;
          
          var totalTitleBarSize = this.accordionTabs.length * titleBarSize;
          var parentHeight = parseInt(RicoUtil.getElementsComputedStyle(this.container.parentNode, 'height'));
          if (isNaN(parentHeight))
            parentHeight = this.container.parentNode.offsetHeight;
          
          this.options.panelHeight = parentHeight - totalTitleBarSize-2;
      }
      
      this.lastExpandedTab.content.style.height = this.options.panelHeight + "px";
      this.lastExpandedTab.showExpanded();
      this.lastExpandedTab.titleBar.style.fontWeight = this.options.expandedFontWeight;

   },

   setOptions: function(options) {
      this.options = {
         expandedBg          : '#63699c',
         hoverBg             : '#63699c',
         collapsedBg         : '#6b79a5',
         expandedTextColor   : '#ffffff',
         expandedFontWeight  : 'bold',
         hoverTextColor      : '#ffffff',
         collapsedTextColor  : '#ced7ef',
         collapsedFontWeight : 'normal',
         hoverTextColor      : '#ffffff',
         borderColor         : '#1f669b',
         panelHeight         : 200,
         onHideTab           : null,
         onShowTab           : null,
         onLoadShowTab       : 0
      }
      Object.extend(this.options, options || {});
   },

   showTabByIndex: function( anIndex, animate ) {
      var doAnimate = arguments.length == 1 ? true : animate;
      this.showTab( this.accordionTabs[anIndex], doAnimate );
   },

   showTab: function( accordionTab, animate ) {
     if ( this.lastExpandedTab == accordionTab )
        return;

      var doAnimate = arguments.length == 1 ? true : animate;

      if ( this.options.onHideTab )
         this.options.onHideTab(this.lastExpandedTab);

      this.lastExpandedTab.showCollapsed(); 
      var accordion = this;
      var lastExpandedTab = this.lastExpandedTab;

      this.lastExpandedTab.content.style.height = (this.options.panelHeight - 1) + 'px';
      accordionTab.content.style.display = '';

      accordionTab.titleBar.style.fontWeight = this.options.expandedFontWeight;

      if ( doAnimate ) {
         new Rico.Effect.AccordionSize( this.lastExpandedTab.content,
                                   accordionTab.content,
                                   1,
                                   this.options.panelHeight,
                                   100, 10,
                                   { complete: function() {accordion.showTabDone(lastExpandedTab)} } );
         this.lastExpandedTab = accordionTab;
      }
      else {
         this.lastExpandedTab.content.style.height = "1px";
         accordionTab.content.style.height = this.options.panelHeight + "px";
         this.lastExpandedTab = accordionTab;
         this.showTabDone(lastExpandedTab);
      }
   },

   showTabDone: function(collapsedTab) {
      collapsedTab.content.style.display = 'none';
      this.lastExpandedTab.showExpanded();
      if ( this.options.onShowTab )
         this.options.onShowTab(this.lastExpandedTab);
   },

   _attachBehaviors: function() {
      var panels = this._getDirectChildrenByTag(this.container, 'DIV');
      for ( var i = 0 ; i < panels.length ; i++ ) {

         var tabChildren = this._getDirectChildrenByTag(panels[i],'DIV');
         if ( tabChildren.length != 2 )
            continue; // unexpected

         var tabTitleBar   = tabChildren[0];
         var tabContentBox = tabChildren[1];
         this.accordionTabs.push( new Rico.Accordion.Tab(this,tabTitleBar,tabContentBox) );
      }
   },

   _getDirectChildrenByTag: function(e, tagName) {
      var kids = new Array();
      var allKids = e.childNodes;
      for( var i = 0 ; i < allKids.length ; i++ )
         if ( allKids[i] && allKids[i].tagName && allKids[i].tagName == tagName )
            kids.push(allKids[i]);
      return kids;
   }

};

Rico.Accordion.Tab = Class.create();

Rico.Accordion.Tab.prototype = {

   initialize: function(accordion, titleBar, content) {
      this.accordion = accordion;
      this.titleBar  = titleBar;
      this.content   = content;
      this._attachBehaviors();
   },

   collapse: function() {
      this.showCollapsed();
      this.content.style.height = "1px";
   },

   showCollapsed: function() {
      this.expanded = false;
      this.titleBar.style.backgroundColor = this.accordion.options.collapsedBg;
      this.titleBar.style.color           = this.accordion.options.collapsedTextColor;
      this.titleBar.style.fontWeight      = this.accordion.options.collapsedFontWeight;
      this.content.style.overflow = "hidden";
   },

   showExpanded: function() {
      this.expanded = true;
      this.titleBar.style.backgroundColor = this.accordion.options.expandedBg;
      this.titleBar.style.color           = this.accordion.options.expandedTextColor;
      this.content.style.overflow         = "auto";
   },

   titleBarClicked: function(e) {
      if ( this.accordion.lastExpandedTab == this )
         return;
      this.accordion.showTab(this);
   },

   hover: function(e) {
		this.titleBar.style.backgroundColor = this.accordion.options.hoverBg;
		this.titleBar.style.color           = this.accordion.options.hoverTextColor;
   },

   unhover: function(e) {
      if ( this.expanded ) {
         this.titleBar.style.backgroundColor = this.accordion.options.expandedBg;
         this.titleBar.style.color           = this.accordion.options.expandedTextColor;
      }
      else {
         this.titleBar.style.backgroundColor = this.accordion.options.collapsedBg;
         this.titleBar.style.color           = this.accordion.options.collapsedTextColor;
      }
   },

   _attachBehaviors: function() {
      this.content.style.border = "1px solid " + this.accordion.options.borderColor;
      this.content.style.borderTopWidth    = "0px";
      this.content.style.borderBottomWidth = "0px";
      this.content.style.margin            = "0px";

      this.titleBar.onclick     = this.titleBarClicked.bindAsEventListener(this);
      this.titleBar.onmouseover = this.hover.bindAsEventListener(this);
      this.titleBar.onmouseout  = this.unhover.bindAsEventListener(this);
   }

};


//-------------------- ricoAjaxEngine.js
Rico.AjaxEngine = Class.create();

Rico.AjaxEngine.prototype = {

   initialize: function() {
      this.ajaxElements = new Array();
      this.ajaxObjects  = new Array();
      this.requestURLS  = new Array();
      this.options = {};
   },

   registerAjaxElement: function( anId, anElement ) {
      if ( !anElement )
         anElement = $(anId);
      this.ajaxElements[anId] = anElement;
   },

   registerAjaxObject: function( anId, anObject ) {
      this.ajaxObjects[anId] = anObject;
   },

   registerRequest: function (requestLogicalName, requestURL) {
      this.requestURLS[requestLogicalName] = requestURL;
   },

   sendRequest: function(requestName, options) {
      // Allow for backwards Compatibility
      if ( arguments.length >= 2 )
       if (typeof arguments[1] == 'string')
         options = {parameters: this._createQueryString(arguments, 1)};
      this.sendRequestWithData(requestName, null, options);
   },

   sendRequestWithData: function(requestName, xmlDocument, options) {
      var requestURL = this.requestURLS[requestName];
      if ( requestURL == null )
         return;

      // Allow for backwards Compatibility
      if ( arguments.length >= 3 )
        if (typeof arguments[2] == 'string')
          options.parameters = this._createQueryString(arguments, 2);

      new Ajax.Request(requestURL, this._requestOptions(options,xmlDocument));
   },

   sendRequestAndUpdate: function(requestName,container,options) {
      // Allow for backwards Compatibility
      if ( arguments.length >= 3 )
        if (typeof arguments[2] == 'string')
          options.parameters = this._createQueryString(arguments, 2);

      this.sendRequestWithDataAndUpdate(requestName, null, container, options);
   },

   sendRequestWithDataAndUpdate: function(requestName,xmlDocument,container,options) {
      var requestURL = this.requestURLS[requestName];
      if ( requestURL == null )
         return;

      // Allow for backwards Compatibility
      if ( arguments.length >= 4 )
        if (typeof arguments[3] == 'string')
          options.parameters = this._createQueryString(arguments, 3);

      var updaterOptions = this._requestOptions(options,xmlDocument);

      new Ajax.Updater(container, requestURL, updaterOptions);
   },

   // Private -- not part of intended engine API --------------------------------------------------------------------

   _requestOptions: function(options,xmlDoc) {
      var requestHeaders = ['X-Rico-Version', Rico.Version ];
      var sendMethod = 'post';
      if ( xmlDoc == null )
        if (Rico.prototypeVersion < 1.4)
        requestHeaders.push( 'Content-type', 'text/xml' );
      else
          sendMethod = 'get';
      (!options) ? options = {} : '';

      if (!options._RicoOptionsProcessed){
      // Check and keep any user onComplete functions
        if (options.onComplete)
             options.onRicoComplete = options.onComplete;
        // Fix onComplete
        if (options.overrideOnComplete)
          options.onComplete = options.overrideOnComplete;
        else
          options.onComplete = this._onRequestComplete.bind(this);
        options._RicoOptionsProcessed = true;
      }

     // Set the default options and extend with any user options
     this.options = {
                     requestHeaders: requestHeaders,
                     parameters:     options.parameters,
                     postBody:       xmlDoc,
                     method:         sendMethod,
                     onComplete:     options.onComplete
                    };
     // Set any user options:
     Object.extend(this.options, options);
     return this.options;
   },

   _createQueryString: function( theArgs, offset ) {
      var queryString = ""
      for ( var i = offset ; i < theArgs.length ; i++ ) {
          if ( i != offset )
            queryString += "&";

          var anArg = theArgs[i];

          if ( anArg.name != undefined && anArg.value != undefined ) {
            queryString += anArg.name +  "=" + escape(anArg.value);
          }
          else {
             var ePos  = anArg.indexOf('=');
             var argName  = anArg.substring( 0, ePos );
             var argValue = anArg.substring( ePos + 1 );
             queryString += argName + "=" + escape(argValue);
          }
      }
      return queryString;
   },

   _onRequestComplete : function(request) {
      if(!request)
          return;
      // User can set an onFailure option - which will be called by prototype
      if (request.status != 200)
        return;

      var response = request.responseXML.getElementsByTagName("ajax-response");
      if (response == null || response.length != 1)
         return;
      this._processAjaxResponse( response[0].childNodes );
      
      // Check if user has set a onComplete function
      var onRicoComplete = this.options.onRicoComplete;
      if (onRicoComplete != null)
          onRicoComplete();
   },

   _processAjaxResponse: function( xmlResponseElements ) {
      for ( var i = 0 ; i < xmlResponseElements.length ; i++ ) {
         var responseElement = xmlResponseElements[i];

         // only process nodes of type element.....
         if ( responseElement.nodeType != 1 )
            continue;

         var responseType = responseElement.getAttribute("type");
         var responseId   = responseElement.getAttribute("id");

         if ( responseType == "object" )
            this._processAjaxObjectUpdate( this.ajaxObjects[ responseId ], responseElement );
         else if ( responseType == "element" )
            this._processAjaxElementUpdate( this.ajaxElements[ responseId ], responseElement );
         else
            alert('unrecognized AjaxResponse type : ' + responseType );
      }
   },

   _processAjaxObjectUpdate: function( ajaxObject, responseElement ) {
      ajaxObject.ajaxUpdate( responseElement );
   },

   _processAjaxElementUpdate: function( ajaxElement, responseElement ) {
      ajaxElement.innerHTML = RicoUtil.getContentAsString(responseElement);
   }

}

var ajaxEngine = new Rico.AjaxEngine();


//-------------------- ricoColor.js
Rico.Color = Class.create();

Rico.Color.prototype = {

   initialize: function(red, green, blue) {
      this.rgb = { r: red, g : green, b : blue };
   },

   setRed: function(r) {
      this.rgb.r = r;
   },

   setGreen: function(g) {
      this.rgb.g = g;
   },

   setBlue: function(b) {
      this.rgb.b = b;
   },

   setHue: function(h) {

      // get an HSB model, and set the new hue...
      var hsb = this.asHSB();
      hsb.h = h;

      // convert back to RGB...
      this.rgb = Rico.Color.HSBtoRGB(hsb.h, hsb.s, hsb.b);
   },

   setSaturation: function(s) {
      // get an HSB model, and set the new hue...
      var hsb = this.asHSB();
      hsb.s = s;

      // convert back to RGB and set values...
      this.rgb = Rico.Color.HSBtoRGB(hsb.h, hsb.s, hsb.b);
   },

   setBrightness: function(b) {
      // get an HSB model, and set the new hue...
      var hsb = this.asHSB();
      hsb.b = b;

      // convert back to RGB and set values...
      this.rgb = Rico.Color.HSBtoRGB( hsb.h, hsb.s, hsb.b );
   },

   darken: function(percent) {
      var hsb  = this.asHSB();
      this.rgb = Rico.Color.HSBtoRGB(hsb.h, hsb.s, Math.max(hsb.b - percent,0));
   },

   brighten: function(percent) {
      var hsb  = this.asHSB();
      this.rgb = Rico.Color.HSBtoRGB(hsb.h, hsb.s, Math.min(hsb.b + percent,1));
   },

   blend: function(other) {
      this.rgb.r = Math.floor((this.rgb.r + other.rgb.r)/2);
      this.rgb.g = Math.floor((this.rgb.g + other.rgb.g)/2);
      this.rgb.b = Math.floor((this.rgb.b + other.rgb.b)/2);
   },

   isBright: function() {
      var hsb = this.asHSB();
      return this.asHSB().b > 0.5;
   },

   isDark: function() {
      return ! this.isBright();
   },

   asRGB: function() {
      return "rgb(" + this.rgb.r + "," + this.rgb.g + "," + this.rgb.b + ")";
   },

   asHex: function() {
      return "#" + this.rgb.r.toColorPart() + this.rgb.g.toColorPart() + this.rgb.b.toColorPart();
   },

   asHSB: function() {
      return Rico.Color.RGBtoHSB(this.rgb.r, this.rgb.g, this.rgb.b);
   },

   toString: function() {
      return this.asHex();
   }

};

Rico.Color.createFromHex = function(hexCode) {
  if(hexCode.length==4) {
    var shortHexCode = hexCode; 
    var hexCode = '#';
    for(var i=1;i<4;i++) hexCode += (shortHexCode.charAt(i) + 
shortHexCode.charAt(i));
  }
   if ( hexCode.indexOf('#') == 0 )
      hexCode = hexCode.substring(1);
   var red   = hexCode.substring(0,2);
   var green = hexCode.substring(2,4);
   var blue  = hexCode.substring(4,6);
   return new Rico.Color( parseInt(red,16), parseInt(green,16), parseInt(blue,16) );
}

/**
 * Factory method for creating a color from the background of
 * an HTML element.
 */
Rico.Color.createColorFromBackground = function(elem) {

   var actualColor = RicoUtil.getElementsComputedStyle($(elem), "backgroundColor", "background-color");

   if ( actualColor == "transparent" && elem.parentNode )
      return Rico.Color.createColorFromBackground(elem.parentNode);

   if ( actualColor == null )
      return new Rico.Color(255,255,255);

   if ( actualColor.indexOf("rgb(") == 0 ) {
      var colors = actualColor.substring(4, actualColor.length - 1 );
      var colorArray = colors.split(",");
      return new Rico.Color( parseInt( colorArray[0] ),
                            parseInt( colorArray[1] ),
                            parseInt( colorArray[2] )  );

   }
   else if ( actualColor.indexOf("#") == 0 ) {
      return Rico.Color.createFromHex(actualColor);
   }
   else
      return new Rico.Color(255,255,255);
}

Rico.Color.HSBtoRGB = function(hue, saturation, brightness) {

   var red   = 0;
	var green = 0;
	var blue  = 0;

   if (saturation == 0) {
      red = parseInt(brightness * 255.0 + 0.5);
	   green = red;
	   blue = red;
	}
	else {
      var h = (hue - Math.floor(hue)) * 6.0;
      var f = h - Math.floor(h);
      var p = brightness * (1.0 - saturation);
      var q = brightness * (1.0 - saturation * f);
      var t = brightness * (1.0 - (saturation * (1.0 - f)));

      switch (parseInt(h)) {
         case 0:
            red   = (brightness * 255.0 + 0.5);
            green = (t * 255.0 + 0.5);
            blue  = (p * 255.0 + 0.5);
            break;
         case 1:
            red   = (q * 255.0 + 0.5);
            green = (brightness * 255.0 + 0.5);
            blue  = (p * 255.0 + 0.5);
            break;
         case 2:
            red   = (p * 255.0 + 0.5);
            green = (brightness * 255.0 + 0.5);
            blue  = (t * 255.0 + 0.5);
            break;
         case 3:
            red   = (p * 255.0 + 0.5);
            green = (q * 255.0 + 0.5);
            blue  = (brightness * 255.0 + 0.5);
            break;
         case 4:
            red   = (t * 255.0 + 0.5);
            green = (p * 255.0 + 0.5);
            blue  = (brightness * 255.0 + 0.5);
            break;
          case 5:
            red   = (brightness * 255.0 + 0.5);
            green = (p * 255.0 + 0.5);
            blue  = (q * 255.0 + 0.5);
            break;
	    }
	}

   return { r : parseInt(red), g : parseInt(green) , b : parseInt(blue) };
}

Rico.Color.RGBtoHSB = function(r, g, b) {

   var hue;
   var saturation;
   var brightness;

   var cmax = (r > g) ? r : g;
   if (b > cmax)
      cmax = b;

   var cmin = (r < g) ? r : g;
   if (b < cmin)
      cmin = b;

   brightness = cmax / 255.0;
   if (cmax != 0)
      saturation = (cmax - cmin)/cmax;
   else
      saturation = 0;

   if (saturation == 0)
      hue = 0;
   else {
      var redc   = (cmax - r)/(cmax - cmin);
    	var greenc = (cmax - g)/(cmax - cmin);
    	var bluec  = (cmax - b)/(cmax - cmin);

    	if (r == cmax)
    	   hue = bluec - greenc;
    	else if (g == cmax)
    	   hue = 2.0 + redc - bluec;
      else
    	   hue = 4.0 + greenc - redc;

    	hue = hue / 6.0;
    	if (hue < 0)
    	   hue = hue + 1.0;
   }

   return { h : hue, s : saturation, b : brightness };
}


//-------------------- ricoCorner.js
Rico.Corner = {

   round: function(e, options) {
      var e = $(e);
      this._setOptions(options);

      var color = this.options.color;
      if ( this.options.color == "fromElement" )
         color = this._background(e);

      var bgColor = this.options.bgColor;
      if ( this.options.bgColor == "fromParent" )
         bgColor = this._background(e.offsetParent);

      this._roundCornersImpl(e, color, bgColor);
   },

   _roundCornersImpl: function(e, color, bgColor) {
      if(this.options.border)
         this._renderBorder(e,bgColor);
      if(this._isTopRounded())
         this._roundTopCorners(e,color,bgColor);
      if(this._isBottomRounded())
         this._roundBottomCorners(e,color,bgColor);
   },

   _renderBorder: function(el,bgColor) {
      var borderValue = "1px solid " + this._borderColor(bgColor);
      var borderL = "border-left: "  + borderValue;
      var borderR = "border-right: " + borderValue;
      var style   = "style='" + borderL + ";" + borderR +  "'";
      el.innerHTML = "<div " + style + ">" + el.innerHTML + "</div>"
   },

   _roundTopCorners: function(el, color, bgColor) {
      var corner = this._createCorner(bgColor);
      for(var i=0 ; i < this.options.numSlices ; i++ )
         corner.appendChild(this._createCornerSlice(color,bgColor,i,"top"));
      el.style.paddingTop = 0;
      el.insertBefore(corner,el.firstChild);
   },

   _roundBottomCorners: function(el, color, bgColor) {
      var corner = this._createCorner(bgColor);
      for(var i=(this.options.numSlices-1) ; i >= 0 ; i-- )
         corner.appendChild(this._createCornerSlice(color,bgColor,i,"bottom"));
      el.style.paddingBottom = 0;
      el.appendChild(corner);
   },

   _createCorner: function(bgColor) {
      var corner = document.createElement("div");
      corner.style.backgroundColor = (this._isTransparent() ? "transparent" : bgColor);
      return corner;
   },

   _createCornerSlice: function(color,bgColor, n, position) {
      var slice = document.createElement("span");

      var inStyle = slice.style;
      inStyle.backgroundColor = color;
      inStyle.display  = "block";
      inStyle.height   = "1px";
      inStyle.overflow = "hidden";
      inStyle.fontSize = "1px";

      var borderColor = this._borderColor(color,bgColor);
      if ( this.options.border && n == 0 ) {
         inStyle.borderTopStyle    = "solid";
         inStyle.borderTopWidth    = "1px";
         inStyle.borderLeftWidth   = "0px";
         inStyle.borderRightWidth  = "0px";
         inStyle.borderBottomWidth = "0px";
         inStyle.height            = "0px"; // assumes css compliant box model
         inStyle.borderColor       = borderColor;
      }
      else if(borderColor) {
         inStyle.borderColor = borderColor;
         inStyle.borderStyle = "solid";
         inStyle.borderWidth = "0px 1px";
      }

      if ( !this.options.compact && (n == (this.options.numSlices-1)) )
         inStyle.height = "2px";

      this._setMargin(slice, n, position);
      this._setBorder(slice, n, position);
      return slice;
   },

   _setOptions: function(options) {
      this.options = {
         corners : "all",
         color   : "fromElement",
         bgColor : "fromParent",
         blend   : true,
         border  : false,
         compact : false
      }
      Object.extend(this.options, options || {});

      this.options.numSlices = this.options.compact ? 2 : 4;
      if ( this._isTransparent() )
         this.options.blend = false;
   },

   _whichSideTop: function() {
      if ( this._hasString(this.options.corners, "all", "top") )
         return "";

      if ( this.options.corners.indexOf("tl") >= 0 && this.options.corners.indexOf("tr") >= 0 )
         return "";

      if (this.options.corners.indexOf("tl") >= 0)
         return "left";
      else if (this.options.corners.indexOf("tr") >= 0)
          return "right";
      return "";
   },

   _whichSideBottom: function() {
      if ( this._hasString(this.options.corners, "all", "bottom") )
         return "";

      if ( this.options.corners.indexOf("bl")>=0 && this.options.corners.indexOf("br")>=0 )
         return "";

      if(this.options.corners.indexOf("bl") >=0)
         return "left";
      else if(this.options.corners.indexOf("br")>=0)
         return "right";
      return "";
   },

   _borderColor : function(color,bgColor) {
      if ( color == "transparent" )
         return bgColor;
      else if ( this.options.border )
         return this.options.border;
      else if ( this.options.blend )
         return this._blend( bgColor, color );
      else
         return "";
   },


   _setMargin: function(el, n, corners) {
      var marginSize = this._marginSize(n);
      var whichSide = corners == "top" ? this._whichSideTop() : this._whichSideBottom();

      if ( whichSide == "left" ) {
         el.style.marginLeft = marginSize + "px"; el.style.marginRight = "0px";
      }
      else if ( whichSide == "right" ) {
         el.style.marginRight = marginSize + "px"; el.style.marginLeft  = "0px";
      }
      else {
         el.style.marginLeft = marginSize + "px"; el.style.marginRight = marginSize + "px";
      }
   },

   _setBorder: function(el,n,corners) {
      var borderSize = this._borderSize(n);
      var whichSide = corners == "top" ? this._whichSideTop() : this._whichSideBottom();
      if ( whichSide == "left" ) {
         el.style.borderLeftWidth = borderSize + "px"; el.style.borderRightWidth = "0px";
      }
      else if ( whichSide == "right" ) {
         el.style.borderRightWidth = borderSize + "px"; el.style.borderLeftWidth  = "0px";
      }
      else {
         el.style.borderLeftWidth = borderSize + "px"; el.style.borderRightWidth = borderSize + "px";
      }
      if (this.options.border != false)
        el.style.borderLeftWidth = borderSize + "px"; el.style.borderRightWidth = borderSize + "px";
   },

   _marginSize: function(n) {
      if ( this._isTransparent() )
         return 0;

      var marginSizes          = [ 5, 3, 2, 1 ];
      var blendedMarginSizes   = [ 3, 2, 1, 0 ];
      var compactMarginSizes   = [ 2, 1 ];
      var smBlendedMarginSizes = [ 1, 0 ];

      if ( this.options.compact && this.options.blend )
         return smBlendedMarginSizes[n];
      else if ( this.options.compact )
         return compactMarginSizes[n];
      else if ( this.options.blend )
         return blendedMarginSizes[n];
      else
         return marginSizes[n];
   },

   _borderSize: function(n) {
      var transparentBorderSizes = [ 5, 3, 2, 1 ];
      var blendedBorderSizes     = [ 2, 1, 1, 1 ];
      var compactBorderSizes     = [ 1, 0 ];
      var actualBorderSizes      = [ 0, 2, 0, 0 ];

      if ( this.options.compact && (this.options.blend || this._isTransparent()) )
         return 1;
      else if ( this.options.compact )
         return compactBorderSizes[n];
      else if ( this.options.blend )
         return blendedBorderSizes[n];
      else if ( this.options.border )
         return actualBorderSizes[n];
      else if ( this._isTransparent() )
         return transparentBorderSizes[n];
      return 0;
   },

   _hasString: function(str) { for(var i=1 ; i<arguments.length ; i++) if (str.indexOf(arguments[i]) >= 0) return true; return false; },
   _blend: function(c1, c2) { var cc1 = Rico.Color.createFromHex(c1); cc1.blend(Rico.Color.createFromHex(c2)); return cc1; },
   _background: function(el) { try { return Rico.Color.createColorFromBackground(el).asHex(); } catch(err) { return "#ffffff"; } },
   _isTransparent: function() { return this.options.color == "transparent"; },
   _isTopRounded: function() { return this._hasString(this.options.corners, "all", "top", "tl", "tr"); },
   _isBottomRounded: function() { return this._hasString(this.options.corners, "all", "bottom", "bl", "br"); },
   _hasSingleTextChild: function(el) { return el.childNodes.length == 1 && el.childNodes[0].nodeType == 3; }
}


//-------------------- ricoDragAndDrop.js
Rico.DragAndDrop = Class.create();

Rico.DragAndDrop.prototype = {

   initialize: function() {
      this.dropZones                = new Array();
      this.draggables               = new Array();
      this.currentDragObjects       = new Array();
      this.dragElement              = null;
      this.lastSelectedDraggable    = null;
      this.currentDragObjectVisible = false;
      this.interestedInMotionEvents = false;
      this._mouseDown = this._mouseDownHandler.bindAsEventListener(this);
      this._mouseMove = this._mouseMoveHandler.bindAsEventListener(this);
      this._mouseUp = this._mouseUpHandler.bindAsEventListener(this);
   },

   registerDropZone: function(aDropZone) {
      this.dropZones[ this.dropZones.length ] = aDropZone;
   },

   deregisterDropZone: function(aDropZone) {
      var newDropZones = new Array();
      var j = 0;
      for ( var i = 0 ; i < this.dropZones.length ; i++ ) {
         if ( this.dropZones[i] != aDropZone )
            newDropZones[j++] = this.dropZones[i];
      }

      this.dropZones = newDropZones;
   },

   clearDropZones: function() {
      this.dropZones = new Array();
   },

   registerDraggable: function( aDraggable ) {
      this.draggables[ this.draggables.length ] = aDraggable;
      this._addMouseDownHandler( aDraggable );
   },

   clearSelection: function() {
      for ( var i = 0 ; i < this.currentDragObjects.length ; i++ )
         this.currentDragObjects[i].deselect();
      this.currentDragObjects = new Array();
      this.lastSelectedDraggable = null;
   },

   hasSelection: function() {
      return this.currentDragObjects.length > 0;
   },

   setStartDragFromElement: function( e, mouseDownElement ) {
      this.origPos = RicoUtil.toDocumentPosition(mouseDownElement);
      this.startx = e.screenX - this.origPos.x
      this.starty = e.screenY - this.origPos.y
      //this.startComponentX = e.layerX ? e.layerX : e.offsetX;
      //this.startComponentY = e.layerY ? e.layerY : e.offsetY;
      //this.adjustedForDraggableSize = false;

      this.interestedInMotionEvents = this.hasSelection();
      this._terminateEvent(e);
   },

   updateSelection: function( draggable, extendSelection ) {
      if ( ! extendSelection )
         this.clearSelection();

      if ( draggable.isSelected() ) {
         this.currentDragObjects.removeItem(draggable);
         draggable.deselect();
         if ( draggable == this.lastSelectedDraggable )
            this.lastSelectedDraggable = null;
      }
      else {
         this.currentDragObjects[ this.currentDragObjects.length ] = draggable;
         draggable.select();
         this.lastSelectedDraggable = draggable;
      }
   },

   _mouseDownHandler: function(e) {
      if ( arguments.length == 0 )
         e = event;

      // if not button 1 ignore it...
      var nsEvent = e.which != undefined;
      if ( (nsEvent && e.which != 1) || (!nsEvent && e.button != 1))
         return;

      var eventTarget      = e.target ? e.target : e.srcElement;
      var draggableObject  = eventTarget.draggable;

      var candidate = eventTarget;
      while (draggableObject == null && candidate.parentNode) {
         candidate = candidate.parentNode;
         draggableObject = candidate.draggable;
      }
   
      if ( draggableObject == null )
         return;

      this.updateSelection( draggableObject, e.ctrlKey );

      // clear the drop zones postion cache...
      if ( this.hasSelection() )
         for ( var i = 0 ; i < this.dropZones.length ; i++ )
            this.dropZones[i].clearPositionCache();

      this.setStartDragFromElement( e, draggableObject.getMouseDownHTMLElement() );
   },


   _mouseMoveHandler: function(e) {
      var nsEvent = e.which != undefined;
      if ( !this.interestedInMotionEvents ) {
         //this._terminateEvent(e);
         return;
      }

      if ( ! this.hasSelection() )
         return;

      if ( ! this.currentDragObjectVisible )
         this._startDrag(e);

      if ( !this.activatedDropZones )
         this._activateRegisteredDropZones();

      //if ( !this.adjustedForDraggableSize )
      //   this._adjustForDraggableSize(e);

      this._updateDraggableLocation(e);
      this._updateDropZonesHover(e);

      this._terminateEvent(e);
   },

   _makeDraggableObjectVisible: function(e)
   {
      if ( !this.hasSelection() )
         return;

      var dragElement;
      if ( this.currentDragObjects.length > 1 )
         dragElement = this.currentDragObjects[0].getMultiObjectDragGUI(this.currentDragObjects);
      else
         dragElement = this.currentDragObjects[0].getSingleObjectDragGUI();

      // go ahead and absolute position it...
      if ( RicoUtil.getElementsComputedStyle(dragElement, "position")  != "absolute" )
         dragElement.style.position = "absolute";

      // need to parent him into the document...
      if ( dragElement.parentNode == null || dragElement.parentNode.nodeType == 11 )
         document.body.appendChild(dragElement);

      this.dragElement = dragElement;
      this._updateDraggableLocation(e);

      this.currentDragObjectVisible = true;
   },

   /**
   _adjustForDraggableSize: function(e) {
      var dragElementWidth  = this.dragElement.offsetWidth;
      var dragElementHeight = this.dragElement.offsetHeight;
      if ( this.startComponentX > dragElementWidth )
         this.startx -= this.startComponentX - dragElementWidth + 2;
      if ( e.offsetY ) {
         if ( this.startComponentY > dragElementHeight )
            this.starty -= this.startComponentY - dragElementHeight + 2;
      }
      this.adjustedForDraggableSize = true;
   },
   **/

   _leftOffset: function(e) {
	   return e.offsetX ? document.body.scrollLeft : 0
	},

   _topOffset: function(e) {
	   return e.offsetY ? document.body.scrollTop:0
	},

		
   _updateDraggableLocation: function(e) {
      var dragObjectStyle = this.dragElement.style;
      dragObjectStyle.left = (e.screenX + this._leftOffset(e) - this.startx) + "px"
      dragObjectStyle.top  = (e.screenY + this._topOffset(e) - this.starty) + "px";
   },

   _updateDropZonesHover: function(e) {
      var n = this.dropZones.length;
      for ( var i = 0 ; i < n ; i++ ) {
         if ( ! this._mousePointInDropZone( e, this.dropZones[i] ) )
            this.dropZones[i].hideHover();
      }

      for ( var i = 0 ; i < n ; i++ ) {
         if ( this._mousePointInDropZone( e, this.dropZones[i] ) ) {
            if ( this.dropZones[i].canAccept(this.currentDragObjects) )
               this.dropZones[i].showHover();
         }
      }
   },

   _startDrag: function(e) {
      for ( var i = 0 ; i < this.currentDragObjects.length ; i++ )
         this.currentDragObjects[i].startDrag();

      this._makeDraggableObjectVisible(e);
   },

   _mouseUpHandler: function(e) {
      if ( ! this.hasSelection() )
         return;

      var nsEvent = e.which != undefined;
      if ( (nsEvent && e.which != 1) || (!nsEvent && e.button != 1))
         return;

      this.interestedInMotionEvents = false;

      if ( this.dragElement == null ) {
         this._terminateEvent(e);
         return;
      }

      if ( this._placeDraggableInDropZone(e) )
         this._completeDropOperation(e);
      else {
         this._terminateEvent(e);
         new Rico.Effect.Position( this.dragElement,
                              this.origPos.x,
                              this.origPos.y,
                              200,
                              20,
                              { complete : this._doCancelDragProcessing.bind(this) } );
      }

     Event.stopObserving(document.body, "mousemove", this._mouseMove);
     Event.stopObserving(document.body, "mouseup",  this._mouseUp);
   },

   _retTrue: function () {
      return true;
   },

   _completeDropOperation: function(e) {
      if ( this.dragElement != this.currentDragObjects[0].getMouseDownHTMLElement() ) {
         if ( this.dragElement.parentNode != null )
            this.dragElement.parentNode.removeChild(this.dragElement);
      }

      this._deactivateRegisteredDropZones();
      this._endDrag();
      this.clearSelection();
      this.dragElement = null;
      this.currentDragObjectVisible = false;
      this._terminateEvent(e);
   },

   _doCancelDragProcessing: function() {
      this._cancelDrag();

        if ( this.dragElement != this.currentDragObjects[0].getMouseDownHTMLElement() && this.dragElement)
           if ( this.dragElement.parentNode != null )
              this.dragElement.parentNode.removeChild(this.dragElement);


      this._deactivateRegisteredDropZones();
      this.dragElement = null;
      this.currentDragObjectVisible = false;
   },

   _placeDraggableInDropZone: function(e) {
      var foundDropZone = false;
      var n = this.dropZones.length;
      for ( var i = 0 ; i < n ; i++ ) {
         if ( this._mousePointInDropZone( e, this.dropZones[i] ) ) {
            if ( this.dropZones[i].canAccept(this.currentDragObjects) ) {
               this.dropZones[i].hideHover();
               this.dropZones[i].accept(this.currentDragObjects);
               foundDropZone = true;
               break;
            }
         }
      }

      return foundDropZone;
   },

   _cancelDrag: function() {
      for ( var i = 0 ; i < this.currentDragObjects.length ; i++ )
         this.currentDragObjects[i].cancelDrag();
   },

   _endDrag: function() {
      for ( var i = 0 ; i < this.currentDragObjects.length ; i++ )
         this.currentDragObjects[i].endDrag();
   },

   _mousePointInDropZone: function( e, dropZone ) {

      var absoluteRect = dropZone.getAbsoluteRect();

      return e.clientX  > absoluteRect.left + this._leftOffset(e) &&
             e.clientX  < absoluteRect.right + this._leftOffset(e) &&
             e.clientY  > absoluteRect.top + this._topOffset(e)   &&
             e.clientY  < absoluteRect.bottom + this._topOffset(e);
   },

   _addMouseDownHandler: function( aDraggable )
   {
       htmlElement  = aDraggable.getMouseDownHTMLElement();
      if ( htmlElement  != null ) { 
         htmlElement.draggable = aDraggable;
         Event.observe(htmlElement , "mousedown", this._onmousedown.bindAsEventListener(this));
         Event.observe(htmlElement, "mousedown", this._mouseDown);
      }
   },

   _activateRegisteredDropZones: function() {
      var n = this.dropZones.length;
      for ( var i = 0 ; i < n ; i++ ) {
         var dropZone = this.dropZones[i];
         if ( dropZone.canAccept(this.currentDragObjects) )
            dropZone.activate();
      }

      this.activatedDropZones = true;
   },

   _deactivateRegisteredDropZones: function() {
      var n = this.dropZones.length;
      for ( var i = 0 ; i < n ; i++ )
         this.dropZones[i].deactivate();
      this.activatedDropZones = false;
   },

   _onmousedown: function () {
     Event.observe(document.body, "mousemove", this._mouseMove);
     Event.observe(document.body, "mouseup",  this._mouseUp);
   },

   _terminateEvent: function(e) {
      if ( e.stopPropagation != undefined )
         e.stopPropagation();
      else if ( e.cancelBubble != undefined )
         e.cancelBubble = true;

      if ( e.preventDefault != undefined )
         e.preventDefault();
      else
         e.returnValue = false;
   },


	   initializeEventHandlers: function() {
	      if ( typeof document.implementation != "undefined" &&
	         document.implementation.hasFeature("HTML",   "1.0") &&
	         document.implementation.hasFeature("Events", "2.0") &&
	         document.implementation.hasFeature("CSS",    "2.0") ) {
	         document.addEventListener("mouseup",   this._mouseUpHandler.bindAsEventListener(this),  false);
	         document.addEventListener("mousemove", this._mouseMoveHandler.bindAsEventListener(this), false);
	      }
	      else {
	         document.attachEvent( "onmouseup",   this._mouseUpHandler.bindAsEventListener(this) );
	         document.attachEvent( "onmousemove", this._mouseMoveHandler.bindAsEventListener(this) );
	      }
	   }
	}

	var dndMgr = new Rico.DragAndDrop();
	dndMgr.initializeEventHandlers();


//-------------------- ricoDraggable.js
Rico.Draggable = Class.create();

Rico.Draggable.prototype = {

   initialize: function( type, htmlElement ) {
      this.type          = type;
      this.htmlElement   = $(htmlElement);
      this.selected      = false;
   },

   /**
    *   Returns the HTML element that should have a mouse down event
    *   added to it in order to initiate a drag operation
    *
    **/
   getMouseDownHTMLElement: function() {
      return this.htmlElement;
   },

   select: function() {
      this.selected = true;

      if ( this.showingSelected )
         return;

      var htmlElement = this.getMouseDownHTMLElement();

      var color = Rico.Color.createColorFromBackground(htmlElement);
      color.isBright() ? color.darken(0.033) : color.brighten(0.033);

      this.saveBackground = RicoUtil.getElementsComputedStyle(htmlElement, "backgroundColor", "background-color");
      htmlElement.style.backgroundColor = color.asHex();
      this.showingSelected = true;
   },

   deselect: function() {
      this.selected = false;
      if ( !this.showingSelected )
         return;

      var htmlElement = this.getMouseDownHTMLElement();

      htmlElement.style.backgroundColor = this.saveBackground;
      this.showingSelected = false;
   },

   isSelected: function() {
      return this.selected;
   },

   startDrag: function() {
   },

   cancelDrag: function() {
   },

   endDrag: function() {
   },

   getSingleObjectDragGUI: function() {
      return this.htmlElement;
   },

   getMultiObjectDragGUI: function( draggables ) {
      return this.htmlElement;
   },

   getDroppedGUI: function() {
      return this.htmlElement;
   },

   toString: function() {
      return this.type + ":" + this.htmlElement + ":";
   }

}


//-------------------- ricoDropzone.js
Rico.Dropzone = Class.create();

Rico.Dropzone.prototype = {

   initialize: function( htmlElement ) {
      this.htmlElement  = $(htmlElement);
      this.absoluteRect = null;
   },

   getHTMLElement: function() {
      return this.htmlElement;
   },

   clearPositionCache: function() {
      this.absoluteRect = null;
   },

   getAbsoluteRect: function() {
      if ( this.absoluteRect == null ) {
         var htmlElement = this.getHTMLElement();
         var pos = RicoUtil.toViewportPosition(htmlElement);

         this.absoluteRect = {
            top:    pos.y,
            left:   pos.x,
            bottom: pos.y + htmlElement.offsetHeight,
            right:  pos.x + htmlElement.offsetWidth
         };
      }
      return this.absoluteRect;
   },

   activate: function() {
      var htmlElement = this.getHTMLElement();
      if (htmlElement == null  || this.showingActive)
         return;

      this.showingActive = true;
      this.saveBackgroundColor = htmlElement.style.backgroundColor;

      var fallbackColor = "#ffea84";
      var currentColor = Rico.Color.createColorFromBackground(htmlElement);
      if ( currentColor == null )
         htmlElement.style.backgroundColor = fallbackColor;
      else {
         currentColor.isBright() ? currentColor.darken(0.2) : currentColor.brighten(0.2);
         htmlElement.style.backgroundColor = currentColor.asHex();
      }
   },

   deactivate: function() {
      var htmlElement = this.getHTMLElement();
      if (htmlElement == null || !this.showingActive)
         return;

      htmlElement.style.backgroundColor = this.saveBackgroundColor;
      this.showingActive = false;
      this.saveBackgroundColor = null;
   },

   showHover: function() {
      var htmlElement = this.getHTMLElement();
      if ( htmlElement == null || this.showingHover )
         return;

      this.saveBorderWidth = htmlElement.style.borderWidth;
      this.saveBorderStyle = htmlElement.style.borderStyle;
      this.saveBorderColor = htmlElement.style.borderColor;

      this.showingHover = true;
      htmlElement.style.borderWidth = "1px";
      htmlElement.style.borderStyle = "solid";
      //htmlElement.style.borderColor = "#ff9900";
      htmlElement.style.borderColor = "#ffff00";
   },

   hideHover: function() {
      var htmlElement = this.getHTMLElement();
      if ( htmlElement == null || !this.showingHover )
         return;

      htmlElement.style.borderWidth = this.saveBorderWidth;
      htmlElement.style.borderStyle = this.saveBorderStyle;
      htmlElement.style.borderColor = this.saveBorderColor;
      this.showingHover = false;
   },

   canAccept: function(draggableObjects) {
      return true;
   },

   accept: function(draggableObjects) {
      var htmlElement = this.getHTMLElement();
      if ( htmlElement == null )
         return;

      n = draggableObjects.length;
      for ( var i = 0 ; i < n ; i++ )
      {
         var theGUI = draggableObjects[i].getDroppedGUI();
         if ( RicoUtil.getElementsComputedStyle( theGUI, "position" ) == "absolute" )
         {
            theGUI.style.position = "static";
            theGUI.style.top = "";
            theGUI.style.top = "";
         }
         htmlElement.appendChild(theGUI);
      }
   }
}


//-------------------- ricoEffects.js

Rico.Effect = {};

Rico.Effect.SizeAndPosition = Class.create();
Rico.Effect.SizeAndPosition.prototype = {

   initialize: function(element, x, y, w, h, duration, steps, options) {
      this.element = $(element);
      this.x = x;
      this.y = y;
      this.w = w;
      this.h = h;
      this.duration = duration;
      this.steps    = steps;
      this.options  = arguments[7] || {};

      this.sizeAndPosition();
   },

   sizeAndPosition: function() {
      if (this.isFinished()) {
         if(this.options.complete) this.options.complete(this);
         return;
      }

      if (this.timer)
         clearTimeout(this.timer);

      var stepDuration = Math.round(this.duration/this.steps) ;

      // Get original values: x,y = top left corner;  w,h = width height
      var currentX = this.element.offsetLeft;
      var currentY = this.element.offsetTop;
      var currentW = this.element.offsetWidth;
      var currentH = this.element.offsetHeight;

      // If values not set, or zero, we do not modify them, and take original as final as well
      this.x = (this.x) ? this.x : currentX;
      this.y = (this.y) ? this.y : currentY;
      this.w = (this.w) ? this.w : currentW;
      this.h = (this.h) ? this.h : currentH;

      // how much do we need to modify our values for each step?
      var difX = this.steps >  0 ? (this.x - currentX)/this.steps : 0;
      var difY = this.steps >  0 ? (this.y - currentY)/this.steps : 0;
      var difW = this.steps >  0 ? (this.w - currentW)/this.steps : 0;
      var difH = this.steps >  0 ? (this.h - currentH)/this.steps : 0;

      this.moveBy(difX, difY);
      this.resizeBy(difW, difH);

      this.duration -= stepDuration;
      this.steps--;

      this.timer = setTimeout(this.sizeAndPosition.bind(this), stepDuration);
   },

   isFinished: function() {
      return this.steps <= 0;
   },

   moveBy: function( difX, difY ) {
      var currentLeft = this.element.offsetLeft;
      var currentTop  = this.element.offsetTop;
      var intDifX     = parseInt(difX);
      var intDifY     = parseInt(difY);

      var style = this.element.style;
      if ( intDifX != 0 )
         style.left = (currentLeft + intDifX) + "px";
      if ( intDifY != 0 )
         style.top  = (currentTop + intDifY) + "px";
   },

   resizeBy: function( difW, difH ) {
      var currentWidth  = this.element.offsetWidth;
      var currentHeight = this.element.offsetHeight;
      var intDifW       = parseInt(difW);
      var intDifH       = parseInt(difH);

      var style = this.element.style;
      if ( intDifW != 0 )
         style.width   = (currentWidth  + intDifW) + "px";
      if ( intDifH != 0 )
         style.height  = (currentHeight + intDifH) + "px";
   }
}

Rico.Effect.Size = Class.create();
Rico.Effect.Size.prototype = {

   initialize: function(element, w, h, duration, steps, options) {
      new Rico.Effect.SizeAndPosition(element, null, null, w, h, duration, steps, options);
  }
}

Rico.Effect.Position = Class.create();
Rico.Effect.Position.prototype = {

   initialize: function(element, x, y, duration, steps, options) {
      new Rico.Effect.SizeAndPosition(element, x, y, null, null, duration, steps, options);
  }
}

Rico.Effect.Round = Class.create();
Rico.Effect.Round.prototype = {

   initialize: function(tagName, className, options) {
      var elements = document.getElementsByTagAndClassName(tagName,className);
      for ( var i = 0 ; i < elements.length ; i++ )
         Rico.Corner.round( elements[i], options );
   }
};

Rico.Effect.FadeTo = Class.create();
Rico.Effect.FadeTo.prototype = {

   initialize: function( element, opacity, duration, steps, options) {
      this.element  = $(element);
      this.opacity  = opacity;
      this.duration = duration;
      this.steps    = steps;
      this.options  = arguments[4] || {};
      this.fadeTo();
   },

   fadeTo: function() {
      if (this.isFinished()) {
         if(this.options.complete) this.options.complete(this);
         return;
      }

      if (this.timer)
         clearTimeout(this.timer);

      var stepDuration = Math.round(this.duration/this.steps) ;
      var currentOpacity = this.getElementOpacity();
      var delta = this.steps > 0 ? (this.opacity - currentOpacity)/this.steps : 0;

      this.changeOpacityBy(delta);
      this.duration -= stepDuration;
      this.steps--;

      this.timer = setTimeout(this.fadeTo.bind(this), stepDuration);
   },

   changeOpacityBy: function(v) {
      var currentOpacity = this.getElementOpacity();
      var newOpacity = Math.max(0, Math.min(currentOpacity+v, 1));
      this.element.ricoOpacity = newOpacity;

      this.element.style.filter = "alpha(opacity:"+Math.round(newOpacity*100)+")";
      this.element.style.opacity = newOpacity; /*//*/;
   },

   isFinished: function() {
      return this.steps <= 0;
   },

   getElementOpacity: function() {
      if ( this.element.ricoOpacity == undefined ) {
         var opacity = RicoUtil.getElementsComputedStyle(this.element, 'opacity');
         this.element.ricoOpacity = opacity != undefined ? opacity : 1.0;
      }
      return parseFloat(this.element.ricoOpacity);
   }
}

Rico.Effect.AccordionSize = Class.create();

Rico.Effect.AccordionSize.prototype = {

   initialize: function(e1, e2, start, end, duration, steps, options) {
      this.e1       = $(e1);
      this.e2       = $(e2);
      this.start    = start;
      this.end      = end;
      this.duration = duration;
      this.steps    = steps;
      this.options  = arguments[6] || {};

      this.accordionSize();
   },

   accordionSize: function() {

      if (this.isFinished()) {
         // just in case there are round errors or such...
         this.e1.style.height = this.start + "px";
         this.e2.style.height = this.end + "px";

         if(this.options.complete)
            this.options.complete(this);
         return;
      }

      if (this.timer)
         clearTimeout(this.timer);

      var stepDuration = Math.round(this.duration/this.steps) ;

      var diff = this.steps > 0 ? (parseInt(this.e1.offsetHeight) - this.start)/this.steps : 0;
      this.resizeBy(diff);

      this.duration -= stepDuration;
      this.steps--;

      this.timer = setTimeout(this.accordionSize.bind(this), stepDuration);
   },

   isFinished: function() {
      return this.steps <= 0;
   },

   resizeBy: function(diff) {
      var h1Height = this.e1.offsetHeight;
      var h2Height = this.e2.offsetHeight;
      var intDiff = parseInt(diff);
      if ( diff != 0 ) {
         this.e1.style.height = (h1Height - intDiff) + "px";
         this.e2.style.height = (h2Height + intDiff) + "px";
      }
   }

};


//-------------------- ricoLiveGrid.js
// Rico.LiveGridMetaData -----------------------------------------------------

Rico.LiveGridMetaData = Class.create();

Rico.LiveGridMetaData.prototype = {

   initialize: function( pageSize, totalRows, columnCount, options ) {
      this.pageSize  = pageSize;
      this.totalRows = totalRows;
      this.setOptions(options);
      this.ArrowHeight = 16;
      this.columnCount = columnCount;
   },

   setOptions: function(options) {
      this.options = {
         largeBufferSize    : 7.0,   // 7 pages
         nearLimitFactor    : 0.2    // 20% of buffer
      };
      Object.extend(this.options, options || {});
   },

   getPageSize: function() {
      return this.pageSize;
   },

   getTotalRows: function() {
      return this.totalRows;
   },

   setTotalRows: function(n) {
      this.totalRows = n;
   },

   getLargeBufferSize: function() {
      return parseInt(this.options.largeBufferSize * this.pageSize);
   },

   getLimitTolerance: function() {
      return parseInt(this.getLargeBufferSize() * this.options.nearLimitFactor);
   }
};

// Rico.LiveGridScroller -----------------------------------------------------

Rico.LiveGridScroller = Class.create();

Rico.LiveGridScroller.prototype = {

   initialize: function(liveGrid, viewPort) {
      this.isIE = navigator.userAgent.toLowerCase().indexOf("msie") >= 0;
      this.liveGrid = liveGrid;
      this.metaData = liveGrid.metaData;
      this.createScrollBar();
      this.scrollTimeout = null;
      this.lastScrollPos = 0;
      this.viewPort = viewPort;
      this.rows = new Array();
   },

   isUnPlugged: function() {
      return this.scrollerDiv.onscroll == null;
   },

   plugin: function() {
      this.scrollerDiv.onscroll = this.handleScroll.bindAsEventListener(this);
   },

   unplug: function() {
      this.scrollerDiv.onscroll = null;
   },

   sizeIEHeaderHack: function() {
      if ( !this.isIE ) return;
      var headerTable = $(this.liveGrid.tableId + "_header");
      if ( headerTable )
         headerTable.rows[0].cells[0].style.width =
            (headerTable.rows[0].cells[0].offsetWidth + 1) + "px";
   },

   createScrollBar: function() {
      var visibleHeight = this.liveGrid.viewPort.visibleHeight();
      // create the outer div...
      this.scrollerDiv  = document.createElement("div");
      var scrollerStyle = this.scrollerDiv.style;
      scrollerStyle.borderRight = this.liveGrid.options.scrollerBorderRight;
      scrollerStyle.position    = "relative";
      scrollerStyle.left        = this.isIE ? "-6px" : "-3px";
      scrollerStyle.width       = "19px";
      scrollerStyle.height      = visibleHeight + "px";
      scrollerStyle.overflow    = "auto";

      // create the inner div...
      this.heightDiv = document.createElement("div");
      this.heightDiv.style.width  = "1px";

      this.heightDiv.style.height = parseInt(visibleHeight *
                        this.metaData.getTotalRows()/this.metaData.getPageSize()) + "px" ;
      this.scrollerDiv.appendChild(this.heightDiv);
      this.scrollerDiv.onscroll = this.handleScroll.bindAsEventListener(this);

     var table = this.liveGrid.table;
     table.parentNode.parentNode.insertBefore( this.scrollerDiv, table.parentNode.nextSibling );
  	  var eventName = this.isIE ? "mousewheel" : "DOMMouseScroll";
	  Event.observe(table, eventName, 
	                function(evt) {
	                   if (evt.wheelDelta>=0 || evt.detail < 0) //wheel-up
	                      this.scrollerDiv.scrollTop -= (2*this.viewPort.rowHeight);
	                   else
	                      this.scrollerDiv.scrollTop += (2*this.viewPort.rowHeight);
	                   this.handleScroll(false);
	                }.bindAsEventListener(this), 
	                false);
     },

   updateSize: function() {
      var table = this.liveGrid.table;
      var visibleHeight = this.viewPort.visibleHeight();
      this.heightDiv.style.height = parseInt(visibleHeight *
                                  this.metaData.getTotalRows()/this.metaData.getPageSize()) + "px";
   },

   rowToPixel: function(rowOffset) {
      return (rowOffset / this.metaData.getTotalRows()) * this.heightDiv.offsetHeight
   },
   
   moveScroll: function(rowOffset) {
      this.scrollerDiv.scrollTop = this.rowToPixel(rowOffset);
      if ( this.metaData.options.onscroll )
         this.metaData.options.onscroll( this.liveGrid, rowOffset );
   },

   handleScroll: function() {
     if ( this.scrollTimeout )
         clearTimeout( this.scrollTimeout );

    var scrollDiff = this.lastScrollPos-this.scrollerDiv.scrollTop;
    if (scrollDiff != 0.00) {
       var r = this.scrollerDiv.scrollTop % this.viewPort.rowHeight;
       if (r != 0) {
          this.unplug();
          if ( scrollDiff < 0 ) {
             this.scrollerDiv.scrollTop += (this.viewPort.rowHeight-r);
          } else {
             this.scrollerDiv.scrollTop -= r;
          }
          this.plugin();
       }
    }
    var contentOffset = parseInt(this.scrollerDiv.scrollTop / this.viewPort.rowHeight);
    this.liveGrid.requestContentRefresh(contentOffset);
    this.viewPort.scrollTo(this.scrollerDiv.scrollTop);

    if ( this.metaData.options.onscroll )
       this.metaData.options.onscroll( this.liveGrid, contentOffset );

    this.scrollTimeout = setTimeout(this.scrollIdle.bind(this), 1200 );
    this.lastScrollPos = this.scrollerDiv.scrollTop;

   },

   scrollIdle: function() {
      if ( this.metaData.options.onscrollidle )
         this.metaData.options.onscrollidle();
   }
};

// Rico.LiveGridBuffer -----------------------------------------------------

Rico.LiveGridBuffer = Class.create();

Rico.LiveGridBuffer.prototype = {

   initialize: function(metaData, viewPort) {
      this.startPos = 0;
      this.size     = 0;
      this.metaData = metaData;
      this.rows     = new Array();
      this.updateInProgress = false;
      this.viewPort = viewPort;
      this.maxBufferSize = metaData.getLargeBufferSize() * 2;
      this.maxFetchSize = metaData.getLargeBufferSize();
      this.lastOffset = 0;
   },

   getBlankRow: function() {
      if (!this.blankRow ) {
         this.blankRow = new Array();
         for ( var i=0; i < this.metaData.columnCount ; i++ ) 
            this.blankRow[i] = "&nbsp;";
     }
     return this.blankRow;
   },

   loadRows: function(ajaxResponse) {
      var rowsElement = ajaxResponse.getElementsByTagName('rows')[0];
      this.updateUI = rowsElement.getAttribute("update_ui") == "true"
      var newRows = new Array()
      var trs = rowsElement.getElementsByTagName("tr");
      for ( var i=0 ; i < trs.length; i++ ) {
         var row = newRows[i] = new Array(); 
         var cells = trs[i].getElementsByTagName("td");
         for ( var j=0; j < cells.length ; j++ ) {
            var cell = cells[j];
            var convertSpaces = cell.getAttribute("convert_spaces") == "true";
            var cellContent = RicoUtil.getContentAsString(cell);
            row[j] = convertSpaces ? this.convertSpaces(cellContent) : cellContent;
            if (!row[j]) 
               row[j] = '&nbsp;';
         }
      }
      return newRows;
   },
      
   update: function(ajaxResponse, start) {
     var newRows = this.loadRows(ajaxResponse);
      if (this.rows.length == 0) { // initial load
         this.rows = newRows;
         this.size = this.rows.length;
         this.startPos = start;
         return;
      }
      if (start > this.startPos) { //appending
         if (this.startPos + this.rows.length < start) {
            this.rows =  newRows;
            this.startPos = start;//
         } else {
              this.rows = this.rows.concat( newRows.slice(0, newRows.length));
            if (this.rows.length > this.maxBufferSize) {
               var fullSize = this.rows.length;
               this.rows = this.rows.slice(this.rows.length - this.maxBufferSize, this.rows.length)
               this.startPos = this.startPos +  (fullSize - this.rows.length);
            }
         }
      } else { //prepending
         if (start + newRows.length < this.startPos) {
            this.rows =  newRows;
         } else {
            this.rows = newRows.slice(0, this.startPos).concat(this.rows);
            if (this.rows.length > this.maxBufferSize) 
               this.rows = this.rows.slice(0, this.maxBufferSize)
         }
         this.startPos =  start;
      }
      this.size = this.rows.length;
   },
   
   clear: function() {
      this.rows = new Array();
      this.startPos = 0;
      this.size = 0;
   },

   isOverlapping: function(start, size) {
      return ((start < this.endPos()) && (this.startPos < start + size)) || (this.endPos() == 0)
   },

   isInRange: function(position) {
      return (position >= this.startPos) && (position + this.metaData.getPageSize() <= this.endPos()); 
             //&& this.size()  != 0;
   },

   isNearingTopLimit: function(position) {
      return position - this.startPos < this.metaData.getLimitTolerance();
   },

   endPos: function() {
      return this.startPos + this.rows.length;
   },
   
   isNearingBottomLimit: function(position) {
      return this.endPos() - (position + this.metaData.getPageSize()) < this.metaData.getLimitTolerance();
   },

   isAtTop: function() {
      return this.startPos == 0;
   },

   isAtBottom: function() {
      return this.endPos() == this.metaData.getTotalRows();
   },

   isNearingLimit: function(position) {
      return ( !this.isAtTop()    && this.isNearingTopLimit(position)) ||
             ( !this.isAtBottom() && this.isNearingBottomLimit(position) )
   },

   getFetchSize: function(offset) {
      var adjustedOffset = this.getFetchOffset(offset);
      var adjustedSize = 0;
      if (adjustedOffset >= this.startPos) { //apending
         var endFetchOffset = this.maxFetchSize  + adjustedOffset;
         if (endFetchOffset > this.metaData.totalRows)
            endFetchOffset = this.metaData.totalRows;
         adjustedSize = endFetchOffset - adjustedOffset;  
			if(adjustedOffset == 0 && adjustedSize < this.maxFetchSize){
			   adjustedSize = this.maxFetchSize;
			}
      } else {//prepending
         var adjustedSize = this.startPos - adjustedOffset;
         if (adjustedSize > this.maxFetchSize)
            adjustedSize = this.maxFetchSize;
      }
      return adjustedSize;
   }, 

   getFetchOffset: function(offset) {
      var adjustedOffset = offset;
      if (offset > this.startPos)  //apending
         adjustedOffset = (offset > this.endPos()) ? offset :  this.endPos(); 
      else { //prepending
         if (offset + this.maxFetchSize >= this.startPos) {
            var adjustedOffset = this.startPos - this.maxFetchSize;
            if (adjustedOffset < 0)
               adjustedOffset = 0;
         }
      }
      this.lastOffset = adjustedOffset;
      return adjustedOffset;
   },

   getRows: function(start, count) {
      var begPos = start - this.startPos
      var endPos = begPos + count

      // er? need more data...
      if ( endPos > this.size )
         endPos = this.size

      var results = new Array()
      var index = 0;
      for ( var i=begPos ; i < endPos; i++ ) {
         results[index++] = this.rows[i]
      }
      return results
   },

   convertSpaces: function(s) {
      return s.split(" ").join("&nbsp;");
   }

};


//Rico.GridViewPort --------------------------------------------------
Rico.GridViewPort = Class.create();

Rico.GridViewPort.prototype = {

   initialize: function(table, rowHeight, visibleRows, buffer, liveGrid) {
      this.lastDisplayedStartPos = 0;
      this.div = table.parentNode;
      this.table = table
      this.rowHeight = rowHeight;
      this.div.style.height = (this.rowHeight * visibleRows) + "px";
      this.div.style.overflow = "hidden";
      this.buffer = buffer;
      this.liveGrid = liveGrid;
      this.visibleRows = visibleRows + 1;
      this.lastPixelOffset = 0;
      this.startPos = 0;
   },

   populateRow: function(htmlRow, row) {
      for (var j=0; j < row.length; j++) {
         htmlRow.cells[j].innerHTML = row[j]
      }
   },
   
   bufferChanged: function() {
      this.refreshContents( parseInt(this.lastPixelOffset / this.rowHeight));
   },
   
   clearRows: function() {
      if (!this.isBlank) {
         this.liveGrid.table.className = this.liveGrid.options.loadingClass;
         for (var i=0; i < this.visibleRows; i++)
            this.populateRow(this.table.rows[i], this.buffer.getBlankRow());
         this.isBlank = true;
      }
   },
   
   clearContents: function() {   
      this.clearRows();
      this.scrollTo(0);
      this.startPos = 0;
      this.lastStartPos = -1;   
   },
   
   refreshContents: function(startPos) {
      if (startPos == this.lastRowPos && !this.isPartialBlank && !this.isBlank) {
         return;
      }
      if ((startPos + this.visibleRows < this.buffer.startPos)  
          || (this.buffer.startPos + this.buffer.size < startPos) 
          || (this.buffer.size == 0)) {
         this.clearRows();
         return;
      }
      this.isBlank = false;
      var viewPrecedesBuffer = this.buffer.startPos > startPos
      var contentStartPos = viewPrecedesBuffer ? this.buffer.startPos: startPos; 
      var contentEndPos = (this.buffer.startPos + this.buffer.size < startPos + this.visibleRows) 
                                 ? this.buffer.startPos + this.buffer.size
                                 : startPos + this.visibleRows;
      var rowSize = contentEndPos - contentStartPos;
      var rows = this.buffer.getRows(contentStartPos, rowSize ); 
      var blankSize = this.visibleRows - rowSize;
      var blankOffset = viewPrecedesBuffer ? 0: rowSize;
      var contentOffset = viewPrecedesBuffer ? blankSize: 0;

      for (var i=0; i < rows.length; i++) {//initialize what we have
        this.populateRow(this.table.rows[i + contentOffset], rows[i]);
      }
      for (var i=0; i < blankSize; i++) {// blank out the rest 
        this.populateRow(this.table.rows[i + blankOffset], this.buffer.getBlankRow());
      }
      this.isPartialBlank = blankSize > 0;
      this.lastRowPos = startPos;

       this.liveGrid.table.className = this.liveGrid.options.tableClass;
       // Check if user has set a onRefreshComplete function
       var onRefreshComplete = this.liveGrid.options.onRefreshComplete;
       if (onRefreshComplete != null)
           onRefreshComplete();
   },

   scrollTo: function(pixelOffset) {      
      if (this.lastPixelOffset == pixelOffset)
         return;

      this.refreshContents(parseInt(pixelOffset / this.rowHeight))
      this.div.scrollTop = pixelOffset % this.rowHeight        
      
      this.lastPixelOffset = pixelOffset;
   },
   
   visibleHeight: function() {
      return parseInt(RicoUtil.getElementsComputedStyle(this.div, 'height'));
   }

};


Rico.LiveGridRequest = Class.create();
Rico.LiveGridRequest.prototype = {
   initialize: function( requestOffset, options ) {
      this.requestOffset = requestOffset;
   }
};

// Rico.LiveGrid -----------------------------------------------------

Rico.LiveGrid = Class.create();

Rico.LiveGrid.prototype = {

   initialize: function( tableId, visibleRows, totalRows, url, options, ajaxOptions ) {

     this.options = {
                tableClass:           $(tableId).className,
                loadingClass:         $(tableId).className,
                scrollerBorderRight: '1px solid #ababab',
                bufferTimeout:        20000,
                sortAscendImg:        'images/sort_asc.gif',
                sortDescendImg:       'images/sort_desc.gif',
                sortImageWidth:       9,
                sortImageHeight:      5,
                ajaxSortURLParms:     [],
                onRefreshComplete:    null,
                requestParameters:    null,
                inlineStyles:         true
                };
      Object.extend(this.options, options || {});

      this.ajaxOptions = {parameters: null};
      Object.extend(this.ajaxOptions, ajaxOptions || {});

      this.tableId     = tableId; 
      this.table       = $(tableId);

      this.addLiveGridHtml();

      var columnCount  = this.table.rows[0].cells.length;
      this.metaData    = new Rico.LiveGridMetaData(visibleRows, totalRows, columnCount, options);
      this.buffer      = new Rico.LiveGridBuffer(this.metaData);

      var rowCount = this.table.rows.length;
      this.viewPort =  new Rico.GridViewPort(this.table, 
                                            this.table.offsetHeight/rowCount,
                                            visibleRows,
                                            this.buffer, this);
      this.scroller    = new Rico.LiveGridScroller(this,this.viewPort);
      this.options.sortHandler = this.sortHandler.bind(this);

      if ( $(tableId + '_header') )
         this.sort = new Rico.LiveGridSort(tableId + '_header', this.options)

      this.processingRequest = null;
      this.unprocessedRequest = null;

      this.initAjax(url);
      if ( this.options.prefetchBuffer || this.options.prefetchOffset > 0) {
         var offset = 0;
         if (this.options.offset ) {
            offset = this.options.offset;            
            this.scroller.moveScroll(offset);
            this.viewPort.scrollTo(this.scroller.rowToPixel(offset));            
         }
         if (this.options.sortCol) {
             this.sortCol = options.sortCol;
             this.sortDir = options.sortDir;
         }
         this.requestContentRefresh(offset);
      }
   },

   addLiveGridHtml: function() {
     // Check to see if need to create a header table.
     if (this.table.getElementsByTagName("thead").length > 0){
       // Create Table this.tableId+'_header'
       var tableHeader = this.table.cloneNode(true);
       tableHeader.setAttribute('id', this.tableId+'_header');
       tableHeader.setAttribute('class', this.table.className+'_header');

       // Clean up and insert
       for( var i = 0; i < tableHeader.tBodies.length; i++ ) 
       tableHeader.removeChild(tableHeader.tBodies[i]);
       this.table.deleteTHead();
       this.table.parentNode.insertBefore(tableHeader,this.table);
     }

    new Insertion.Before(this.table, "<div id='"+this.tableId+"_container'></div>");
    this.table.previousSibling.appendChild(this.table);
    new Insertion.Before(this.table,"<div id='"+this.tableId+"_viewport' style='float:left;'></div>");
    this.table.previousSibling.appendChild(this.table);
   },


   resetContents: function() {
      this.scroller.moveScroll(0);
      this.buffer.clear();
      this.viewPort.clearContents();
   },
   
   sortHandler: function(column) {
	   if(!column) return ;
      this.sortCol = column.name;
      this.sortDir = column.currentSort;

      this.resetContents();
      this.requestContentRefresh(0) 
   },

   adjustRowSize: function() {
	  
	},
	
   setTotalRows: function( newTotalRows ) {
      this.resetContents();
      this.metaData.setTotalRows(newTotalRows);
      this.scroller.updateSize();
   },

   initAjax: function(url) {
      ajaxEngine.registerRequest( this.tableId + '_request', url );
      ajaxEngine.registerAjaxObject( this.tableId + '_updater', this );
   },

   invokeAjax: function() {
   },

   handleTimedOut: function() {
      //server did not respond in 4 seconds... assume that there could have been
      //an error or something, and allow requests to be processed again...
      this.processingRequest = null;
      this.processQueuedRequest();
   },

   fetchBuffer: function(offset) {
      if ( this.buffer.isInRange(offset) &&
         !this.buffer.isNearingLimit(offset)) {
         return;
         }
      if (this.processingRequest) {
          this.unprocessedRequest = new Rico.LiveGridRequest(offset);
         return;
      }
      var bufferStartPos = this.buffer.getFetchOffset(offset);
      this.processingRequest = new Rico.LiveGridRequest(offset);
      this.processingRequest.bufferOffset = bufferStartPos;   
      var fetchSize = this.buffer.getFetchSize(offset);
      var partialLoaded = false;
      
      var queryString
      if (this.options.requestParameters)
         queryString = this._createQueryString(this.options.requestParameters, 0);

        queryString = (queryString == null) ? '' : queryString+'&';
        queryString  = queryString+'id='+this.tableId+'&page_size='+fetchSize+'&offset='+bufferStartPos;
        if (this.sortCol)
            queryString = queryString+'&sort_col='+escape(this.sortCol)+'&sort_dir='+this.sortDir;

        this.ajaxOptions.parameters = queryString;

       ajaxEngine.sendRequest( this.tableId + '_request', this.ajaxOptions );

       this.timeoutHandler = setTimeout( this.handleTimedOut.bind(this), this.options.bufferTimeout);

   },

   setRequestParams: function() {
      this.options.requestParameters = [];
      for ( var i=0 ; i < arguments.length ; i++ )
         this.options.requestParameters[i] = arguments[i];
   },

   requestContentRefresh: function(contentOffset) {
      this.fetchBuffer(contentOffset);
   },

   ajaxUpdate: function(ajaxResponse) {
      try {
         clearTimeout( this.timeoutHandler );
         this.buffer.update(ajaxResponse,this.processingRequest.bufferOffset);
         this.viewPort.bufferChanged();
      }
      catch(err) {}
      finally {this.processingRequest = null; }
      this.processQueuedRequest();
   },

   _createQueryString: function( theArgs, offset ) {
      var queryString = ""
      if (!theArgs)
          return queryString;

      for ( var i = offset ; i < theArgs.length ; i++ ) {
          if ( i != offset )
            queryString += "&";

          var anArg = theArgs[i];

          if ( anArg.name != undefined && anArg.value != undefined ) {
            queryString += anArg.name +  "=" + escape(anArg.value);
          }
          else {
             var ePos  = anArg.indexOf('=');
             var argName  = anArg.substring( 0, ePos );
             var argValue = anArg.substring( ePos + 1 );
             queryString += argName + "=" + escape(argValue);
          }
      }
      return queryString;
   },

   processQueuedRequest: function() {
      if (this.unprocessedRequest != null) {
         this.requestContentRefresh(this.unprocessedRequest.requestOffset);
         this.unprocessedRequest = null
      }
   }
};


//-------------------- ricoLiveGridSort.js
Rico.LiveGridSort = Class.create();

Rico.LiveGridSort.prototype = {

   initialize: function(headerTableId, options) {
      this.headerTableId = headerTableId;
      this.headerTable   = $(headerTableId);
      this.options = options;
      this.setOptions();
      this.applySortBehavior();

      if ( this.options.sortCol ) {
         this.setSortUI( this.options.sortCol, this.options.sortDir );
      }
   },

   setSortUI: function( columnName, sortDirection ) {
      var cols = this.options.columns;
      for ( var i = 0 ; i < cols.length ; i++ ) {
         if ( cols[i].name == columnName ) {
            this.setColumnSort(i, sortDirection);
            break;
         }
      }
   },

   setOptions: function() {
      // preload the images...
      new Image().src = this.options.sortAscendImg;
      new Image().src = this.options.sortDescendImg;

      this.sort = this.options.sortHandler;
      if ( !this.options.columns )
         this.options.columns = this.introspectForColumnInfo();
      else {
         // allow client to pass { columns: [ ["a", true], ["b", false] ] }
         // and convert to an array of Rico.TableColumn objs...
         this.options.columns = this.convertToTableColumns(this.options.columns);
      }
   },

   applySortBehavior: function() {
      var headerRow   = this.headerTable.rows[0];
      var headerCells = headerRow.cells;
      for ( var i = 0 ; i < headerCells.length ; i++ ) {
         this.addSortBehaviorToColumn( i, headerCells[i] );
      }
   },

   addSortBehaviorToColumn: function( n, cell ) {
      if ( this.options.columns[n].isSortable() ) {
         cell.id            = this.headerTableId + '_' + n;
         cell.style.cursor  = 'pointer';
         cell.onclick       = this.headerCellClicked.bindAsEventListener(this);
         cell.innerHTML     = cell.innerHTML + '<span id="' + this.headerTableId + '_img_' + n + '">'
                           + '&nbsp;&nbsp;&nbsp;</span>';
      }
   },

   // event handler....
   headerCellClicked: function(evt) {
      var eventTarget = evt.target ? evt.target : evt.srcElement;
      var cellId = eventTarget.id;
      var columnNumber = parseInt(cellId.substring( cellId.lastIndexOf('_') + 1 ));
      var sortedColumnIndex = this.getSortedColumnIndex();
      if ( sortedColumnIndex != -1 ) {
         if ( sortedColumnIndex != columnNumber ) {
            this.removeColumnSort(sortedColumnIndex);
            this.setColumnSort(columnNumber, Rico.TableColumn.SORT_ASC);
         }
         else
            this.toggleColumnSort(sortedColumnIndex);
      }
      else
         this.setColumnSort(columnNumber, Rico.TableColumn.SORT_ASC);

      if (this.options.sortHandler) {
         this.options.sortHandler(this.options.columns[columnNumber]);
      }
   },

   removeColumnSort: function(n) {
      this.options.columns[n].setUnsorted();
      this.setSortImage(n);
   },

   setColumnSort: function(n, direction) {
   	if(isNaN(n)) return ;
      this.options.columns[n].setSorted(direction);
      this.setSortImage(n);
   },

   toggleColumnSort: function(n) {
      this.options.columns[n].toggleSort();
      this.setSortImage(n);
   },

   setSortImage: function(n) {
      var sortDirection = this.options.columns[n].getSortDirection();

      var sortImageSpan = $( this.headerTableId + '_img_' + n );
      if ( sortDirection == Rico.TableColumn.UNSORTED )
         sortImageSpan.innerHTML = '&nbsp;&nbsp;';
      else if ( sortDirection == Rico.TableColumn.SORT_ASC )
         sortImageSpan.innerHTML = '&nbsp;&nbsp;<img width="'  + this.options.sortImageWidth    + '" ' +
                                                     'height="'+ this.options.sortImageHeight   + '" ' +
                                                     'src="'   + this.options.sortAscendImg + '"/>';
      else if ( sortDirection == Rico.TableColumn.SORT_DESC )
         sortImageSpan.innerHTML = '&nbsp;&nbsp;<img width="'  + this.options.sortImageWidth    + '" ' +
                                                     'height="'+ this.options.sortImageHeight   + '" ' +
                                                     'src="'   + this.options.sortDescendImg + '"/>';
   },

   getSortedColumnIndex: function() {
      var cols = this.options.columns;
      for ( var i = 0 ; i < cols.length ; i++ ) {
         if ( cols[i].isSorted() )
            return i;
      }

      return -1;
   },

   introspectForColumnInfo: function() {
      var columns = new Array();
      var headerRow   = this.headerTable.rows[0];
      var headerCells = headerRow.cells;
      for ( var i = 0 ; i < headerCells.length ; i++ )
         columns.push( new Rico.TableColumn( this.deriveColumnNameFromCell(headerCells[i],i), true ) );
      return columns;
   },

   convertToTableColumns: function(cols) {
      var columns = new Array();
      for ( var i = 0 ; i < cols.length ; i++ )
         columns.push( new Rico.TableColumn( cols[i][0], cols[i][1] ) );
      return columns;
   },

   deriveColumnNameFromCell: function(cell,columnNumber) {
      var cellContent = cell.innerText != undefined ? cell.innerText : cell.textContent;
      return cellContent ? cellContent.toLowerCase().split(' ').join('_') : "col_" + columnNumber;
   }
};

Rico.TableColumn = Class.create();

Rico.TableColumn.UNSORTED  = 0;
Rico.TableColumn.SORT_ASC  = "ASC";
Rico.TableColumn.SORT_DESC = "DESC";

Rico.TableColumn.prototype = {
   initialize: function(name, sortable) {
      this.name        = name;
      this.sortable    = sortable;
      this.currentSort = Rico.TableColumn.UNSORTED;
   },

   isSortable: function() {
      return this.sortable;
   },

   isSorted: function() {
      return this.currentSort != Rico.TableColumn.UNSORTED;
   },

   getSortDirection: function() {
      return this.currentSort;
   },

   toggleSort: function() {
      if ( this.currentSort == Rico.TableColumn.UNSORTED || this.currentSort == Rico.TableColumn.SORT_DESC )
         this.currentSort = Rico.TableColumn.SORT_ASC;
      else if ( this.currentSort == Rico.TableColumn.SORT_ASC )
         this.currentSort = Rico.TableColumn.SORT_DESC;
   },

   setUnsorted: function(direction) {
      this.setSorted(Rico.TableColumn.UNSORTED);
   },

   setSorted: function(direction) {
      // direction must by one of Rico.TableColumn.UNSORTED, .SORT_ASC, or .SORT_DESC...
      this.currentSort = direction;
   }

};


//-------------------- ricoUtil.js
var RicoUtil = {

   getElementsComputedStyle: function ( htmlElement, cssProperty, mozillaEquivalentCSS) {
      if ( arguments.length == 2 )
         mozillaEquivalentCSS = cssProperty;

      var el = $(htmlElement);
      if ( el.currentStyle )
         return el.currentStyle[cssProperty];
      else
         return document.defaultView.getComputedStyle(el, null).getPropertyValue(mozillaEquivalentCSS);
   },

   createXmlDocument : function() {
      if (document.implementation && document.implementation.createDocument) {
         var doc = document.implementation.createDocument("", "", null);

         if (doc.readyState == null) {
            doc.readyState = 1;
            doc.addEventListener("load", function () {
               doc.readyState = 4;
               if (typeof doc.onreadystatechange == "function")
                  doc.onreadystatechange();
            }, false);
         }

         return doc;
      }

      if (window.ActiveXObject)
          return Try.these(
            function() { return new ActiveXObject('MSXML2.DomDocument')   },
            function() { return new ActiveXObject('Microsoft.DomDocument')},
            function() { return new ActiveXObject('MSXML.DomDocument')    },
            function() { return new ActiveXObject('MSXML3.DomDocument')   }
          ) || false;

      return null;
   },

   getContentAsString: function( parentNode ) {
      return parentNode.xml != undefined ? 
         this._getContentAsStringIE(parentNode) :
         this._getContentAsStringMozilla(parentNode);
   },

  _getContentAsStringIE: function(parentNode) {
     var contentStr = "";
     for ( var i = 0 ; i < parentNode.childNodes.length ; i++ ) {
         var n = parentNode.childNodes[i];
         if (n.nodeType == 4) {
             contentStr += n.nodeValue;
         }
         else {
           contentStr += n.xml;
       }
     }
     return contentStr;
  },

  _getContentAsStringMozilla: function(parentNode) {
     var xmlSerializer = new XMLSerializer();
     var contentStr = "";
     for ( var i = 0 ; i < parentNode.childNodes.length ; i++ ) {
          var n = parentNode.childNodes[i];
          if (n.nodeType == 4) { // CDATA node
              contentStr += n.nodeValue;
          }
          else {
            contentStr += xmlSerializer.serializeToString(n);
        }
     }
     return contentStr;
  },

   toViewportPosition: function(element) {
      return this._toAbsolute(element,true);
   },

   toDocumentPosition: function(element) {
      return this._toAbsolute(element,false);
   },

   /**
    *  Compute the elements position in terms of the window viewport
    *  so that it can be compared to the position of the mouse (dnd)
    *  This is additions of all the offsetTop,offsetLeft values up the
    *  offsetParent hierarchy, ...taking into account any scrollTop,
    *  scrollLeft values along the way...
    *
    * IE has a bug reporting a correct offsetLeft of elements within a
    * a relatively positioned parent!!!
    **/
   _toAbsolute: function(element,accountForDocScroll) {

      if ( navigator.userAgent.toLowerCase().indexOf("msie") == -1 )
         return this._toAbsoluteMozilla(element,accountForDocScroll);

      var x = 0;
      var y = 0;
      var parent = element;
      while ( parent ) {

         var borderXOffset = 0;
         var borderYOffset = 0;
         if ( parent != element ) {
            var borderXOffset = parseInt(this.getElementsComputedStyle(parent, "borderLeftWidth" ));
            var borderYOffset = parseInt(this.getElementsComputedStyle(parent, "borderTopWidth" ));
            borderXOffset = isNaN(borderXOffset) ? 0 : borderXOffset;
            borderYOffset = isNaN(borderYOffset) ? 0 : borderYOffset;
         }

         x += parent.offsetLeft - parent.scrollLeft + borderXOffset;
         y += parent.offsetTop - parent.scrollTop + borderYOffset;
         parent = parent.offsetParent;
      }

      if ( accountForDocScroll ) {
         x -= this.docScrollLeft();
         y -= this.docScrollTop();
      }

      return { x:x, y:y };
   },

   /**
    *  Mozilla did not report all of the parents up the hierarchy via the
    *  offsetParent property that IE did.  So for the calculation of the
    *  offsets we use the offsetParent property, but for the calculation of
    *  the scrollTop/scrollLeft adjustments we navigate up via the parentNode
    *  property instead so as to get the scroll offsets...
    *
    **/
   _toAbsoluteMozilla: function(element,accountForDocScroll) {
      var x = 0;
      var y = 0;
      var parent = element;
      while ( parent ) {
         x += parent.offsetLeft;
         y += parent.offsetTop;
         parent = parent.offsetParent;
      }

      parent = element;
      while ( parent &&
              parent != document.body &&
              parent != document.documentElement ) {
         if ( parent.scrollLeft  )
            x -= parent.scrollLeft;
         if ( parent.scrollTop )
            y -= parent.scrollTop;
         parent = parent.parentNode;
      }

      if ( accountForDocScroll ) {
         x -= this.docScrollLeft();
         y -= this.docScrollTop();
      }

      return { x:x, y:y };
   },

   docScrollLeft: function() {
      if ( window.pageXOffset )
         return window.pageXOffset;
      else if ( document.documentElement && document.documentElement.scrollLeft )
         return document.documentElement.scrollLeft;
      else if ( document.body )
         return document.body.scrollLeft;
      else
         return 0;
   },

   docScrollTop: function() {
      if ( window.pageYOffset )
         return window.pageYOffset;
      else if ( document.documentElement && document.documentElement.scrollTop )
         return document.documentElement.scrollTop;
      else if ( document.body )
         return document.body.scrollTop;
      else
         return 0;
   }

};
_2https://itunesconnect.apple.com/javascript/rico.js‘YAZ[Oebplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_:https://itunesconnect.apple.com/javascript/labelconnect.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫f≠“Ø»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptU33413_Wed, 15 Jul 2009 18:30:33 GMT_"1fb3066-8285-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryÇÖ“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
KPYdgmvÅàêõù®™¨Æ∞≤¥∂∏∫º«…ÀÕœ—”’◊Ÿ€È˜ˇ!05:Eesìô≤Õ”Û2?BGK_             l              mOÇÖ//05/25/2009 T 3:30PM

function toggle_checkbox(id)
{
	element = $(id);
	if (element != null) {
		if(element.checked == false) { 
			element.checked = true;
		} else { 
			element.checked = false;
		}
	}
}

function get_sibling_by_classname(element, classname) {
  found_element = null;
  $A(element.parentNode.childNodes).each(function(item){
    if(item.className == classname) {
      found_element = item;
    }
  });
  return(found_element);
}

function get_fieldsets(container_div) {
	sources = $H()
	$$("#" + container_div + " fieldset").each(function(node){
		sources.set(get_label(node), node);
	});
    return(sources);
}

function get_label(node) {
	label = node.getElementsByTagName('label')[0].innerHTML;
	return(label.substring(0, label.indexOf(':')));
}

function get_input(fieldset) {
	var element = null;
	if (fieldset != null && fieldset.childNodes != null && fieldset.childNodes.length > 0) {
		$A(fieldset.childNodes).each(function(item){
			if (element == null && (item.nodeName == 'SELECT' || item.nodeName == 'INPUT')) {
                element = item;
			}
		});
	}
	return(element);
}

function copy_form_values(source_div, destination_div) {
	destinations = get_fieldsets(destination_div);
    get_fieldsets(source_div).each(function(item){
        source = get_input(item[1]);
		destination = get_input(destinations.get(item[0]));
        if(source != null && destination != null && source.nodeName == destination.nodeName) {
			destination.value = source.value;
		}		
	});
}

function toggle_collapse(link) {
  link = $(link);
  element = get_sibling_by_classname(link, 'collapse_content');
  if (link != null && element != null && element != false) {
		element_display = element.style.display;
		if (element_display == '' || element_display == 'block') {
      toggle_collapse_close(link);
		} else {
      toggle_collapse_open(link);
    }
	}
}

function toggle_collapse_triangle(link, sub, replace) {
  var triangle = null;
  if(link != null) {
    $A(link.childNodes).each(function(item){
      if (triangle == null && item != null && item.nodeName == 'IMG') {
        triangle = item;
      }
    });
  }
  if (triangle != null) {
    triangle.src = triangle.src.sub(sub, replace);
  }
}

function toggle_collapse_open(link) {
  content = get_sibling_by_classname(link, 'collapse_content');
  if (content != null) {
    $(content).show();
  }
  toggle_collapse_triangle(link, 'triangle_closed', 'triangle_open');
}

function toggle_collapse_close(link) {
  content = get_sibling_by_classname(link, 'collapse_content');
  if (content != null) {
    $(content).hide();
  }
  toggle_collapse_triangle(link, 'triangle_open', 'triangle_closed');
}

function collapse_open_all() {
  $A(document.getElementsByClassName("collapse_link")).each(function(item) {
    toggle_collapse_open(item);
  });
}

function collapse_close_all() {
  $A(document.getElementsByClassName("collapse_link")).each(function(item) {
    toggle_collapse_close(item);
  });
}

function enable_form_for_any_class(form_element_id, class_name) {
    var conditional_field = $(form_element_id);
    var any_boxes_checked = false;
    $A(document.getElementsByClassName(class_name)).each(function(item) {
        if (item.checked) {
            any_boxes_checked = true;
        }
    });
    if (any_boxes_checked) {
        conditional_field.disabled = false;
    } else {
        conditional_field.disabled = true;
        conditional_field.selectedIndex = 0;
    }
}

function validate_number(input) {
    validate_number_priv(input, /[^0-9\uff10-\uff19]/, null, null, null);
}

function validate_episode(input) {
    validate_number_priv(input, /[^0-9\uff10-\uff19]/, 1, null, null);
}

function validate_hour12(input) {
    validate_number_priv(input, /[^0-9\uff10-\uff19]/, null, 12, 2);
}

function validate_minute(input) {
    validate_number_priv(input, /[^0-9\uff10-\uff19]/, null, 59, 2);
}


function validate_checked(input) {
    if (input.checked == false){
        show_alert(input);
    } else {
        hide_alert(input);
    }
};

function validate_number_priv(input, banned_values, min_value, max_value, max_chars, alert_id) {
    var cleaned_value = input.value.gsub(banned_values, '');
    if(cleaned_value != input.value) {
        fixed_alert(input, "Numbers only please.");
    } else if(max_chars != null && input.value.length > max_chars) {
        fixed_alert(input, "Please no more than " + max_chars + " digits.");
    } else if(max_value != null && input.value > max_value) {
        fixed_alert(input, "Please enter a number " + max_value + " or less.");
    } else if(min_value != null && input.value != '') {
        // need to shift the min value into the fixed-width unicode character range in order to evaluate Japanese input
        if( input.value.gsub(/[^\uff10-\uff19]/,'') == input.value) {
            min_value = String.fromCharCode(min_value.toString().charCodeAt() + 65248);
        }
        if (iput.value < min_value) {
            fixed_alert(input, "The number of episodes must be at least "+min_value+".");
        }
    } else {
        clear_alert(input);
    }
}

function fixed_alert(form_element, alert_message) {
    var alert_text = get_sibling_by_classname($(form_element), 'temporary_alert');
    if(alert_text != null) {
        alert_text.innerHTML = alert_message;
    }
}

function clear_alert(form_element) {
    fixed_alert($(form_element), '');
}

function show_alert(form_element) {
    var alert_text = get_sibling_by_classname($(form_element), 'temporary_alert');
    alert_text.style.display = "inline";
}

function hide_alert(form_element) {
    var alert_text = get_sibling_by_classname($(form_element), 'temporary_alert');
    alert_text.style.display = "none";
}

function show_removing_rights_alert(form_element) {
    form_element.parentNode.style.backgroundColor = "#FFDB8C";
    update_rights_warning();
}

function hide_removing_rights_alert(form_element) {
    var cellbgcolor = form_element.parentNode.parentNode.bgColor;
    if (cellbgcolor == null) {
        cellbgcolor = "#ffffff";
    }
    form_element.parentNode.style.backgroundColor = cellbgcolor;
    update_rights_warning();
}

function update_rights_warning() {

    var showWarning = false;
    $$('input.validate_checked_rights').each(function(checkbox){
        if(checkbox.checked == false) {
            showWarning = true;
        }
    });

    var rightsWarning = $('removing_rights_warning');
    if (rightsWarning != null) {
        if (showWarning == true) {
            rightsWarning.show();
        } else {
            rightsWarning.hide();
        }
    }
}


// TV pricing inline alerts for SD & HD
function clear_pricing_selections() {
    var sdSelection = $('sd_price_selection');
    var hdSelection = $('hd_price_selection');

    if ($('sd_price_selection') && sdSelection.value != 'WONoSelectionString') {
        sdSelection.value = 'WONoSelectionString';
        if ($('sd_pricing_changed')) {
            $('sd_pricing_changed').value=true;
        }
    }
    if ($('hd_price_selection') && hdSelection.value != 'WONoSelectionString') {
        hdSelection.value = 'WONoSelectionString';
        if ($('hd_pricing_changed')) {
            $('hd_pricing_changed').value=true;
        }
    } 
}

//mwalker added for tv sd/hd edit/inspect toggle
function togglePricingDisplays(input) {
    if (input.checked) {
        if ($('can_edit_sd_pricing').value='true') {
            $('sd_edit_pricing_div').style.display="inline";
            $('sd_inspect_pricing_div').style.display="none";
        } else {
            $('sd_edit_pricing_div').style.display="none";
            $('sd_inspect_pricing_div').style.display="inline";
        }
        if ($('can_edit_hd_pricing').value='true') {
            $('hd_edit_pricing_div').style.display="inline";
            $('hd_inspect_pricing_div').style.display="none";
        } else {
            $('hd_edit_pricing_div').style.display="none";
            $('hd_inspect_pricing_div').style.display="inline";
        }
	} else {
        $('sd_edit_pricing_div').style.display="none";
        $('sd_inspect_pricing_div').style.display="inline";
        $('hd_edit_pricing_div').style.display="none";
        $('hd_inspect_pricing_div').style.display="inline";
	}
}
// SD Checkbox Style for 'SD Wholesale Price'

function styleSDLabel () {
    if ($('can_edit_sd_pricing').value='true') {
        $('SDLabel').style.fontWeight = 'bold';
    } else {
         $('SDLabel').style.fontWeight = 'normal';
    }
}

Event.observe( window, 'load', function() {
    if ($('can_edit_sd_pricing').value='true') {
        $('SDLabel').style.fontWeight = 'bold';
    } else {
         return false;
    }
} );

Event.observe( window, 'load', function() {
    if ($('can_edit_sd_pricing').value='true') {
        $('SDLabel-1').style.fontWeight = 'bold';
    } else {
         return false;
    }
} );

Event.observe( window, 'load', function() {
    if ($('can_edit_sd_pricing').value='true') {
        $('SDLabel').style.fontWeight = 'bold';
    } else {
         return false;
    }
} );

// HD Checkbox Style for 'HD Wholesale Price'

function styleHDLabel () {
    if ($('HDcheckBox') && $('HDcheckBox').checked && $('can_edit_hd_pricing').value=='true') {
        $('HDLabel').style.fontWeight = 'bold';
    } else {
         $('HDLabel').style.fontWeight = 'normal';
    }
}

Event.observe( window, 'load', function() {
    if ($('HDcheckBox') && $('HDcheckBox').checked && $('can_edit_hd_pricing').value=='true') {
        $('HDLabel').style.fontWeight = 'bold';
    } else {
         return false;
    }
} );

Event.observe( window, 'load', function() {
    if ($('EnableHDText') && $('EnableHDText').innerHTML == "Yes" && $('can_edit_hd_pricing').value=='true') {
        $('HDLabel-1').style.fontWeight = 'bold';
    } else {
         return false;
    }
} );

Event.observe( window, 'load', function() {
    if ($('EnableHDText') && $('EnableHDText').innerHTML == "Yes" && $('can_edit_hd_pricing').value=='true') {
        $('HDLabel').style.fontWeight = 'bold';
    } else {
         return false;
    }
} );

// Global array to retain the original onload values of checkboxes with the id 'validate_checked_rights' so they can be validated against.
var validate_checked_original_values = [];

function validate_checked_rights(input) {
   if (validate_checked_original_values != null && validate_checked_original_values.size() > 0) {
       var inputs = $$('input.validate_checked_rights');
       var eindex = inputs.indexOf(input);
       if (validate_checked_original_values[eindex]) {
           if (input.checked == false){
               show_removing_rights_alert(input);
           } else {
               hide_removing_rights_alert(input);
           }
       }
   }
};

function show_removing_rights_alert(form_element) {
   form_element.parentNode.style.backgroundColor = "#FFDB8C";
   var rightsWarning = $('removing_rights_warning');
   if (rightsWarning != null) {
       if(form_element.checked == false) {
           rightsWarning.show();
           if (!$(form_element).hasClassName('warning')) {
               $(form_element).addClassName('warning');
           }
       }
   }
}

function hide_removing_rights_alert(form_element) {
   var rightsWarning = $('removing_rights_warning');
   var cellbgcolor = form_element.parentNode.parentNode.bgColor;
   if (cellbgcolor == null) {
       cellbgcolor = "#ffffff";
   } else if (!Prototype.Browser.IE) {
       cellbgcolor = "#" + cellbgcolor;
   }
   form_element.parentNode.style.backgroundColor = cellbgcolor;
   if ($(form_element).hasClassName('warning')) {
       $(form_element).removeClassName('warning');
   }
   var inputs = $$('input.validate_checked_rights');
   var noWarnings = true;
   inputs.each(function(e) {
       if ($(e).hasClassName('warning')) {
           noWarnings = false;
       }
   });
   if (noWarnings) {
       rightsWarning.hide();
   }
}

/* Behaviour Rules */
var observer;

var myrules = {
  'div.edittimehourandminutes input.hour12' : function(element){
    element.onkeyup = function(){
      validate_hour12(this);
    }
  },
  'div.edittimehourandminutes input.minute' : function(element){
    element.onkeyup = function(){
      validate_minute(this);
    }
  },
  'a.collapse_link' : function(element){
    element.onclick = function(){
      toggle_collapse(this);
    }
  },
  'input.validate_number' : function(element){
    element.onkeyup = function(){
      validate_number(this);
    }
  },
  'input.validate_episode' : function(element){
    element.onkeyup = function() {
        validate_episode(this);
    }
    // Validation has been changed to be anything > 0 so creating a timed observer to catch anything > 1 is superfluous - JP.
    //element.onfocus = function(){
    //  createTotalEpisodesObserver(element, 1200);
    //}
    //element.onblur = function() {
    //  if (observer != null) {
    //    observer.stop();
    //    observer = null;
    //  }
    //}
  },
  'input.validate_checked' : function(element){
    element.onclick = function(){
      validate_checked(this);
    }
  },
  'input.validate_checked_rights' : function(element){
    element.onclick = function(){
      validate_checked_rights(this);
    }
  }
};
Behaviour.register(myrules);

Behaviour.addLoadEvent(function() {
   $$('input.validate_checked').each(function(input){
       if (input.checked == false){
           show_alert(input);
       } else {
           hide_alert(input);
       }
   });
   $$('input.validate_checked_rights').each(function(checkbox){
       validate_checked_original_values.push(checkbox.checked);
   });
});

function createTotalEpisodesObserver(element, frequency) {
    //if (observer == null) {
        // convert frequency to seconds if it was entered as milliseconds
        if (Object.isNumber(frequency) && frequency > 100 && (frequency.floor() - frequency) == 0) {
            frequency = frequency / 1000;
        }
        observer = new Form.Element.Observer(element, frequency, function(el, val){ validate_episode(el); });
    //}
}


/* Rights & Pricing Date Format Validation */

var myAlert;

function validate_date(fld) {
    var RegExPattern = /(?=\d)^(?:(?!(?:10\D(?:0?[5-9]|1[0-4])\D(?:1582))|(?:0?9\D(?:0?[3-9]|1[0-3])\D(?:1752)))((?:0?[13578]|1[02])|(?:0?[469]|11)(?!\/31)(?!-31)(?!\/.31)|(?:0?2(?=.?(?:(?:29.(?!000[04]|(?:(?:1[^0-6]|[2468][^048]|[3579][^26])00))(?:(?:(?:\d\d)(?:[02468][048]|[13579][26])(?!\x20BC))|(?:00(?:42|3[0369]|2[147]|1[258]|09)\x20BC))))))|(?:0?2(?=.(?:(?:\d\D)|(?:[01]\d)|(?:2[0-8])))))([\/])(0?[1-9]|[12]\d|3[01])\2(?!0000)((?=(?:00(?:4[0-5]|[0-3]?\d)\x20BC)|(?:\d{4}(?!\x20BC)))\d{4}(?:\x20BC)?)(?:$|(?=\x20\d)\x20))?((?:(?:0?[1-9]|1[012])(?::[0-5]\d){0,2}(?:\x20[aApP][mM]))|(?:[01]\d|2[0-3])(?::[0-5]\d){1,2})?$/;
    if ((fld.value.match(RegExPattern)) && (fld.value!='')) {
        clear_alert(fld);
        myAlert = "no";
    }
    else {
        fixed_alert(fld, " Invalid format.");
        fld.focus();
        myAlert = "yes";
    }
}

function validate_date_alert() {
    //alert (myAlert);
    if (myAlert=="yes") {
        //alert("Invalid format.  Please format using MM/DD/YYYY.");
        return false;
    } else if (myAlert=="no") {
        return true;
    }
}

/* File upload */

function processFileSelection(fileField) {
    var fileName = fileNameFromPath(fileField.value);

    if (fileField.id == "binary" || fileField.id == "pdf") {
        var ext = ".zip";
        var format = "ZIP";
        if (fileField.id == "pdf") {
            ext = ".pdf";
            format = "PDF";
        }
        if (fileName.endsWith(ext)) {
            // Fill in field
		    document.getElementById(fileField.id + "-itemName").innerHTML = fileName;
            document.getElementById(fileField.id + "-itemName").style.display = "block";

		    //Display button
		    document.getElementById(fileField.id + "Div").style.display = "block";
        } else {
            if (fileField.id == "binary") {
                alert('Binaries must be .zip files.');
            } else {
                alert('Your CCAT form must be a .pdf file.');
            }
        }
    } else if (fileField.id != "additionalScreenshot") {
        // Fill in field
        document.getElementById(fileField.id + "-itemName").innerHTML = fileName;
        document.getElementById(fileField.id + "-itemName").style.display = "block";

        //Display button
        document.getElementById(fileField.id + "Div").style.display = "block";
    } else {
		newTitle = document.createElement("h2");
		newTitle.innerHTML = fileName;
		
		itemNameContentArea = document.getElementById("additionalScreenshot-itemName");
		itemNames = itemNameContentArea.getElementsByTagName("h2");
		
		if (itemNames.length > 0) {
			for (i=itemNames.length-1; i > -1; i--) {
				if (itemNames[i].getAttribute("class") == "serverGenerated") {
					itemNameContentArea.removeChild(itemNames[i]);
				}
			}
		}
		
		itemNames = itemNameContentArea.getElementsByTagName("h2");

		if (itemNames.length > 0) {
			document.getElementById("additionalScreenshot-itemName").insertBefore(newTitle,itemNames[0]);
		}
		else {
			document.getElementById("additionalScreenshot-itemName").appendChild(newTitle);
		}
        document.getElementById("additionalScreenshot-itemName").style.display = "block";
		
		//Display button
		document.getElementById("additionalScreenshotDiv").style.display = "block";
		
		// Hide file field div
		fileField.parentNode.style.display = "none";
	}
}

function fileNameFromPath(path) {
    var name;
    if (navigator.userAgent.match(/Windows/)) {
        name = path.substring(path.lastIndexOf('\\') + 1, path.length).replace(/%20/g, ' ');
	}
	else {
		name = path.substring(path.lastIndexOf('/') + 1, path.length).replace(/%20/g, ' ');
    }
    return name;
}

/* Toggle Tool Tip */

function toggle_tool_tip (index, index1) {
    close_tool_tips(index);
    close_tool_tips1(index1);
    var div_element = document.getElementsByClassName('div-element')[index];
    div_element.toggle();
}

function close_tool_tips (div_index) {
    var tips = document.getElementsByClassName('div-element');
    for (i=0; i<tips.length; i++) {
        if (i != div_index)
            tips[i].style.display="none";
    }
}

function toggle_tool_tip1 (index1, index) {
    close_tool_tips1(index1);
    close_tool_tips(index);
    var div_element1 = document.getElementsByClassName('div-element1')[index1];
    div_element1.toggle();
}

function close_tool_tips1 (div_index1) {
    var tips1 = document.getElementsByClassName('div-element1');
    for (i=0; i<tips1.length; i++) {
        if (i != div_index1)
            tips1[i].style.display="none";
    }
}

function selectAll(containerClass) {
    $$('.' + containerClass + 'input').each(function(input){
        input.checked=true;
    });
}

function createCookie(name,value,days) {
	if (days) {
		var date = new Date();
		date.setTime(date.getTime()+(days*24*60*60*1000));
		var expires = "; expires="+date.toGMTString();
	}
	else var expires = "";
	document.cookie = name+"="+value+expires+"; path=/";
}

function readCookie(name) {
	var nameEQ = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	}
	return null;
}

function eraseCookie(name) {
	createCookie(name,"",-1);
}

//Export Compliance OnLoad Function

Event.observe( window, 'load', function() {
    if ($('export-comp-question=true') && $('export-comp-question=true').checked) {
        $('authentication-question').style.display='block';
    }
    if ($('authentication-question-id') && $('authentication-question-id').checked) {
        $('complex-question').style.display='block';
    }    
    if ($('complex-question-id') && $('complex-question-id').checked) {
        $('protection-question').style.display='block';
    }        
    if ($('protection-question-id') && $('protection-question-id').checked) {
        $('hidden-upload').style.display='block';
    }            
} );

//EULA OnLoad Function

Event.observe( window, 'load', function() {
    if ($('eula-text') && $('eula-text').value) {
        $('row-0').style.display='none';
        $('row-1').style.display='table-row';
        $('row-2').style.display='table-row';
        $('row-3').style.display='table-row';
        $('row-4').style.display='table-row';
    }
} );

// commented out the uploadFrame hiding until we can get it to stick
function skipUploadCheck(state) {
    var imageDiv = document.getElementById('ApplicationImageSpot');
    var timg = imageDiv.down('img');
    if (state) {
        var strikeImg = new Image();
        strikeImg.height = '68';
        strikeImg.width = '57';
        strikeImg.src = '/images/labelconnect/strikethrough.png';
        timg.height = strikeImg.height;
        timg.width = strikeImg.width;
        timg.src = strikeImg.src;

        $('binary-uploadControls').fade({ duration: 0.3, from: 1, to: 0 }) ;
        Effect.BlindUp('binary-uploadControls', { duration: 0.2 });

    } else {
        timg.height = imgWell.height;
        timg.width = imgWell.width;
        timg.src = imgWell.src;
        
        $('binary-uploadControls').appear({ duration: 0.2 });
        Effect.BlindDown('binary-uploadControls', { duration: 0.2 });
    }
};

function skipUploadAddBundleIDCheck(state, exampleText1) {
    var imageDiv = document.getElementById('ApplicationImageSpot');
    if (state) {
        var strikeImg = new Image();
        strikeImg.height = '68';
        strikeImg.width = '57';
        strikeImg.src = '/images/labelconnect/strikethrough.png';
        timg.height = strikeImg.height;
        timg.width = strikeImg.width;
        timg.src = strikeImg.src;

        $('binary-uploadControls').fade({ duration: 0.3, from: 1, to: 0 }) ;
        Effect.BlindUp('binary-uploadControls', { duration: 0.2 });

        $('bundleIdentifierLogic').appear({ duration: 0.3 });
        var f = $('bundleIdentifierLogic').down('input[type=text]');
        if (f != null && f.value == '') {
            f.addClassName('hint');
            f.value = exampleText1;
        }

    } else {
        /*var fileField = $('binary');
        if (fileField.value != '') {
            fileField.value = '';
            // Fill in field
		    $('binary-itemName').innerHTML = '';
            $('binary-itemName').style.display = "none";

		    //Display button
		    $('binaryDiv').style.display = "none";
        }*/

        timg.height = imgWell.height;
        timg.width = imgWell.width;
        timg.src = imgWell.src;
        
        $('binary-uploadControls').appear({ duration: 0.2 });
        Effect.BlindDown('binary-uploadControls', { duration: 0.2 });

        $('bundleIdentifierLogic').fade({ duration: 0.2, from: 1, to: 0 });
        var f = $('bundleIdentifierLogic').down('input[type=text]');
        if (f != null && f.value == '') {
            f.removeClassName('hint');
            f.value = '';
        }
    }
};

function checkBoxHideOnTrue(state,id) {
    var div = document.getElementById(id);
    if (state) {
        div.style.display='block';
    } else {
        div.style.display='none';
    }
};


//Games Ratings onChange Function

Event.observe( window, 'load', function () {

    if ($('primary-category') && $('primary-category').options[$('primary-category').selectedIndex].text == "Games") {
        $('game-ratings').style.display='table-row';
        $('game-ratings-hr').style.display='table-row';
    } else if ($('second-category') && $('second-category').options[$('second-category').selectedIndex].text == "Games") {
        $('game-ratings').style.display='table-row';
        $('game-ratings-hr').style.display='table-row';
    } else if ($('primary-category') && $('primary-category').options[$('primary-category').selectedIndex].text == "Games") {
        $('game-ratings').style.display='none';
        $('game-ratings-hr').style.display='none';
    } else if ($('second-category') && $('second-category').options[$('second-category').selectedIndex].text != "Games") {
        $('game-ratings').style.display='none';
        $('game-ratings-hr').style.display='none';
    }
} );

Event.observe( window, 'change', function () {

    if ($('primary-category') && $('primary-category').options[$('primary-category').selectedIndex].text == "Games") {
        $('game-ratings').style.display='table-row';
        $('game-ratings-hr').style.display='table-row';
    } else if ($('second-category') && $('second-category').options[$('second-category').selectedIndex].text == "Games") {
        $('game-ratings').style.display='table-row';
        $('game-ratings-hr').style.display='table-row';
    } else if ($('primary-category') && $('primary-category').options[$('primary-category').selectedIndex].text != "Games") {
        $('game-ratings').style.display='none';
        $('game-ratings-hr').style.display='none';
    } else if ($('second-category') && $('second-category').options[$('second-category').selectedIndex].text != "Games") {
        $('game-ratings').style.display='none';
        $('game-ratings-hr').style.display='none';
    }
} );

Event.observe( window, 'load', function () {

    if ($('primary-category') && $('primary-category').options[$('primary-category').selectedIndex].text == "Games") {
        $('first-game-1').style.display='table-row';
        $('first-game-2').style.display='table-row';
    } else if ($('primary-category') && $('primary-category').options[$('primary-category').selectedIndex].text == "Games") {
        $('first-game-1').style.display='none';
        $('first-game-2').style.display='none';
    };

    if ($('second-category') && $('second-category').options[$('second-category').selectedIndex].text == "Games") {
        $('second-game-1').style.display='table-row';
        $('second-game-2').style.display='table-row';
    } else if ($('second-category') && $('second-category').options[$('second-category').selectedIndex].text != "Games") {
        $('second-game-1').style.display='none';
        $('second-game-2').style.display='none';
    }
} );

//Games Category Functions

function PrimeGameSelect () {

    if ($('primary-category').options[$('primary-category').selectedIndex].text == "Games") {
       $('first-game-1').style.display='table-row';
       $('first-game-2').style.display='table-row';
    } else {
       $('first-game-1').style.display='none';
       $('first-game-2').style.display='none';
    }
};

function SecondGameSelect () {

    if ($('second-category').options[$('second-category').selectedIndex].text == "Games") {
       $('second-game-1').style.display='table-row';
       $('second-game-2').style.display='table-row';
    } else {
       $('second-game-1').style.display='none';
       $('second-game-2').style.display='none';
    }
};


//VOD Type Functions

function VodCheck () {
    if ($('vod-type').value=="0") {
        if (Prototype.Browser.IE)
            $('vod-release-date').style.display='block';
        else
            $('vod-release-date').style.display='table-row';
    } else {
        $('vod-release-date').style.display='none';
    }
};

Event.observe( window, 'load', function () {
    if ($('vod-type') && $('vod-type').value == "0") {
        $('vod-release-date').style.display='table-row';
    } else if ($('vod-type') && $('vod-type').value != "0") {
        $('vod-release-date').style.display='none';
    }
} );

//Track Level Advisory
function updateAllTracks (paValue) {
    if (confirm("Do you want to apply this change to all tracks on this playlist?\n\nClick OK to change all tracks, or Cancel to change only the track that you requested.")) {
      var advisories = $$('select.advisory-select');
        for (i=0; i<advisories.length; i++) {
            advisories[i].options[paValue].selected = true;
        }
 }
}

//Confirm 'Remove From Sale' selection
function removeFromSale() {
    var remove = confirm(
            "You are removing your application from sale. Your application will be removed from sale in all countries. " +
            "To put it back on sale at any time, click Edit Information, go to the Rights and Pricing tab, and select the " +
            "countries in which you would like your application to be available. Click <OK> to continue or <Cancel> to " +
            "keep the application for sale.");
    if (remove) {
        return true;
    } else {
        return false;
    }
}

//Confirm 'Reject Binary' selection
function rejectBinary() {
    var remove = confirm(
      "Are you sure you want to reject this binary?"+
      "\n\nIf you reject this binary and submit a new one, the application review process will start over. Click OK to reject this binary.");
    if (remove) {
        return true;
    } else {
        return false;
    }
}

//Confirm continue action from Territories
function confirmTerritorySave(mode) {
    if (mode==1) {
        if (!readCookie('TerritoryAddPrompt')) {
            var save = confirm("Make sure you have saved each territory, then click OK to continue.");
            if (save) {
                createCookie('TerritoryAddPrompt','1',365);
                return true;
            } else {
                return false;
            }
        }
    } else {
        if (!readCookie('TerritoryEditPrompt')) {
            var save = confirm("Make sure you have saved each territory, then click OK to continue.");
            if (save) {
                createCookie('TerritoryEditPrompt','1',365);
                return true;
            } else {
                return false;
            }
        }
    }
}

//Switch available promo code view
function promoCodeView(index) {
    var codeArray = $$('div.codeString');
    for(i=0;i<codeArray.length;i++) {
        codeArray[i].style.display = "none";
    }
    var divId = "codes_"+index;
    $(divId).style.display = "block";
}

//Specify unique classes for even and odd table rows so we can change the backgrounds and hover states for readability
var AlternatingRowColorResultList = function(element, hasHeader, options) {
  options = Object.extend({ even: 'even', odd: 'odd', hover: 'hover' }, options || {});
  $(element).select('div.resultList tr').each(function(row, index) {
    // fix for new format since the table header row is now being included in the select.
    if (hasHeader) {
      if (index != 0) {
        row.addClassName((index+1) % 2 == 0 ? options.even : options.odd);
      }
    } else {
      row.addClassName((index) % 2 == 0 ? options.even : options.odd);
    }
  });
};

//OnLoad Ticket Count Badge
Event.observe( window, 'load', function () {

    if ($('ticketCount') && $R(1,9).include($('ticketCount').innerHTML)) {
        $('ticketBadge').style.background='url(\'/images/labelconnect/ticket_badge_1.png\')';
        $('ticketBadge').style.width="26px";
        $('ticketBadge').style.left="-13px";
    } else if ($('ticketCount') && $R(10,99).include($('ticketCount').innerHTML)) {
        $('ticketBadge').style.background='url(\'/images/labelconnect/ticket_badge_2.png\')';
        $('ticketBadge').style.width="33px";
        $('ticketBadge').style.left="-7px";
    } else if ($('ticketCount') && $R(100,999).include($('ticketCount').innerHTML)) {
        $('ticketBadge').style.background='url(\'/images/labelconnect/ticket_badge_3.png\')';
        $('ticketBadge').style.width="40px";
        $('ticketBadge').style.left="-5px";
    } else if ($('ticketCount') && $R(1000,9999).include($('ticketCount').innerHTML)) {
        $('ticketBadge').style.background='url(\'/images/labelconnect/ticket_badge_4.png\')';
        $('ticketBadge').style.width="46px";
        $('ticketBadge').style.left="-1px";
    } else {
        return false;
    }
} );

//OnLoad HeaderTxt Font Sizing
Event.observe( window, 'load', function () {

    if ($('header-txt') && $('header-txt').innerHTML.length >= 58) {
        $('header-txt').style.fontSize = "12px";
    } else {
        return false;
    }
} );

function toggleProgressIndicator(id) {
    var f = $(id);
    if (f.match('img')) {
    } else if (f.match('div')) {
        var contentDiv;
        var offset = f.offsetHeight;
        var par = f.parentNode || f.parent;
        if ($(par).down('div.content') != null) {
            offset = f.offsetHeight-20;
            contentDiv = par.down('div.content');
        } else {
            contentDiv = par.down('div.overlay') || par.down('div.transparentOverlay') || par.down('div.checkImageOverlay');
        }
    }
    if (contentDiv != null) {
        // hack for IE
        var aImg = new Image();
        var img = $(contentDiv).down('img');
        aImg.src = img.src;
        var imgHeight = aImg.height;
        var pad = Math.floor((offset - imgHeight) / 2);
        img.style.paddingTop = pad + 'px';
        $(contentDiv).toggle();
    }
};

var imgWell = new Image();  // IE Hack: creating a global replacement image for the wells. TODO: replace this with something less global.
imgWell.src = '/images/labelconnect/well.gif';
imgWell.height = imgWell.width = '57';

function toggleWellProgressIndicator(id) {
  var img = $(id).down('img');
  if (img != null) {
    img.src = imgWell.src;
    img.height = imgWell.height;
    img.width = imgWell.width;
  }
  toggleProgressIndicator(id);
};
_:https://itunesconnect.apple.com/javascript/labelconnect.js‘]A^_Olbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/javascript/labelconnect_pricing.js“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫f»»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:28 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:17 GMTUbytes_Apache/1.3.33 (Darwin)_application/x-javascriptU35003_Wed, 15 Jul 2009 18:30:33 GMT_"b5ec8b-88bb-4a4cdec4"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryàª“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫’€˚#9FINRf             l              tOàªfunction switchTable(popup) {
	var obj = pricingMatrix[popup.options[popup.selectedIndex].value];

	loadTable(popup.options[popup.selectedIndex].value+1);
}

function loadTable(tierIndex) {
	var table = document.getElementById("matrixTable");
	var obj = pricingMatrix[tierIndex-1];

	if (table.style.display == null || table.style.display == "none") {
		table.style.display = "block";
	}

	for (var i in obj) {
		element = document.getElementById(i);

		if (element != null) {
			document.getElementById(i).innerHTML = obj[i];
		}
	}
}

var pricingMatrix = [ {
	"tier": 1,
	"rtl_us": 0.99,
	"rtl_mexico": 10.00,
	"rtl_cad": 0.99,
	"rtl_uk": 0.59,
	"rtl_eur": .79,
	"rtl_norway": 6,
	"rtl_sweden": 7,
	"rtl_denmark": 6,
	"rtl_switzerland": 1.1,
	"rtl_australia": 1.19,
	"rtl_newZealand": 1.29,
	"rtl_japan": 115,
	"whsl_us": 0.70,
	"whsl_cad": 0.70,
	"whsl_uk": 0.36,
	"whsl_eurZone": 0.48,
	"whsl_ausNewZealand": 0.76,
	"whsl_japan": 81
},
{
	"tier": 2,
	"rtl_us": 1.99,
	"rtl_mexico": 20.00,
	"rtl_cad": 1.99,
	"rtl_uk": 1.19,
	"rtl_eur": 1.59,
	"rtl_norway": 11,
	"rtl_sweden": 15,
	"rtl_denmark": 12,
	"rtl_switzerland": 2.20,
	"rtl_australia": 2.49,
	"rtl_newZealand": 2.59,
	"rtl_japan": 230,
	"whsl_us": 1.40,
	"whsl_cad": 1.40,
	"whsl_uk": 0.72,
	"whsl_eurZone": 0.97,
	"whsl_ausNewZealand": 1.58,
	"whsl_japan": 161
},
{
	"tier": 3,
	"rtl_us": 2.99,
	"rtl_mexico": 30.00,
	"rtl_cad": 2.99,
	"rtl_uk": 1.79,
	"rtl_eur": 2.39,
	"rtl_norway": 17,
	"rtl_sweden": 22,
	"rtl_denmark": 18,
	"rtl_switzerland": 3.3,
	"rtl_australia": 3.99,
	"rtl_newZealand": 4.19,
	"rtl_japan": 350,
	"whsl_us": 2.10,
	"whsl_cad": 2.10,
	"whsl_uk": 1.09,
	"whsl_eurZone": 1.45,
	"whsl_ausNewZealand": 2.54,
	"whsl_japan": 245
},
{
	"tier": 4,
	"rtl_us": 3.99,
	"rtl_mexico": 40.00,
	"rtl_cad": 3.99,
	"rtl_uk": 2.39,
	"rtl_eur": 2.99,
	"rtl_norway": 21,
	"rtl_sweden": 28,
	"rtl_denmark": 24,
	"rtl_switzerland": 4.4,
	"rtl_australia": 4.99,
	"rtl_newZealand": 5.29,
	"rtl_japan": 450,
	"whsl_us": 2.80,
	"whsl_cad": 2.80,
	"whsl_uk": 1.45,
	"whsl_eurZone": 1.82,
	"whsl_ausNewZealand": 3.18,
	"whsl_japan": 315
},
{
	"tier": 5,
	"rtl_us": 4.99,
	"rtl_mexico": 50.00,
	"rtl_cad": 4.99,
	"rtl_uk": 2.99,
	"rtl_eur": 3.99,
	"rtl_norway": 29,
	"rtl_sweden": 38,
	"rtl_denmark": 30,
	"rtl_switzerland": 5.5,
	"rtl_australia": 5.99,
	"rtl_newZealand": 6.49,
	"rtl_japan": 600,
	"whsl_us": 3.50,
	"whsl_cad": 3.50,
	"whsl_uk": 1.82,
	"whsl_eurZone": 2.43,
	"whsl_ausNewZealand": 3.81,
	"whsl_japan": 420
},
{
	"tier": 6,
	"rtl_us": 5.99,
	"rtl_mexico": 60.00,
	"rtl_cad": 5.99,
	"rtl_uk": 3.49,
	"rtl_eur": 4.99,
	"rtl_norway": 35,
	"rtl_sweden": 45,
	"rtl_denmark": 36,
	"rtl_switzerland": 6.6,
	"rtl_australia": 7.99,
	"rtl_newZealand": 8.29,
	"rtl_japan": 700,
	"whsl_us": 4.20,
	"whsl_cad": 4.20,
	"whsl_uk": 2.12,
	"whsl_eurZone": 3.04,
	"whsl_ausNewZealand": 5.08,
	"whsl_japan": 490
},
{
	"tier": 7,
	"rtl_us": 6.99,
	"rtl_mexico": 70.00,
	"rtl_cad": 6.99,
	"rtl_uk": 3.99,
	"rtl_eur": 5.49,
	"rtl_norway": 39,
	"rtl_sweden": 49,
	"rtl_denmark": 42,
	"rtl_switzerland": 7.7,
	"rtl_australia": 8.99,
	"rtl_newZealand": 9.99,
	"rtl_japan": 800,
	"whsl_us": 4.90,
	"whsl_cad": 4.90,
	"whsl_uk": 2.43,
	"whsl_eurZone": 3.34,
	"whsl_ausNewZealand": 5.72,
	"whsl_japan": 560
},
{
	"tier": 8,
	"rtl_us": 7.99,
	"rtl_mexico": 80.00,
	"rtl_cad": 7.99,
	"rtl_uk": 4.99,
	"rtl_eur": 5.99,
	"rtl_norway": 45,
	"rtl_sweden": 55,
	"rtl_denmark": 48,
	"rtl_switzerland": 8.8,
	"rtl_australia": 9.99,
	"rtl_newZealand": 10.99,
	"rtl_japan": 900,
	"whsl_us": 5.60,
	"whsl_cad": 5.60,
	"whsl_uk": 3.04,
	"whsl_eurZone": 3.65,
	"whsl_ausNewZealand": 6.36,
	"whsl_japan": 630
},
{
	"tier": 9,
	"rtl_us": 8.99,
	"rtl_mexico": 90.00,
	"rtl_cad": 8.99,
	"rtl_uk": 5.49,
	"rtl_eur": 6.99,
	"rtl_norway": 49,
	"rtl_sweden": 65,
	"rtl_denmark": 54,
	"rtl_switzerland": 9.9,
	"rtl_australia": 11.99,
	"rtl_newZealand": 12.99,
	"rtl_japan": 1000,
	"whsl_us": 6.30,
	"whsl_cad": 6.30,
	"whsl_uk": 3.34,
	"whsl_eurZone": 4.25,
	"whsl_ausNewZealand": 7.63,
	"whsl_japan": 700
},
{
	"tier": 10,
	"rtl_us": 9.99,
	"rtl_mexico": 100.00,
	"rtl_cad": 9.99,
	"rtl_uk": 5.99,
	"rtl_eur": 7.99,
	"rtl_norway": 55,
	"rtl_sweden": 75,
	"rtl_denmark": 59,
	"rtl_switzerland": 11,
	"rtl_australia": 12.99,
	"rtl_newZealand": 13.99,
	"rtl_japan": 1200,
	"whsl_us": 7.00,
	"whsl_cad": 7.00,
	"whsl_uk": 3.65,
	"whsl_eurZone": 4.86,
	"whsl_ausNewZealand": 8.27,
	"whsl_japan": 840
},
{
	"tier": 11,
	"rtl_us": 10.99,
	"rtl_mexico": 120.00,
	"rtl_cad": 10.99,
	"rtl_uk": 6.49,
	"rtl_eur": 8.99,
	"rtl_norway": 59,
	"rtl_sweden": 85,
	"rtl_denmark": 69,
	"rtl_switzerland": 12.5,
	"rtl_australia": 13.99,
	"rtl_newZealand": 14.99,
	"rtl_japan": 1300,
	"whsl_us": 7.70,
	"whsl_cad": 7.70,
	"whsl_uk": 3.95,
	"whsl_eurZone": 5.47,
	"whsl_ausNewZealand": 8.9,
	"whsl_japan": 910
},
{
	"tier": 12,
	"rtl_us": 11.99,
	"rtl_mexico": 130.00,
	"rtl_cad": 11.99,
	"rtl_uk": 6.99,
	"rtl_eur": 9.99,
	"rtl_norway": 65,
	"rtl_sweden": 95,
	"rtl_denmark": 75,
	"rtl_switzerland": 14,
	"rtl_australia": 14.99,
	"rtl_newZealand": 15.99,
	"rtl_japan": 1400,
	"whsl_us": 8.40,
	"whsl_cad": 8.40,
	"whsl_uk": 4.25,
	"whsl_eurZone": 6.08,
	"whsl_ausNewZealand": 9.54,
	"whsl_japan": 980
},
{
	"tier": 13,
	"rtl_us": 12.99,
	"rtl_mexico": 140.00,
	"rtl_cad": 12.99,
	"rtl_uk": 7.49,
	"rtl_eur": 10.49,
	"rtl_norway": 69,
	"rtl_sweden": 99,
	"rtl_denmark": 79,
	"rtl_switzerland": 15,
	"rtl_australia": 15.99,
	"rtl_newZealand": 16.99,
	"rtl_japan": 1500,
	"whsl_us": 9.10,
	"whsl_cad": 9.10,
	"whsl_uk": 4.56,
	"whsl_eurZone": 6.39,
	"whsl_ausNewZealand": 10.18,
	"whsl_japan": 1050
},
{
	"tier": 14,
	"rtl_us": 13.99,
	"rtl_mexico": 150.00,
	"rtl_cad": 13.99,
	"rtl_uk": 7.99,
	"rtl_eur": 10.99,
	"rtl_norway": 75,
	"rtl_sweden": 105,
	"rtl_denmark": 85,
	"rtl_switzerland": 16,
	"rtl_australia": 16.99,
	"rtl_newZealand": 17.99,
	"rtl_japan": 1600,
	"whsl_us": 9.80,
	"whsl_cad": 9.80,
	"whsl_uk": 4.86,
	"whsl_eurZone": 6.69,
	"whsl_ausNewZealand": 10.81,
	"whsl_japan": 1120
},
{
	"tier": 15,
	"rtl_us": 14.99,
	"rtl_mexico": 160.00,
	"rtl_cad": 14.99,
	"rtl_uk": 8.99,
	"rtl_eur": 11.99,
	"rtl_norway": 85,
	"rtl_sweden": 109,
	"rtl_denmark": 89,
	"rtl_switzerland": 17,
	"rtl_australia": 17.99,
	"rtl_newZealand": 18.99,
	"rtl_japan": 1700,
	"whsl_us": 10.50,
	"whsl_cad": 10.50,
	"whsl_uk": 5.47,
	"whsl_eurZone": 7.30,
	"whsl_ausNewZealand": 11.45,
	"whsl_japan": 1190
},
{
	"tier": 16,
	"rtl_us": 15.99,
	"rtl_mexico": 170.00,
	"rtl_cad": 15.99,
	"rtl_uk": 9.49,
	"rtl_eur": 12.99,
	"rtl_norway": 89,
	"rtl_sweden": 119,
	"rtl_denmark": 99,
	"rtl_switzerland": 18,
	"rtl_australia": 18.99,
	"rtl_newZealand": 19.99,
	"rtl_japan": 1800,
	"whsl_us": 11.20,
	"whsl_cad": 11.20,
	"whsl_uk": 5.78,
	"whsl_eurZone": 7.91,
	"whsl_ausNewZealand": 12.08,
	"whsl_japan": 1260
},
{
	"tier": 17,
	"rtl_us": 16.99,
	"rtl_mexico": 180.00,
	"rtl_cad": 16.99,
	"rtl_uk": 9.99,
	"rtl_eur": 13.99,
	"rtl_norway": 95,
	"rtl_sweden": 129,
	"rtl_denmark": 105,
	"rtl_switzerland": 19,
	"rtl_australia": 19.99,
	"rtl_newZealand": 20.99,
	"rtl_japan": 2000,
	"whsl_us": 11.90,
	"whsl_cad": 11.90,
	"whsl_uk": 6.08,
	"whsl_eurZone": 8.52,
	"whsl_ausNewZealand": 12.72,
	"whsl_japan": 1400
},
{
	"tier": 18,
	"rtl_us": 17.99,
	"rtl_mexico": 190.00,
	"rtl_cad": 17.99,
	"rtl_uk": 10.99,
	"rtl_eur": 14.49,
	"rtl_norway": 99,
	"rtl_sweden": 135,
	"rtl_denmark": 109,
	"rtl_switzerland": 20,
	"rtl_australia": 21.99,
	"rtl_newZealand": 22.99,
	"rtl_japan": 2100,
	"whsl_us": 12.60,
	"whsl_cad": 12.60,
	"whsl_uk": 6.69,
	"whsl_eurZone": 8.82,
	"whsl_ausNewZealand": 13.99,
	"whsl_japan": 1470
},
{
	"tier": 19,
	"rtl_us": 18.99,
	"rtl_mexico": 200.00,
	"rtl_cad": 18.99,
	"rtl_uk": 11.49,
	"rtl_eur": 14.99,
	"rtl_norway": 105,
	"rtl_sweden": 139,
	"rtl_denmark": 115,
	"rtl_switzerland": 21,
	"rtl_australia": 22.99,
	"rtl_newZealand": 23.99,
	"rtl_japan": 2200,
	"whsl_us": 13.30,
	"whsl_cad": 13.30,
	"whsl_uk": 6.99,
	"whsl_eurZone": 9.12,
	"whsl_ausNewZealand": 14.63,
	"whsl_japan": 1540
},
{
	"tier": 20,
	"rtl_us": 19.99,
	"rtl_mexico": 210.00,
	"rtl_cad": 19.99,
	"rtl_uk": 11.99,
	"rtl_eur": 15.99,
	"rtl_norway": 109,
	"rtl_sweden": 149,
	"rtl_denmark": 119,
	"rtl_switzerland": 22,
	"rtl_australia": 23.99,
	"rtl_newZealand": 24.99,
	"rtl_japan": 2300,
	"whsl_us": 14.00,
	"whsl_cad": 14.00,
	"whsl_uk": 7.3,
	"whsl_eurZone": 9.73,
	"whsl_ausNewZealand": 15.27,
	"whsl_japan": 1610
},
{
	"tier": 21,
	"rtl_us": 20.99,
	"rtl_mexico": 220.00,
	"rtl_cad": 20.99,
	"rtl_uk": 12.49,
	"rtl_eur": 16.99,
	"rtl_norway": 119,
	"rtl_sweden": 159,
	"rtl_denmark": 125,
	"rtl_switzerland": 24,
	"rtl_australia": 24.99,
	"rtl_newZealand": 25.99,
	"rtl_japan": 2400,
	"whsl_us": 14.70,
	"whsl_cad": 14.70,
	"whsl_uk": 7.6,
	"whsl_eurZone": 10.34,
	"whsl_ausNewZealand": 15.9,
	"whsl_japan": 1680
},
{
	"tier": 22,
	"rtl_us": 21.99,
	"rtl_mexico": 230.00,
	"rtl_cad": 21.99,
	"rtl_uk": 12.99,
	"rtl_eur": 17.99,
	"rtl_norway": 125,
	"rtl_sweden": 169,
	"rtl_denmark": 129,
	"rtl_switzerland": 25,
	"rtl_australia": 26.99,
	"rtl_newZealand": 27.99,
	"rtl_japan": 2500,
	"whsl_us": 15.40,
	"whsl_cad": 15.40,
	"whsl_uk": 7.91,
	"whsl_eurZone": 10.95,
	"whsl_ausNewZealand": 17.18,
	"whsl_japan": 1750
},
{
	"tier": 23,
	"rtl_us": 22.99,
	"rtl_mexico": 240.00,
	"rtl_cad": 22.99,
	"rtl_uk": 13.99,
	"rtl_eur": 18.49,
	"rtl_norway": 129,
	"rtl_sweden": 175,
	"rtl_denmark": 135,
	"rtl_switzerland": 26,
	"rtl_australia": 27.99,
	"rtl_newZealand": 28.99,
	"rtl_japan": 2600,
	"whsl_us": 16.10,
	"whsl_cad": 16.10,
	"whsl_uk": 8.52,
	"whsl_eurZone": 11.25,
	"whsl_ausNewZealand": 17.81,
	"whsl_japan": 1820
},
{
	"tier": 24,
	"rtl_us": 23.99,
	"rtl_mexico": 250.00,
	"rtl_cad": 23.99,
	"rtl_uk": 14.49,
	"rtl_eur": 18.99,
	"rtl_norway": 135,
	"rtl_sweden": 179,
	"rtl_denmark": 139,
	"rtl_switzerland": 27,
	"rtl_australia": 28.99,
	"rtl_newZealand": 29.99,
	"rtl_japan": 2800,
	"whsl_us": 16.80,
	"whsl_cad": 16.80,
	"whsl_uk": 8.82,
	"whsl_eurZone": 11.56,
	"whsl_ausNewZealand": 18.45,
	"whsl_japan": 1960
},
{
	"tier": 25,
	"rtl_us": 24.99,
	"rtl_mexico": 260.00,
	"rtl_cad": 24.99,
	"rtl_uk": 14.99,
	"rtl_eur": 19.99,
	"rtl_norway": 139,
	"rtl_sweden": 189,
	"rtl_denmark": 149,
	"rtl_switzerland": 28,
	"rtl_australia": 29.99,
	"rtl_newZealand": 30.99,
	"rtl_japan": 2900,
	"whsl_us": 17.50,
	"whsl_cad": 17.50,
	"whsl_uk": 9.12,
	"whsl_eurZone": 12.17,
	"whsl_ausNewZealand": 19.08,
	"whsl_japan": 2030
},
{
	"tier": 26,
	"rtl_us": 25.99,
	"rtl_mexico": 270.00,
	"rtl_cad": 25.99,
	"rtl_uk": 15.49,
	"rtl_eur": 20.99,
	"rtl_norway": 145,
	"rtl_sweden": 195,
	"rtl_denmark": 155,
	"rtl_switzerland": 29,
	"rtl_australia": 31.99,
	"rtl_newZealand": 32.99,
	"rtl_japan": 3000,
	"whsl_us": 18.20,
	"whsl_cad": 18.20,
	"whsl_uk": 9.43,
	"whsl_eurZone": 12.78,
	"whsl_ausNewZealand": 20.36,
	"whsl_japan": 2100
},
{
	"tier": 27,
	"rtl_us": 26.99,
	"rtl_mexico": 280.00,
	"rtl_cad": 26.99,
	"rtl_uk": 15.99,
	"rtl_eur": 21.49,
	"rtl_norway": 149,
	"rtl_sweden": 199,
	"rtl_denmark": 159,
	"rtl_switzerland": 30,
	"rtl_australia": 32.99,
	"rtl_newZealand": 34.99,
	"rtl_japan": 3100,
	"whsl_us": 18.90,
	"whsl_cad": 18.90,
	"whsl_uk": 9.73,
	"whsl_eurZone": 13.08,
	"whsl_ausNewZealand": 20.99,
	"whsl_japan": 2170
},
{
	"tier": 28,
	"rtl_us": 27.99,
	"rtl_mexico": 290.00,
	"rtl_cad": 27.99,
	"rtl_uk": 16.99,
	"rtl_eur": 21.99,
	"rtl_norway": 155,
	"rtl_sweden": 209,
	"rtl_denmark": 165,
	"rtl_switzerland": 31,
	"rtl_australia": 33.99,
	"rtl_newZealand": 35.99,
	"rtl_japan": 3200,
	"whsl_us": 19.60,
	"whsl_cad": 19.60,
	"whsl_uk": 10.34,
	"whsl_eurZone": 13.39,
	"whsl_ausNewZealand": 21.63,
	"whsl_japan": 2240
},
{
	"tier": 29,
	"rtl_us": 28.99,
	"rtl_mexico": 300.00,
	"rtl_cad": 28.99,
	"rtl_uk": 17.49,
	"rtl_eur": 22.99,
	"rtl_norway": 159,
	"rtl_sweden": 219,
	"rtl_denmark": 169,
	"rtl_switzerland": 32,
	"rtl_australia": 34.99,
	"rtl_newZealand": 36.99,
	"rtl_japan": 3300,
	"whsl_us": 20.30,
	"whsl_cad": 20.30,
	"whsl_uk": 10.65,
	"whsl_eurZone": 13.99,
	"whsl_ausNewZealand": 22.27,
	"whsl_japan": 2310
},
{
	"tier": 30,
	"rtl_us": 29.99,
	"rtl_mexico": 320.00,
	"rtl_cad": 29.99,
	"rtl_uk": 17.99,
	"rtl_eur": 23.99,
	"rtl_norway": 165,
	"rtl_sweden": 229,
	"rtl_denmark": 179,
	"rtl_switzerland": 33,
	"rtl_australia": 36.99,
	"rtl_newZealand": 38.99,
	"rtl_japan": 3500,
	"whsl_us": 21.00,
	"whsl_cad": 21.00,
	"whsl_uk": 10.95,
	"whsl_eurZone": 14.60,
	"whsl_ausNewZealand": 23.54,
	"whsl_japan": 2450
},
{
	"tier": 31,
	"rtl_us": 30.99,
	"rtl_mexico": 330.00,
	"rtl_cad": 30.99,
	"rtl_uk": 18.49,
	"rtl_eur": 24.99,
	"rtl_norway": 169,
	"rtl_sweden": 235,
	"rtl_denmark": 185,
	"rtl_switzerland": 34,
	"rtl_australia": 37.99,
	"rtl_newZealand": 39.99,
	"rtl_japan": 3600,
	"whsl_us": 21.70,
	"whsl_cad": 21.70,
	"whsl_uk": 11.25,
	"whsl_eurZone": 15.21,
	"whsl_ausNewZealand": 24.18,
	"whsl_japan": 2520
},
{
	"tier": 32,
	"rtl_us": 31.99,
	"rtl_mexico": 340.00,
	"rtl_cad": 31.99,
	"rtl_uk": 18.99,
	"rtl_eur": 25.49,
	"rtl_norway": 175,
	"rtl_sweden": 239,
	"rtl_denmark": 189,
	"rtl_switzerland": 35,
	"rtl_australia": 38.99,
	"rtl_newZealand": 40.99,
	"rtl_japan": 3700,
	"whsl_us": 22.40,
	"whsl_cad": 22.40,
	"whsl_uk": 11.56,
	"whsl_eurZone": 15.52,
	"whsl_ausNewZealand": 24.81,
	"whsl_japan": 2590
},
{
	"tier": 33,
	"rtl_us": 32.99,
	"rtl_mexico": 350.00,
	"rtl_cad": 32.99,
	"rtl_uk": 19.99,
	"rtl_eur": 25.99,
	"rtl_norway": 179,
	"rtl_sweden": 245,
	"rtl_denmark": 195,
	"rtl_switzerland": 36,
	"rtl_australia": 39.99,
	"rtl_newZealand": 41.99,
	"rtl_japan": 3800,
	"whsl_us": 23.10,
	"whsl_cad": 23.10,
	"whsl_uk": 12.17,
	"whsl_eurZone": 15.82,
	"whsl_ausNewZealand": 25.45,
	"whsl_japan": 2660
},
{
	"tier": 34,
	"rtl_us": 33.99,
	"rtl_mexico": 360.00,
	"rtl_cad": 33.99,
	"rtl_uk": 20.49,
	"rtl_eur": 26.99,
	"rtl_norway": 189,
	"rtl_sweden": 249,
	"rtl_denmark": 199,
	"rtl_switzerland": 37,
	"rtl_australia": 41.99,
	"rtl_newZealand": 43.99,
	"rtl_japan": 3900,
	"whsl_us": 23.80,
	"whsl_cad": 23.80,
	"whsl_uk": 12.47,
	"whsl_eurZone": 16.43,
	"whsl_ausNewZealand": 26.72,
	"whsl_japan": 2730
},
{
	"tier": 35,
	"rtl_us": 34.99,
	"rtl_mexico": 370.00,
	"rtl_cad": 34.99,
	"rtl_uk": 20.99,
	"rtl_eur": 27.99,
	"rtl_norway": 195,
	"rtl_sweden": 265,
	"rtl_denmark": 209,
	"rtl_switzerland": 38,
	"rtl_australia": 42.99,
	"rtl_newZealand": 44.99,
	"rtl_japan": 4000,
	"whsl_us": 24.50,
	"whsl_cad": 24.50,
	"whsl_uk": 12.78,
	"whsl_eurZone": 17.04,
	"whsl_ausNewZealand": 27.36,
	"whsl_japan": 2800
},
{
	"tier": 36,
	"rtl_us": 35.99,
	"rtl_mexico": 380.00,
	"rtl_cad": 35.99,
	"rtl_uk": 21.49,
	"rtl_eur": 28.99,
	"rtl_norway": 199,
	"rtl_sweden": 269,
	"rtl_denmark": 215,
	"rtl_switzerland": 39,
	"rtl_australia": 43.99,
	"rtl_newZealand": 45.99,
	"rtl_japan": 4100,
	"whsl_us": 25.20,
	"whsl_cad": 25.20,
	"whsl_uk": 13.08,
	"whsl_eurZone": 17.65,
	"whsl_ausNewZealand": 27.99,
	"whsl_japan": 2870
},
{
	"tier": 37,
	"rtl_us": 36.99,
	"rtl_mexico": 390.00,
	"rtl_cad": 36.99,
	"rtl_uk": 21.99,
	"rtl_eur": 29.49,
	"rtl_norway": 205,
	"rtl_sweden": 275,
	"rtl_denmark": 219,
	"rtl_switzerland": 40,
	"rtl_australia": 44.99,
	"rtl_newZealand": 46.99,
	"rtl_japan": 4300,
	"whsl_us": 25.90,
	"whsl_cad": 25.90,
	"whsl_uk": 13.39,
	"whsl_eurZone": 17.95,
	"whsl_ausNewZealand": 28.63,
	"whsl_japan": 3010
},
{
	"tier": 38,
	"rtl_us": 37.99,
	"rtl_mexico": 400.00,
	"rtl_cad": 37.99,
	"rtl_uk": 22.99,
	"rtl_eur": 29.99,
	"rtl_norway": 209,
	"rtl_sweden": 285,
	"rtl_denmark": 225,
	"rtl_switzerland": 41,
	"rtl_australia": 45.99,
	"rtl_newZealand": 47.99,
	"rtl_japan": 4400,
	"whsl_us": 26.60,
	"whsl_cad": 26.60,
	"whsl_uk": 13.99,
	"whsl_eurZone": 18.25,
	"whsl_ausNewZealand": 29.27,
	"whsl_japan": 3080
},
{
	"tier": 39,
	"rtl_us": 38.99,
	"rtl_mexico": 410.00,
	"rtl_cad": 38.99,
	"rtl_uk": 23.49,
	"rtl_eur": 30.99,
	"rtl_norway": 215,
	"rtl_sweden": 289,
	"rtl_denmark": 229,
	"rtl_switzerland": 43,
	"rtl_australia": 46.99,
	"rtl_newZealand": 48.99,
	"rtl_japan": 4500,
	"whsl_us": 27.30,
	"whsl_cad": 27.30,
	"whsl_uk": 14.3,
	"whsl_eurZone": 18.86,
	"whsl_ausNewZealand": 29.9,
	"whsl_japan": 3150
},
{
	"tier": 40,
	"rtl_us": 39.99,
	"rtl_mexico": 420.00,
	"rtl_cad": 39.99,
	"rtl_uk": 23.99,
	"rtl_eur": 31.99,
	"rtl_norway": 219,
	"rtl_sweden": 299,
	"rtl_denmark": 239,
	"rtl_switzerland": 44,
	"rtl_australia": 47.99,
	"rtl_newZealand": 49.99,
	"rtl_japan": 4600,
	"whsl_us": 28.00,
	"whsl_cad": 28.00,
	"whsl_uk": 14.6,
	"whsl_eurZone": 19.47,
	"whsl_ausNewZealand": 30.54,
	"whsl_japan": 3220
},
{
	"tier": 41,
	"rtl_us": 40.99,
	"rtl_mexico": 430.00,
	"rtl_cad": 40.99,
	"rtl_uk": 24.49,
	"rtl_eur": 32.99,
	"rtl_norway": 225,
	"rtl_sweden": 309,
	"rtl_denmark": 245,
	"rtl_switzerland": 45,
	"rtl_australia": 48.99,
	"rtl_newZealand": 50.99,
	"rtl_japan": 4700,
	"whsl_us": 28.70,
	"whsl_cad": 28.70,
	"whsl_uk": 14.91,
	"whsl_eurZone": 20.08,
	"whsl_ausNewZealand": 31.18,
	"whsl_japan": 3290
},
{
	"tier": 42,
	"rtl_us": 41.99,
	"rtl_mexico": 440.00,
	"rtl_cad": 41.99,
	"rtl_uk": 24.99,
	"rtl_eur": 33.49,
	"rtl_norway": 229,
	"rtl_sweden": 315,
	"rtl_denmark": 249,
	"rtl_switzerland": 46,
	"rtl_australia": 49.99,
	"rtl_newZealand": 51.99,
	"rtl_japan": 4800,
	"whsl_us": 29.40,
	"whsl_cad": 29.40,
	"whsl_uk": 15.21,
	"whsl_eurZone": 20.39,
	"whsl_ausNewZealand": 31.81,
	"whsl_japan": 3360
},
{
	"tier": 43,
	"rtl_us": 42.99,
	"rtl_mexico": 450.00,
	"rtl_cad": 42.99,
	"rtl_uk": 25.99,
	"rtl_eur": 33.99,
	"rtl_norway": 235,
	"rtl_sweden": 319,
	"rtl_denmark": 255,
	"rtl_switzerland": 47,
	"rtl_australia": 51.99,
	"rtl_newZealand": 53.99,
	"rtl_japan": 4900,
	"whsl_us": 30.10,
	"whsl_cad": 30.10,
	"whsl_uk": 15.82,
	"whsl_eurZone": 20.69,
	"whsl_ausNewZealand": 33.08,
	"whsl_japan": 3430
},
{
	"tier": 44,
	"rtl_us": 43.99,
	"rtl_mexico": 460.00,
	"rtl_cad": 43.99,
	"rtl_uk": 26.49,
	"rtl_eur": 34.99,
	"rtl_norway": 239,
	"rtl_sweden": 329,
	"rtl_denmark": 259,
	"rtl_switzerland": 48,
	"rtl_australia": 52.99,
	"rtl_newZealand": 54.99,
	"rtl_japan": 5000,
	"whsl_us": 30.80,
	"whsl_cad": 30.80,
	"whsl_uk": 16.12,
	"whsl_eurZone": 21.30,
	"whsl_ausNewZealand": 33.72,
	"whsl_japan": 3500
},
{
	"tier": 45,
	"rtl_us": 44.99,
	"rtl_mexico": 470.00,
	"rtl_cad": 44.99,
	"rtl_uk": 26.99,
	"rtl_eur": 35.99,
	"rtl_norway": 249,
	"rtl_sweden": 339,
	"rtl_denmark": 269,
	"rtl_switzerland": 49,
	"rtl_australia": 53.99,
	"rtl_newZealand": 55.99,
	"rtl_japan": 5200,
	"whsl_us": 31.50,
	"whsl_cad": 31.50,
	"whsl_uk": 16.43,
	"whsl_eurZone": 21.91,
	"whsl_ausNewZealand": 34.36,
	"whsl_japan": 3640
},
{
	"tier": 46,
	"rtl_us": 45.99,
	"rtl_mexico": 480.00,
	"rtl_cad": 45.99,
	"rtl_uk": 27.49,
	"rtl_eur": 36.99,
	"rtl_norway": 255,
	"rtl_sweden": 345,
	"rtl_denmark": 275,
	"rtl_switzerland": 51,
	"rtl_australia": 54.99,
	"rtl_newZealand": 56.99,
	"rtl_japan": 5300,
	"whsl_us": 32.20,
	"whsl_cad": 32.20,
	"whsl_uk": 16.73,
	"whsl_eurZone": 22.52,
	"whsl_ausNewZealand": 34.99,
	"whsl_japan": 3710
},
{
	"tier": 47,
	"rtl_us": 46.99,
	"rtl_mexico": 490.00,
	"rtl_cad": 46.99,
	"rtl_uk": 27.99,
	"rtl_eur": 37.49,
	"rtl_norway": 259,
	"rtl_sweden": 349,
	"rtl_denmark": 279,
	"rtl_switzerland": 52,
	"rtl_australia": 56.99,
	"rtl_newZealand": 58.99,
	"rtl_japan": 5400,
	"whsl_us": 32.90,
	"whsl_cad": 32.90,
	"whsl_uk": 17.04,
	"whsl_eurZone": 22.82,
	"whsl_ausNewZealand": 36.27,
	"whsl_japan": 3780
},
{
	"tier": 48,
	"rtl_us": 47.99,
	"rtl_mexico": 500.00,
	"rtl_cad": 47.99,
	"rtl_uk": 28.99,
	"rtl_eur": 37.99,
	"rtl_norway": 265,
	"rtl_sweden": 359,
	"rtl_denmark": 285,
	"rtl_switzerland": 53,
	"rtl_australia": 57.99,
	"rtl_newZealand": 59.99,
	"rtl_japan": 5500,
	"whsl_us": 33.60,
	"whsl_cad": 33.60,
	"whsl_uk": 17.65,
	"whsl_eurZone": 23.12,
	"whsl_ausNewZealand": 36.9,
	"whsl_japan": 3850
},
{
	"tier": 49,
	"rtl_us": 48.99,
	"rtl_mexico": 520.00,
	"rtl_cad": 48.99,
	"rtl_uk": 29.49,
	"rtl_eur": 38.99,
	"rtl_norway": 269,
	"rtl_sweden": 369,
	"rtl_denmark": 289,
	"rtl_switzerland": 54,
	"rtl_australia": 58.99,
	"rtl_newZealand": 60.99,
	"rtl_japan": 5600,
	"whsl_us": 34.30,
	"whsl_cad": 34.30,
	"whsl_uk": 17.95,
	"whsl_eurZone": 23.73,
	"whsl_ausNewZealand": 37.54,
	"whsl_japan": 3920
},
{
	"tier": 50,
	"rtl_us": 49.99,
	"rtl_mexico": 530.00,
	"rtl_cad": 49.99,
	"rtl_uk": 29.99,
	"rtl_eur": 39.99,
	"rtl_norway": 279,
	"rtl_sweden": 379,
	"rtl_denmark": 299,
	"rtl_switzerland": 55,
	"rtl_australia": 59.99,
	"rtl_newZealand": 64.99,
	"rtl_japan": 5800,
	"whsl_us": 35.00,
	"whsl_cad": 35.00,
	"whsl_uk": 18.25,
	"whsl_eurZone": 24.34,
	"whsl_ausNewZealand": 38.18,
	"whsl_japan": 4060
},
{
	"tier": 51,
	"rtl_us": 54.99,
	"rtl_mexico": 580.00,
	"rtl_cad": 54.99,
	"rtl_uk": 32.99,
	"rtl_eur": 42.99,
	"rtl_norway": 299,
	"rtl_sweden": 399,
	"rtl_denmark": 319,
	"rtl_switzerland": 59,
	"rtl_australia": 69.99,
	"rtl_newZealand": 74.99,
	"rtl_japan": 6000,
	"whsl_us": 38.50,
	"whsl_cad": 38.50,
	"whsl_uk": 20.08,
	"whsl_eurZone": 26.17,
	"whsl_ausNewZealand": 44.54,
	"whsl_japan": 4200
},
{
	"tier": 52,
	"rtl_us": 59.99,
	"rtl_mexico": 630.00,
	"rtl_cad": 59.99,
	"rtl_uk": 34.99,
	"rtl_eur": 44.99,
	"rtl_norway": 319,
	"rtl_sweden": 419,
	"rtl_denmark": 339,
	"rtl_switzerland": 62,
	"rtl_australia": 74.99,
	"rtl_newZealand": 79.99,
	"rtl_japan": 7000,
	"whsl_us": 42.00,
	"whsl_cad": 42.00,
	"whsl_uk": 21.3,
	"whsl_eurZone": 27.39,
	"whsl_ausNewZealand": 47.72,
	"whsl_japan": 4900
},
{
	"tier": 53,
	"rtl_us": 64.99,
	"rtl_mexico": 680.00,
	"rtl_cad": 64.99,
	"rtl_uk": 37.99,
	"rtl_eur": 49.99,
	"rtl_norway": 349,
	"rtl_sweden": 469,
	"rtl_denmark": 369,
	"rtl_switzerland": 69,
	"rtl_australia": 79.99,
	"rtl_newZealand": 84.99,
	"rtl_japan": 7500,
	"whsl_us": 45.50,
	"whsl_cad": 45.50,
	"whsl_uk": 23.12,
	"whsl_eurZone": 30.43,
	"whsl_ausNewZealand": 50.9,
	"whsl_japan": 5250
},
{
	"tier": 54,
	"rtl_us": 69.99,
	"rtl_mexico": 740.00,
	"rtl_cad": 69.99,
	"rtl_uk": 39.99,
	"rtl_eur": 54.99,
	"rtl_norway": 379,
	"rtl_sweden": 519,
	"rtl_denmark": 399,
	"rtl_switzerland": 76,
	"rtl_australia": 89.99,
	"rtl_newZealand": 94.99,
	"rtl_japan": 8000,
	"whsl_us": 49.00,
	"whsl_cad": 49.00,
	"whsl_uk": 24.34,
	"whsl_eurZone": 33.47,
	"whsl_ausNewZealand": 57.27,
	"whsl_japan": 5600
},
{
	"tier": 55,
	"rtl_us": 74.99,
	"rtl_mexico": 790.00,
	"rtl_cad": 74.99,
	"rtl_uk": 42.99,
	"rtl_eur": 59.99,
	"rtl_norway": 419,
	"rtl_sweden": 569,
	"rtl_denmark": 439,
	"rtl_switzerland": 79,
	"rtl_australia": 94.99,
	"rtl_newZealand": 99.99,
	"rtl_japan": 8500,
	"whsl_us": 52.50,
	"whsl_cad": 52.50,
	"whsl_uk": 26.17,
	"whsl_eurZone": 36.52,
	"whsl_ausNewZealand": 60.45,
	"whsl_japan": 5950
},
{
	"tier": 56,
	"rtl_us": 79.99,
	"rtl_mexico": 840.00,
	"rtl_cad": 79.99,
	"rtl_uk": 44.99,
	"rtl_eur": 62.99,
	"rtl_norway": 439,
	"rtl_sweden": 599,
	"rtl_denmark": 469,
	"rtl_switzerland": 85,
	"rtl_australia": 99.99,
	"rtl_newZealand": 104.99,
	"rtl_japan": 9000,
	"whsl_us": 56.00,
	"whsl_cad": 56.00,
	"whsl_uk": 27.39,
	"whsl_eurZone": 38.34,
	"whsl_ausNewZealand": 63.63,
	"whsl_japan": 6300
},
{
	"tier": 57,
	"rtl_us": 84.99,
	"rtl_mexico": 900.00,
	"rtl_cad": 84.99,
	"rtl_uk": 49.99,
	"rtl_eur": 64.99,
	"rtl_norway": 459,
	"rtl_sweden": 619,
	"rtl_denmark": 499,
	"rtl_switzerland": 89,
	"rtl_australia": 104.99,
	"rtl_newZealand": 109.99,
	"rtl_japan": 10000,
	"whsl_us": 59.50,
	"whsl_cad": 59.50,
	"whsl_uk": 30.43,
	"whsl_eurZone": 39.56,
	"whsl_ausNewZealand": 66.81,
	"whsl_japan": 7000
},
{
	"tier": 58,
	"rtl_us": 89.99,
	"rtl_mexico": 950.00,
	"rtl_cad": 89.99,
	"rtl_uk": 52.99,
	"rtl_eur": 69.99,
	"rtl_norway": 489,
	"rtl_sweden": 659,
	"rtl_denmark": 529,
	"rtl_switzerland": 99,
	"rtl_australia": 109.99,
	"rtl_newZealand": 114.99,
	"rtl_japan": 10500,
	"whsl_us": 63.00,
	"whsl_cad": 63.00,
	"whsl_uk": 32.25,
	"whsl_eurZone": 42.60,
	"whsl_ausNewZealand": 69.99,
	"whsl_japan": 7350
},
{
	"tier": 59,
	"rtl_us": 94.99,
	"rtl_mexico": 1000.00,
	"rtl_cad": 94.99,
	"rtl_uk": 54.99,
	"rtl_eur": 74.99,
	"rtl_norway": 519,
	"rtl_sweden": 699,
	"rtl_denmark": 559,
	"rtl_switzerland": 105,
	"rtl_australia": 114.99,
	"rtl_newZealand": 119.99,
	"rtl_japan": 11000,
	"whsl_us": 66.50,
	"whsl_cad": 66.50,
	"whsl_uk": 33.47,
	"whsl_eurZone": 45.65,
	"whsl_ausNewZealand": 73.18,
	"whsl_japan": 7700
},
{
	"tier": 60,
	"rtl_us": 99.99,
	"rtl_mexico": 1050.00,
	"rtl_cad": 99.99,
	"rtl_uk": 59.99,
	"rtl_eur": 79.99,
	"rtl_norway": 549,
	"rtl_sweden": 749,
	"rtl_denmark": 599,
	"rtl_switzerland": 109,
	"rtl_australia": 119.99,
	"rtl_newZealand": 124.99,
	"rtl_japan": 11500,
	"whsl_us": 70.00,
	"whsl_cad": 70.00,
	"whsl_uk": 36.52,
	"whsl_eurZone": 48.69,
	"whsl_ausNewZealand": 76.36,
	"whsl_japan": 8050
},
{
	"tier": 61,
	"rtl_us": 109.99,
	"rtl_mexico": 1200.00,
	"rtl_cad": 109.99,
	"rtl_uk": 64.99,
	"rtl_eur": 84.99,
	"rtl_norway": 599,
	"rtl_sweden": 799,
	"rtl_denmark": 629,
	"rtl_switzerland": 119,
	"rtl_australia": 139.99,
	"rtl_newZealand": 149.99,
	"rtl_japan": 13000,
	"whsl_us": 77.00,
	"whsl_cad": 77.00,
	"whsl_uk": 39.56,
	"whsl_eurZone": 51.73,
	"whsl_ausNewZealand": 89.08,
	"whsl_japan": 9100
},
{
	"tier": 62,
	"rtl_us": 119.99,
	"rtl_mexico": 1300.00,
	"rtl_cad": 119.99,
	"rtl_uk": 69.99,
	"rtl_eur": 89.99,
	"rtl_norway": 619,
	"rtl_sweden": 849,
	"rtl_denmark": 669,
	"rtl_switzerland": 129,
	"rtl_australia": 149.99,
	"rtl_newZealand": 159.99,
	"rtl_japan": 14000,
	"whsl_us": 84.00,
	"whsl_cad": 84.00,
	"whsl_uk": 42.6,
	"whsl_eurZone": 54.78,
	"whsl_ausNewZealand": 95.45,
	"whsl_japan": 9800
},
{
	"tier": 63,
	"rtl_us": 129.99,
	"rtl_mexico": 1400.00,
	"rtl_cad": 129.99,
	"rtl_uk": 74.99,
	"rtl_eur": 94.99,
	"rtl_norway": 659,
	"rtl_sweden": 899,
	"rtl_denmark": 699,
	"rtl_switzerland": 139,
	"rtl_australia": 159.99,
	"rtl_newZealand": 169.99,
	"rtl_japan": 15000,
	"whsl_us": 91.00,
	"whsl_cad": 91.00,
	"whsl_uk": 45.65,
	"whsl_eurZone": 57.82,
	"whsl_ausNewZealand": 101.81,
	"whsl_japan": 10500
},
{
	"tier": 64,
	"rtl_us": 139.99,
	"rtl_mexico": 1500.00,
	"rtl_cad": 139.99,
	"rtl_uk": 79.99,
	"rtl_eur": 99.99,
	"rtl_norway": 699,
	"rtl_sweden": 949,
	"rtl_denmark": 749,
	"rtl_switzerland": 149,
	"rtl_australia": 169.99,
	"rtl_newZealand": 179.99,
	"rtl_japan": 16000,
	"whsl_us": 98.00,
	"whsl_cad": 98.00,
	"whsl_uk": 48.69,
	"whsl_eurZone": 60.86,
	"whsl_ausNewZealand": 108.18,
	"whsl_japan": 11200
},
{
	"tier": 65,
	"rtl_us": 149.99,
	"rtl_mexico": 1600.00,
	"rtl_cad": 149.99,
	"rtl_uk": 84.99,
	"rtl_eur": 109.99,
	"rtl_norway": 769,
	"rtl_sweden": 999,
	"rtl_denmark": 819,
	"rtl_switzerland": 159,
	"rtl_australia": 189.99,
	"rtl_newZealand": 199.99,
	"rtl_japan": 18000,
	"whsl_us": 105.00,
	"whsl_cad": 105.00,
	"whsl_uk": 51.73,
	"whsl_eurZone": 66.95,
	"whsl_ausNewZealand": 120.9,
	"whsl_japan": 12600
},
{
	"tier": 66,
	"rtl_us": 159.99,
	"rtl_mexico": 1700.00,
	"rtl_cad": 159.99,
	"rtl_uk": 89.99,
	"rtl_eur": 119.99,
	"rtl_norway": 839,
	"rtl_sweden": 1099,
	"rtl_denmark": 899,
	"rtl_switzerland": 169,
	"rtl_australia": 199.99,
	"rtl_newZealand": 209.99,
	"rtl_japan": 19000,
	"whsl_us": 112.00,
	"whsl_cad": 112.00,
	"whsl_uk": 54.78,
	"whsl_eurZone": 73.04,
	"whsl_ausNewZealand": 127.27,
	"whsl_japan": 13300
},
{
	"tier": 67,
	"rtl_us": 169.99,
	"rtl_mexico": 1800.00,
	"rtl_cad": 169.99,
	"rtl_uk": 94.99,
	"rtl_eur": 124.99,
	"rtl_norway": 869,
	"rtl_sweden": 1179,
	"rtl_denmark": 929,
	"rtl_switzerland": 179,
	"rtl_australia": 219.99,
	"rtl_newZealand": 229.99,
	"rtl_japan": 20000,
	"whsl_us": 119.00,
	"whsl_cad": 119.00,
	"whsl_uk": 57.82,
	"whsl_eurZone": 76.08,
	"whsl_ausNewZealand": 139.99,
	"whsl_japan": 14000
},
{
	"tier": 68,
	"rtl_us": 179.99,
	"rtl_mexico": 1900.00,
	"rtl_cad": 179.99,
	"rtl_uk": 99.99,
	"rtl_eur": 129.99,
	"rtl_norway": 899,
	"rtl_sweden": 1239,
	"rtl_denmark": 969,
	"rtl_switzerland": 189,
	"rtl_australia": 229.99,
	"rtl_newZealand": 239.99,
	"rtl_japan": 21000,
	"whsl_us": 126.00,
	"whsl_cad": 126.00,
	"whsl_uk": 60.86,
	"whsl_eurZone": 79.12,
	"whsl_ausNewZealand": 146.36,
	"whsl_japan": 14700
},
{
	"tier": 69,
	"rtl_us": 189.99,
	"rtl_mexico": 2000.00,
	"rtl_cad": 189.99,
	"rtl_uk": 109.99,
	"rtl_eur": 139.99,
	"rtl_norway": 999,
	"rtl_sweden": 1319,
	"rtl_denmark": 1039,
	"rtl_switzerland": 199,
	"rtl_australia": 239.99,
	"rtl_newZealand": 249.99,
	"rtl_japan": 22000,
	"whsl_us": 133.00,
	"whsl_cad": 133.00,
	"whsl_uk": 66.95,
	"whsl_eurZone": 85.21,
	"whsl_ausNewZealand": 152.72,
	"whsl_japan": 15400
},
{
	"tier": 70,
	"rtl_us": 199.99,
	"rtl_mexico": 2100.00,
	"rtl_cad": 199.99,
	"rtl_uk": 114.99,
	"rtl_eur": 149.99,
	"rtl_norway": 1049,
	"rtl_sweden": 1399,
	"rtl_denmark": 1119,
	"rtl_switzerland": 209,
	"rtl_australia": 249.99,
	"rtl_newZealand": 259.99,
	"rtl_japan": 23000,
	"whsl_us": 140.00,
	"whsl_cad": 140.00,
	"whsl_uk": 69.99,
	"whsl_eurZone": 91.30,
	"whsl_ausNewZealand": 159.08,
	"whsl_japan": 16100
},
{
	"tier": 71,
	"rtl_us": 209.99,
	"rtl_mexico": 2200.00,
	"rtl_cad": 209.99,
	"rtl_uk": 119.99,
	"rtl_eur": 159.99,
	"rtl_norway": 1099,
	"rtl_sweden": 1499,
	"rtl_denmark": 1199,
	"rtl_switzerland": 219,
	"rtl_australia": 259.99,
	"rtl_newZealand": 269.99,
	"rtl_japan": 24000,
	"whsl_us": 147.00,
	"whsl_cad": 147.00,
	"whsl_uk": 73.04,
	"whsl_eurZone": 97.39,
	"whsl_ausNewZealand": 165.45,
	"whsl_japan": 16800
},
{
	"tier": 72,
	"rtl_us": 219.99,
	"rtl_mexico": 2300.00,
	"rtl_cad": 219.99,
	"rtl_uk": 124.99,
	"rtl_eur": 169.99,
	"rtl_norway": 1199,
	"rtl_sweden": 1599,
	"rtl_denmark": 1269,
	"rtl_switzerland": 229,
	"rtl_australia": 269.99,
	"rtl_newZealand": 279.99,
	"rtl_japan": 25000,
	"whsl_us": 154.00,
	"whsl_cad": 154.00,
	"whsl_uk": 76.08,
	"whsl_eurZone": 103.47,
	"whsl_ausNewZealand": 171.81,
	"whsl_japan": 17500
},
{
	"tier": 73,
	"rtl_us": 229.99,
	"rtl_mexico": 2400.00,
	"rtl_cad": 229.99,
	"rtl_uk": 129.99,
	"rtl_eur": 179.99,
	"rtl_norway": 1249,
	"rtl_sweden": 1699,
	"rtl_denmark": 1349,
	"rtl_switzerland": 249,
	"rtl_australia": 279.99,
	"rtl_newZealand": 289.99,
	"rtl_japan": 26000,
	"whsl_us": 161.00,
	"whsl_cad": 161.00,
	"whsl_uk": 79.12,
	"whsl_eurZone": 109.56,
	"whsl_ausNewZealand": 178.18,
	"whsl_japan": 18200
},
{
	"tier": 74,
	"rtl_us": 239.99,
	"rtl_mexico": 2500.00,
	"rtl_cad": 239.99,
	"rtl_uk": 139.99,
	"rtl_eur": 189.99,
	"rtl_norway": 1299,
	"rtl_sweden": 1799,
	"rtl_denmark": 1399,
	"rtl_switzerland": 259,
	"rtl_australia": 289.99,
	"rtl_newZealand": 299.99,
	"rtl_japan": 27000,
	"whsl_us": 168.00,
	"whsl_cad": 168.00,
	"whsl_uk": 85.21,
	"whsl_eurZone": 115.65,
	"whsl_ausNewZealand": 184.54,
	"whsl_japan": 18900
},
{
	"tier": 75,
	"rtl_us": 249.99,
	"rtl_mexico": 2600.00,
	"rtl_cad": 249.99,
	"rtl_uk": 149.99,
	"rtl_eur": 199.99,
	"rtl_norway": 1399,
	"rtl_sweden": 1899,
	"rtl_denmark": 1499,
	"rtl_switzerland": 279,
	"rtl_australia": 299.99,
	"rtl_newZealand": 319.99,
	"rtl_japan": 29000,
	"whsl_us": 175.00,
	"whsl_cad": 175.00,
	"whsl_uk": 91.3,
	"whsl_eurZone": 121.73,
	"whsl_ausNewZealand": 190.9,
	"whsl_japan": 20300
},
{
	"tier": 76,
	"rtl_us": 299.99,
	"rtl_mexico": 3200.00,
	"rtl_cad": 299.99,
	"rtl_uk": 179.99,
	"rtl_eur": 239.99,
	"rtl_norway": 1699,
	"rtl_sweden": 2299,
	"rtl_denmark": 1799,
	"rtl_switzerland": 329.00,
	"rtl_australia": 349.99,
	"rtl_newZealand": 399.99,
	"rtl_japan": 35000,
	"whsl_us": 210.00,
	"whsl_cad": 210.00,
	"whsl_uk": 109.56,
	"whsl_eurZone": 146.08,
	"whsl_ausNewZealand": 222.72,
	"whsl_japan": 24500
},
{
	"tier": 77,
	"rtl_us": 349.99,
	"rtl_mexico": 3700.00,
	"rtl_cad": 349.99,
	"rtl_uk": 199.99,
	"rtl_eur": 279.99,
	"rtl_norway": 1999,
	"rtl_sweden": 2599,
	"rtl_denmark": 1999,
	"rtl_switzerland": 389.00,
	"rtl_australia": 399.99,
	"rtl_newZealand": 449.99,
	"rtl_japan": 40000,
	"whsl_us": 245.00,
	"whsl_cad": 245.00,
	"whsl_uk": 121.73,
	"whsl_eurZone": 170.43,
	"whsl_ausNewZealand": 254.54,
	"whsl_japan": 28000
},
{
	"tier": 78,
	"rtl_us": 399.99,
	"rtl_mexico": 4200.00,
	"rtl_cad": 399.99,
	"rtl_uk": 239.99,
	"rtl_eur": 319.99,
	"rtl_norway": 2299,
	"rtl_sweden": 2999,
	"rtl_denmark": 2399,
	"rtl_switzerland": 449.00,
	"rtl_australia": 449.99,
	"rtl_newZealand": 499.99,
	"rtl_japan": 45000,
	"whsl_us": 280.00,
	"whsl_cad": 280.00,
	"whsl_uk": 146.08,
	"whsl_eurZone": 194.78,
	"whsl_ausNewZealand": 286.36,
	"whsl_japan": 31500
},
{
	"tier": 79,
	"rtl_us": 449.99,
	"rtl_mexico": 4700.00,
	"rtl_cad": 449.99,
	"rtl_uk": 279.99,
	"rtl_eur": 359.99,
	"rtl_norway": 2499,
	"rtl_sweden": 3399,
	"rtl_denmark": 2699,
	"rtl_switzerland": 499.00,
	"rtl_australia": 499.99,
	"rtl_newZealand": 549.99,
	"rtl_japan": 50000,
	"whsl_us": 315.00,
	"whsl_cad": 315.00,
	"whsl_uk": 170.43,
	"whsl_eurZone": 219.12,
	"whsl_ausNewZealand": 318.18,
	"whsl_japan": 35000
},
{
	"tier": 80,
	"rtl_us": 499.99,
	"rtl_mexico": 5300.00,
	"rtl_cad": 499.99,
	"rtl_uk": 299.99,
	"rtl_eur": 399.99,
	"rtl_norway": 2799,
	"rtl_sweden": 3799,
	"rtl_denmark": 2999,
	"rtl_switzerland": 549.00,
	"rtl_australia": 599.99,
	"rtl_newZealand": 649.99,
	"rtl_japan": 58000,
	"whsl_us": 350.00,
	"whsl_cad": 350.00,
	"whsl_uk": 182.60,
	"whsl_eurZone": 243.47,
	"whsl_ausNewZealand": 381.81,
	"whsl_japan": 40600
},
{
	"tier": 81,
	"rtl_us": 599.99,
	"rtl_mexico": 6300.00,
	"rtl_cad": 599.99,
	"rtl_uk": 349.99,
	"rtl_eur": 479.99,
	"rtl_norway": 3299,
	"rtl_sweden": 4499,
	"rtl_denmark": 3499,
	"rtl_switzerland": 669.00,
	"rtl_australia": 699.99,
	"rtl_newZealand": 749.99,
	"rtl_japan": 70000,
	"whsl_us": 420.00,
	"whsl_cad": 420.00,
	"whsl_uk": 213.04,
	"whsl_eurZone": 292.17,
	"whsl_ausNewZealand": 445.45,
	"whsl_japan": 49000
},
{
	"tier": 82,
	"rtl_us": 699.99,
	"rtl_mexico": 7400.00,
	"rtl_cad": 699.99,
	"rtl_uk": 399.99,
	"rtl_eur": 559.99,
	"rtl_norway": 3899,
	"rtl_sweden": 5299,
	"rtl_denmark": 3999,
	"rtl_switzerland": 779.00,
	"rtl_australia": 799.99,
	"rtl_newZealand": 849.99,
	"rtl_japan": 80000,
	"whsl_us": 490.00,
	"whsl_cad": 490.00,
	"whsl_uk": 243.47,
	"whsl_eurZone": 340.86,
	"whsl_ausNewZealand": 509.08,
	"whsl_japan": 56000
},
{
	"tier": 83,
	"rtl_us": 799.99,
	"rtl_mexico": 8500.00,
	"rtl_cad": 799.99,
	"rtl_uk": 449.99,
	"rtl_eur": 639.99,
	"rtl_norway": 4399,
	"rtl_sweden": 5999,
	"rtl_denmark": 4799,
	"rtl_switzerland": 899.00,
	"rtl_australia": 899.99,
	"rtl_newZealand": 949.99,
	"rtl_japan": 90000,
	"whsl_us": 560.00,
	"whsl_cad": 560.00,
	"whsl_uk": 273.91,
	"whsl_eurZone": 389.56,
	"whsl_ausNewZealand": 572.72,
	"whsl_japan": 63000
},
{
	"tier": 84,
	"rtl_us": 899.99,
	"rtl_mexico": 9500.00,
	"rtl_cad": 899.99,
	"rtl_uk": 499.99,
	"rtl_eur": 719.99,
	"rtl_norway": 4999,
	"rtl_sweden": 6799,
	"rtl_denmark": 5499,
	"rtl_switzerland": 999.00,
	"rtl_australia": 999.99,
	"rtl_newZealand": 1049.99,
	"rtl_japan": 100000,
	"whsl_us": 630.00,
	"whsl_cad": 630.00,
	"whsl_uk": 304.34,
	"whsl_eurZone": 438.25,
	"whsl_ausNewZealand": 636.36,
	"whsl_japan": 70000
},
{
	"tier": 85,
	"rtl_us": 999.99,
	"rtl_mexico": 10500.00,
	"rtl_cad": 999.99,
	"rtl_uk": 599.99,
	"rtl_eur": 799.99,
	"rtl_norway": 5499,
	"rtl_sweden": 7499,
	"rtl_denmark": 5999,
	"rtl_switzerland": 1099.00,
	"rtl_australia": 1199.99,
	"rtl_newZealand": 1249.99,
	"rtl_japan": 115000,
	"whsl_us": 700.00,
	"whsl_cad": 700.00,
	"whsl_uk": 365.21,
	"whsl_eurZone": 486.95,
	"whsl_ausNewZealand": 763.63,
	"whsl_japan": 80500
}];_Bhttps://itunesconnect.apple.com/javascript/labelconnect_pricing.js‘a<bcONbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ"()/012LMNOPQRSTUVWXYZ[\]^_`dU$null€ !V$classR$3R$8R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄÄÄÄ ”#$%&'WNS.base[NS.relativeÄÄ Ä_1https://itunesconnect.apple.com/images/spacer.gif“*+,-X$classesZ$classname¢-.UNSURLXNSObject#A∞∫j%d»”3456AWNS.keysZNS.objectsÄ™789:;<=>?@Ä	Ä
ÄÄÄÄÄÄÄÄ™BCDEFGHIJKÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-Control]Accept-RangesVPragmaVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:12 GMT_Eprivate, no-cache, no-store, must-revalidate, max-age=0, no-transformUbytesXno-cache_Apache/1.3.33 (Darwin)Yimage/gifR43_Wed, 15 Jul 2009 18:30:37 GMT_"1609983-2b-4a4cdeb4"Uclose“*+ab£bc._NSMutableDictionary\NSDictionary“*+ef£fg._NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d Ü å £ ™ ≠ ∞ ≥ ∂ π º ø ¬ ≈ »   Ã Œ – “ ‘ ÷ ÿ ⁄ ‹ „ Î ˜ ˘ ˚ ˝16?JMS\egipxÉÖêíîñòöúû†¢§Ø±≥µ∑πªΩø¡√—ﬂÌÙ˚!,Lîö£º∆…È&38<P             h              ^O+GIF89a  Ä        !˘    ,       D ;_1https://itunesconnect.apple.com/images/spacer.gif‘e<fgOcbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Lhttps://itunesconnect.apple.com/images/labelconnect/txt_title_itunesvips.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫iÎYG»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:20 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS764_Wed, 15 Jul 2009 18:30:36 GMT_"1159add-2fc-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary¸“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
]bkvyàëìö¢≠Ø∫ºæ¿¬ƒ∆» ÃŒŸ€›ﬂ·„ÂÁÈÎÌ˚	&3BGLWwÖ•´ƒŒ“Ú0=@EI]             l              kO¸GIF89aô  ≥  Ò·‚„glqIOU—”‘*28v{§ß™9@FÖäç≥∂∏¬ƒ∆ïòúX^c#*ˇˇˇ!˘     ,    ô   ˇê¬∫8/∫ˇ`(éd˘-LzfÎæp(8NJﬂ8Ωƒ|åBŒ°è%ÜÓ–h6hgÉÄ¨ñà[¥!dYø1Ö˜A{h∞::fÍz."ËLh˙‹ê◊˚GwL!}MÑL	ä 3@Mîú 4Ö&	M;ãèëìïéêíîlYo´Nõ4MJÜ5 á«J«7ã7nún7°«±" ò8°–“4‘Á9Í √€‡	C,C54…iÃŒÎ7,PoU eêÑ<
&Ô¿@~2hò	¡GóLûX Åˇ1¿ ü^Í9h‡Eh.¸ÎáLÕf˙<BÂ`·ìåt`6‚	2vﬁ|0*ÁÿŒè:=\xPŒÉ6 x∫≥$h¶MàCoŒ<÷ÌI! 4äx®˙ Ç]EséPiFA≤KWz,´˜AΩ ~‚t–ÌDWπ_óâïÎïa°É¯Ï–FLÛ•Y™±YèÅ˚≈WË3†√õ”;±cHƒ§8ë$6ﬂHM÷Ÿµiœ¢Â…nÚ»¥àÉ´? Íè±oΩ<’öpZ
âä›íÚﬁ;ıÎ| èò!Ù¥d–ä¡∂u æ√nÙà˙fŸZ¬xhÙ1´ò¸y˜–• —©ﬁdÿyÉÌBEi †“f‹…¬Ã»±Ä˘u¿5d√O.SJÇy˝W¢Y`’cÄË≈.<•Q∂„úw∆UT@Y¨2JHÂb€‹p|Óıaî±◊D_D h˘x∑úÅd`2Äq≤dπÅÄ*WêÀòô˝ÄK–ñÄm¿hÑ£í˛}‡`<+ÅD<¿—	&¸!(	\Pÿ†~D  ;_Lhttps://itunesconnect.apple.com/images/labelconnect/txt_title_itunesvips.gif‘i<jkO[bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Dhttps://itunesconnect.apple.com/images/labelconnect/wrapper_topl.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫p<O»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS424_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfcf-1a8-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary®“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
UZcnqwÄâãíö•ß≤¥∂∏∫ºæ¿¬ƒ∆—”’◊Ÿ€›ﬂ·„ÂÛ	+:?DOo}ù£º∆ Í	(58=AU             l              cO®GIF89a 3 ’  ˛˛˛øøø………ˇˇˇÀÀÀÊÊÊ———€€€œœœÕÕÕ’’’◊◊◊ﬂﬂﬂ‰‰‰···ÁÁÁÂÂÂ–––‹‹‹›››   ‡‡‡ŒŒŒÃÃÃ‚‚‚‘‘‘ÿÿÿ“““„„„ŸŸŸ”””⁄⁄⁄ﬁﬁﬁÓÓÓ÷÷÷ÙÙÙÈÈÈËËË≈≈≈ÏÏÏÌÌÌÒÒÒ˚˚˚ƒƒƒÍÍÍ¡¡¡                                                      !˘     ,     3  ≈¿Åp8 C" J®íD °ëprHùH•+Çzx‰Îò
Ë4†ıH£˜; ©€·çºØœ√9ÄÅpÑÖpàâáâàpèêpìîíîìp öõpûüp¢£p¶ß•ß¶p≠Æp±≤pµ∂pπ∫∏∫πp
¿¡ø¡¿p«»pÀÃpœ–p”‘“‘”p⁄€pﬁﬂ›ﬂﬁpÂÊp	ÈÍËÍÈpÒpÙıÛıÙ˜¯p˝˛p
(0 ¡Ç ;_Dhttps://itunesconnect.apple.com/images/labelconnect/wrapper_topl.gif‘m<noOZbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Chttps://itunesconnect.apple.com/images/labelconnect/wrapper_top.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫pË¥»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS859_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfcd-35b-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary[“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
TYbmpvàäëô§¶±≥µ∑πªΩø¡√≈–“‘÷ÿ⁄‹ﬁ‡‚‰Ú *9>CNn|ú¢ª≈…È'47<@T             l              bO[GIF89ae 3 ’  ………ÊÊÊÀÀÀ···€€€◊◊◊œœœ‰‰‰ÁÁÁ’’’ﬂﬂﬂÕÕÕ———ÂÂÂ   ƒƒƒŒŒŒ˛˛˛‚‚‚“““⁄⁄⁄‘‘‘ÿÿÿËËË”””„„„ÙÙÙŸŸŸﬁﬁﬁ–––ÃÃÃ›››‡‡‡‹‹‹                                                                                          !˘     ,    e 3  ˇ¿àpH,è»§r…l*–®tJ≠ZØÿ¨vã’xø‡∞xL.õœË¥˘¬nªﬂ∏|NØ€ÔtÑ~œÔ˚ˇÄÅÇÉÑÖÜáàâäãÑéèêëíìîïñóòôöõúùûü†°¢£§èß®©™´¨≠ÆØ∞±≤Øµ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆ø… ÀÃÕŒœ–—“”‘—◊ÿŸ⁄€‹›ﬁﬂ‡·‚ﬂÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆÔ ˘˙˚¸˝˛ˇ 
H0†ÇÉ*\»∞°√á#JúH±¢≈ã#rÿ»±£«è CäI≤§…ëR™\…≤•Àó0c úI3fàõ8sÍ‹…≥ßœˇü@É
˝I†®—£Hì*] ¥©”ßP£JùJµ™’ß≤j› µ´◊Ø`√äK6ÏÜ≥h”™]À∂≠€∑p„ }k°Æ›ªxÛÍ›À∑ØﬂøÄ˚L∏∞·√à+^Ã∏±„«ê#KûLπqÇÀò3kﬁÃπ≥Áœ†CãM∫¥È”®CWXÕ∫µÎ◊∞cÀûMª∂ÌŸrÎﬁÕª∑Ôﬂ¿ÉN<¯Ñ„»ì+_ŒºπÛÁ–£KŒ†∫ıÎÿ≥kﬂŒΩª˜Ô‡√ãOæº˘Ô“´_œæΩ˚˜„ÀüO?æÅ˚¯ÛÎﬂœøøˇˇ (‡Äh‡Å¡Ç6Ë‡ÉF(·ÑVh·Ñd®·ÜvËx·á Ü(‚à$ñh‚â(¶®‚à¥Ë‚ã0∆(„å4÷h„ç8÷(¿é<ˆË„è@)‰êDi‰ëH&©‰íL6È‰ìPF…£TViÂïXf©Âñ\vÈÂó\ ÊòdñiÊôh¶©Êöl∂ÈÊõp∆)Áút÷iÁùxÊ©Áûz ;_Chttps://itunesconnect.apple.com/images/labelconnect/wrapper_top.gif‘q<rsO[bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Dhttps://itunesconnect.apple.com/images/labelconnect/wrapper_topr.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫oõ©Ù»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS424_Wed, 15 Jul 2009 18:30:42 GMT_"1d72836-1a8-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary®“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
UZcnqwÄâãíö•ß≤¥∂∏∫ºæ¿¬ƒ∆—”’◊Ÿ€›ﬂ·„ÂÛ	+:?DOo}ù£º∆ Í	(58=AU             l              cO®GIF89a 3 ’  ˛˛˛øøø………ˇˇˇÊÊÊÀÀÀ€€€ÕÕÕ···’’’ﬂﬂﬂ◊◊◊———‰‰‰œœœÁÁÁ‹‹‹“““›››ÂÂÂ   –––ŒŒŒ‘‘‘”””ﬁﬁﬁÿÿÿ‡‡‡„„„ÃÃÃ‚‚‚⁄⁄⁄ŸŸŸÓÓÓÍÍÍÒÒÒÈÈÈƒƒƒ÷÷÷ËËËÙÙÙÌÌÌ≈≈≈¡¡¡ÏÏÏ˚˚˚                                                      !˘     ,     3  ≈@¿`Hî(¶PöT ≠·âƒ$√áˆë≤à[-!2 òœ™ÚôX÷Ê `BØÀ¯¸=èós˛ÄrÉÑráàÜàáréèr
íìëìírôörùûr°¢r•¶§¶•r¨≠r ∞±r¥µr∏π∑π∏r	ø¿æ¿ør∆«r ÀrŒœr“”—”“rŸ⁄r›ﬁ‹ﬁ›r‰ÂrËÈÁÈËrÔrÛÙÚÙÛˆ˜r¸˝r ˛p AÉ ;_Dhttps://itunesconnect.apple.com/images/labelconnect/wrapper_topr.gif‘u<vwOUbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_10.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫oœ)o»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifR87_Wed, 15 Jul 2009 18:30:42 GMT_"567b62-57-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryW“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ«Á˛	#027;O             l              ]OWGIF89a ( ë  ………˛˛˛øøø   !˘     ,     (  (åÄi©«∞^d≥=Ëh∂r£˙yÿé)ñj ¢Ó	kØsÙmÁ·¨õL ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_10.gif‘y<z{OWbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_17.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫oó<Ê»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS119_Wed, 15 Jul 2009 18:30:42 GMT_"11fcfbd-77-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryw“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ»Ë %249=Q             l              _OwGIF89a QÄ  ˇˇˇ¿¿¿!˘     ,     Q NnxêºüT‘’xß›òÎ~bFzexéÊä≤jørJªu|œˆéÛz¸	sD_1xóH¶≤	}JìTg5zùZ∑XÆ∂˛ä≥do9|V  ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_17.gif‘}<~OVbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_11.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫oc˝r»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS223_Wed, 15 Jul 2009 18:30:42 GMT_"567b64-df-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryﬂ“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ»Ëˇ
$138<P             l              ^OﬂGIF89a ( ƒ  ¿¿¿ÌÌÌ˛˛˛ÎÎÎ˝˝˝ııı¯¯¯ÙÙÙÚÚÚ˜˜˜ÔÔÔ˙˙˙¸¸¸˚˚˚˘˘˘ÏÏÏÓÓÓÛÛÛˆˆˆÒÒÒ………«««¡¡¡···ƒƒƒ‡‡‡               !˘     ,     (  \`Uaì•IP√± ; P¯ù„˝ Ö08l∆Ä¬ ûN®d
8X´◊Ç†- &`@b,&ŒÄ≥h≥›ã8 æ 8Óv<cÿ3 ÅÄÇÖ ÖáÖ! ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_11.gif‘Å<ÇÉOXbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_12.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫pB˚+»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS545_Wed, 15 Jul 2009 18:30:43 GMT_"567b66-221-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary!“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ»Ë %25:>R             l              `O!GIF89ae ( ƒ  ÎÎÎ˛˛˛¸¸¸ÌÌÌÔÔÔÙÙÙ˜˜˜˘˘˘˚˚˚˙˙˙˝˝˝ÚÚÚ¯¯¯ıııÓÓÓÍÍÍÏÏÏˆˆˆÛÛÛÒÒÒ                                 !˘     ,    e (  ˇ† édiûh™Æl´Bp,œtmﬂxÆÔ8‡ˇ¿†pH,è»§r…l:ü–®tJ˝EÆÿ¨vÀÌzø‡∞¯;(õœË¥zÕnªﬂ∏|NØ€Ô¯º~o~¯ˇÄÅÇÉÑÖÜáàâÜåçéèêëíìîïñóòôöõúùñ†°¢£§•¶ß®©™´¨≠ÆØ∞±™¥µ∂∑∏π∫ªºΩæøº¬√ƒ≈∆«»… ÀÃÕŒœ–—“”Ã÷◊ÿŸ⁄€‹›ﬁﬂ‡·ﬁ‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıÓ¯˘˙˚¸˝˛ˇ 
H∞†¡É
î¿∞°√á#JúH±¢≈ãh‹»±£«è CäI≤§…ì(Sû™\I≤ÅÀó0c úI≥¶Õõ8sÍ‹…≥ßœü8J¥®—£Hì*] ¥©”ßP£Jù TÅ’´X≥j› µ´◊Ø`√äK∂¨Ÿ≥`®]À∂≠€∑p„ ùK∑Æ›ªxÛÍ›K◊ÖﬂøÄL∏∞a¿+^Ã∏±„«ê#KûLπ≤ÂÀò3kû†≥Áœ†CãM∫¥È”®S´^Õ∫µÎ◊∞cÀûÌ9 ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_12.gif‘Ö<ÜáOWbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_19.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫pH§+»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS119_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfbf-77-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryw“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ»Ë %249=Q             l              _OwGIF89a QÄ  ˇˇˇ¿¿¿!˘     ,     Q NÑcÄó´ô|”ŸHÛ≠xÎr‚7zfH¶gâÆj≥Ú;ªvLÁwçÔz‰	Cü1HLã»•≤	eJüSß5JÕ^´ÿ≠∂ÊäøcØ9L÷  ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_19.gif‘â<äãOVbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_14.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫o÷±’»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS222_Wed, 15 Jul 2009 18:30:42 GMT_"567b68-de-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryﬁ“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ»Ëˇ
$138<P             l              ^OﬁGIF89a ( ƒ  ¿¿¿ÌÌÌ˛˛˛ÎÎÎ˝˝˝ııı¯¯¯ÙÙÙÚÚÚ˜˜˜ÔÔÔ˙˙˙¸¸¸˚˚˚˘˘˘ÏÏÏÓÓÓÛÛÛˆˆˆÒÒÒ………«««¡¡¡···ƒƒƒ‡‡‡               !˘     ,     (  [‡ÑU$i÷0Dô
]Í @4‹6~@‰ä Pÿ(ä e	@8õOâp®R≠Ö, [ LæÄÑ8<6òf‡¡^∑p |pÿÎwÜ†g ÄÅÑ ÑÜÖ! ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_14.gif‘ç<éèOVbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_22.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫py »”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifR97_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfc1-61-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionarya“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ«Áˇ
$138<P             l              ^OaGIF89a  ≥  ˇˇˇ¡¡¡«««⁄⁄⁄ƒƒƒ………±±±¬¬¬¯¯¯∫∫∫˜˜˜∏∏∏¿¿¿         !˘     ,       ê! ¬†$%Œ2Ö@ ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_22.gif‘ë<íìOVbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_23.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫p ß»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifR83_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfc3-53-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryS“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ«Áˇ
$138<P             l              ^OSGIF89ae  ë  ˇˇˇ¿¿¿ÆÆÆ   !˘     ,    e   $Ñè©ÀÌ£ú¥⁄ã≥ﬁ¸àÜ‚HñÊâ¶Í¥Ó«ÚL◊ˆç◊ ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_23.gif‘ï<ñóOVbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_25.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫pÇ9.»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifR97_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfc5-61-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionarya“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ«Áˇ
$138<P             l              ^OaGIF89a  ≥  ˇˇˇ¡¡¡«««ƒƒƒ¯¯¯∏∏∏………±±±⁄⁄⁄∫∫∫˜˜˜¬¬¬¿¿¿€€€      !˘     ,        ¬d
•q ¡  ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_25.gif‘ô<öõOVbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_15.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫pØU&»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifR87_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfbb-57-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionaryW“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ«Áˇ
$138<P             l              ^OWGIF89a ( ë  ………˛˛˛øøø   !˘     ,     (  (Ñ/q®È^[–U:Yº⁄f√Åü¥ç!Èïj b´€v,◊‚k£ÙÛX ;_Bhttps://itunesconnect.apple.com/images/labelconnect/wrapper_15.gif‘ù<ûüO\bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ghttps://itunesconnect.apple.com/images/labelconnect/wrapper_bottoml.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫oúÍÚ»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS212_Wed, 15 Jul 2009 18:30:42 GMT_"11fcfc9-d4-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary‘“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
X]fqtzÉåéïù®™µ∑πªΩø¡√≈«…‘÷ÿ⁄‹ﬁ‡‚‰ÊËˆ!.=BGRrÄ†¶ø…ÕÌ*79>BV             l              dO‘GIF89a ) ƒ  ………˛˛˛øøøˇˇˇ˚˚˚¬¬¬˘˘˘˝˝˝»»»∞∞∞ÌÌÌˆˆˆ∑∑∑‰‰‰ΩΩΩºººµµµÒÒÒÎÎÎÛÛÛ€€€ÃÃÃ«««ÀÀÀ∆∆∆–––               !˘     ,     )  Q`  d)ñÊàÁ⁄¢o∫≤*\ÀÓM∆ªNœº_ËãH¢r»¥-ùM5( VKÎÄ\KÇÊA=H0ç¬0S*ÖH¢ 0ãIª} ! ;_Ghttps://itunesconnect.apple.com/images/labelconnect/wrapper_bottoml.gif‘°<¢£O[bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Fhttps://itunesconnect.apple.com/images/labelconnect/wrapper_bottom.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫p?ó»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:27 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS125_Wed, 15 Jul 2009 18:30:43 GMT_"11fcfc7-7d-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary}“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
W\epsyÇãçîúß©¥∂∏∫ºæ¿¬ƒ∆»”’◊Ÿ€›ﬂ·„ÂÁı -<AFQqü•æ»ÃÏ
)68=AU             l              cO}GIF89a< ) ë  ………¯¯¯ÎÎÎ∞∞∞!˘     ,    < )  NÑè©ÀÌ£ú¥⁄ã≥ﬁº˚Ü‚HñÊâ¶Í ∂Ó«ÚL◊ˆçÁ˙Œ˜˛
áƒ¢Òh(óÃ¶Û	çJõÇ™ıäÕj∑‹.6 ã«‰≤˘å  ;_Fhttps://itunesconnect.apple.com/images/labelconnect/wrapper_bottom.gif‘•+¶ßOYbplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Bhttps://itunesconnect.apple.com/images/labelconnect/btn-goback.png“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫o”£á»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZCneonction_Thu, 02 Jul 2009 16:22:01 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/pngT2776_Wed, 15 Jul 2009 18:30:42 GMT_"b05f6f-ad8-4a4cdea9"Uclose“./de£ef2_NSMutableDictionary\NSDictionary
ÿ“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
SXalou~áâêò£•∞≤¥∂∏∫ºæ¿¬ƒœ—”’◊Ÿ€›ﬂ·„Òˇ)8=BMm{õ°∫ƒ…È&36;?S             l              aO
ÿâPNG

   IHDR   b      L‘â¢   tEXtSoftware Adobe ImageReadyq…e<  
zIDATx⁄ÏZ{p«ˇt:IñeÀí,Y∂d^¡`cÃ£<
	∆Jí∫ÖIÄÑíR'qÍ °Ì§3Õ¿$mÜÃ§Ì4ôéqõP¶%m¡RB3êICÄpÃ”<†`ÉX<∆ñ_`Kñ-K∂§ÓÆÓƒqæΩ;óÊ?V≥£ª}Ô˜¯}ﬂ~{öX,j“÷mï…á™™K˚C°r≠V´◊hòDC£—$ûáìp?©>¬r~l•πÑÂ¬>¬æ‚∂RcäÎƒÌiu¥∂ÒÚN›®Æ1çeYˆ_€+∑ûEQ“G%·ÿµ?{≠Lg0n∞g83M¶jCÒ§%.óbä∞çëƒ}‰Bö@“}ƒÛ—ò+è÷&ç@d0˝¡æüØ;–„˜◊Íu⁄ﬂn˙cE5ÆV√∂l’´´LÊ¥ıÓ£F">Ä¡`PΩÄM4‚´ëXqΩê∏¬}K≠øG£Q’˚í”B~>Ãåp(==~hokçvﬂÌ¨b4ˆ˚Â'XÖÒµØ¨^˚≤ﬁhz√·Ã ∂Zm¿0*JùÅîà&;rs©Öã·W≠6–¥é/√åeu:0ßY ¡;¬ˆXa¿Ô[â™jiå–¸‚ıu©Åæ‡RÜ’˝⁄ôïÂ∞•ßÉñe	hõîZ∞B®ëÍ·¿ÇúIŸòaí‘84ª'ÏìdLÜt{Ü6‹*BØ)Rå–¸Ú≠Ê@0∏,ÉçÓÏÊÙt∞¨é0AÕ‚Öîkœ/ò&Â4{@ÉÒ<¬Ò•Ïì˛ÀAôZ–êó!Ì`ñã^MRå–vvﬁY6çm1rîŸfKF´ÖH$B5ír^åx√wÔtBg{;Ñ√!@$ã≈ˆå0"	QÇ!Òº¡`¥yΩÒ∂Ëá¨ y6•§Ä33ks§∆£9≠ﬁdXÉ0fl’Î¢!Ä‘æ•çAÃ`1bFh_,-˚1√ÍﬂŒtªÕ©iV‹%ü¶é¬Ewv¥CÓÿ—∞ÊÂ∞ß€H]Ìπ∞ˇ‡a≤(Ñõ™a€*kZ|o·<2>~'uà¯uó‡¸≈z∞Ÿ˜i±ñìÏyÖ≥¡Ât¬Å#'ÌhÌÂlïT·≠`∫¡>_Ú‚*Ω¡∏m 3’l!1ƒP√oNNıƒiç3eb.<ª‰i˘{‡»â”`I3C˛Ñ\òê7˛ßAgH"m√°¯˝>Ú¨◊ÎâqKŒ:]
L»wª∫°'–KÍ”Ã©ê;~ÇR=∑IY®øÅ“75’Ü§§Å\»ù$Ô∆‰dHII%Ì≤]Yê;.ˆ¨&h–Ö4YèºE·ZîŒFº¿––D$2à	©!å¯}yÖÒ‹πÛ%åV˜Fö5=;I!Á©9¨)TAfBsã*?ﬁù(ü0>¶N á<ƒå+ç◊°ø?AD¥”¶ê˙ééNhº~2]Ó!*?8_ﬂÒìß‡TÌn≠1xÁWÎ!/w‘56ÜÍ-æ5i©Ø´ø]]wë°t@(‘}»ï‰Á∫qÛx[öIøW,àmﬁfò3˚€†Ar{µÈÊπ≥b-
á„hÉ°;s∂vML£}”·H∑cé3åvîÏÊ.Ê>Õ0ÊÂå&eßjœ%¥ÏˆMxöÆ¡˚ˆIM≥XAØ’¿∫7◊Å…tœf˛ÍÏØ:
¯ )ú;¬Ÿ S≤Rít‰yÃËQ‰øµΩÉÃÛ»»lx•¥‰ﬁñÏ˙Ïs®khb–—\;?ŸWön%Êhæ}^m-8ùaÂéƒ⁄Â\m9∏”ì&Ãsx0ÚªLWñû¯∑‹9A≠1ñc¶®$v::Óêv∏˛Á?]ìËWwπÍëF,y∫òÊœﬂ-≠m∞tÒwa¡¸"®o∏Ìw∫Óg',∏g>ıˆˆ¡¡CUHﬂ(ídú~Û^9¥¥¥¬¶ä˜ A◊˘K7◊_∂~D‡muÈJXº®.ïoJÃ±dq18Ïv¯€?v@GÁE‹ßπ±4fÒ¬ÑaAße≤…dGËaƒq•	‰òB3jgà==H√§ç^o ƒÃœÀÖkM7à¥MöòóÍ/É¡ÓÙxL)»∑+ö[€Ôá¶HúGO‘@√5yN∑Y·…Eì’eP±˘Ø∞iÛ(ú3äü\á=±>~.Ux.úﬁyw#
l+b—¯æÛ¯<Ú˚j£’)“b8Ò.˙‚–çÎôE≈ïvõ≠=ãTòïlÑ\ôÁV‹pNAˆ†Ω’}}ΩP˛˛f¯bˇÅ!mìçFËF8ﬁ€ÄhdÄ3⁄ë∑qœ]ız[¡+…üÔŸ◊õ<‡Ãà„¸´´J·ôEﬂGv∆€∂Ô‡∏∑∆H4ændÏë-1 ¨ tÿ‚‰hXç!Œê"bSƒk†Ö[òÖÙÓkDWÒSOÏBR†Ø9snióœÁ¬6B<âí˚*ˆhƒ∫o\EƒX∏`>°CMÕi»@ƒ*˘·ÓÎ‘ŸØa÷åiP8{&x<7`QÒSq#{•qh@ê£(6ÃXÀÀ'L$s·1Òs≤W`Í‘∏QÊÓ¸≈:‰(L$ﬁ\ ¡Ÿö≤ó†´€lŸñ`÷ﬁUƒª{≠kg8£Fâiˆ@	‚yFPæ<Óúh3öØ/‘-Ìˆ˘≥‡‚}Ù…ß∞Úπ%dS8â;VC`á?–Ì;TŸn¸Ë˘Ââ~ª˛Ωó`∏88ªÉâç3ü."∏¡}¯ÒÒô‡-dîõëÊ‡Ïvπ‚êvÚ4åÃv√Í≤RÓÄÿüÓ˘2>6Á‚‚¥≠	√„+W É˝œo$∏…G_1Äcü5Ø˙ËÒÂ«Où]Å¸r'h≈ª•ì™îÑX-i`≥Zq±JyeÆ,'10·0ÅÜΩ1¡z£—XÿI≠/Áë—§kë‹ûîBÎj‚]‚r|»›ÚAy†√ÒLë+ÛÊŒŸôîî4Ä§†¥?∂∆‚vDUêN;øÛˇòB	órw1î…]‰–Ó§b\Õ»[í[ˇuœMYG;)+Aè$	«û¨yf\ûTêOàˇÂ·#/˙˙Ï¬€8©Ai!9œJj¡RˆF|¢ßïBÊRU{õHª°=À	≈kéq/‚XaÚZÍfLõJ¸ÍX	Ü)√!úRR.Eãv™ëH%˜ZÈ
UÕ]áö≥¬pÊ{T‹Ω Ù¡¬ïäæ‚ÜO´’÷œö9=÷ÍO◊û∂´€ÔJXx8~≥T$U›ùØºÀ÷Ü3ÔpÔª’‹âà]WÓõæ;”˘|ú`(˚äÚ6„Ò¢¬èßM.ÿmµòΩ±X¶ˇﬂ%∞√fıÃú>ı3Ïπ*›Yº©Àè’úY·ú¸9Cçd*}•Òø¿ÇZ	W_MWs¨¥_°0—ÈtÊSÀÙ);Á‚Sf£“ùµ¿õzl':˛≥U«NæÄ˛Sƒ˙©§“r8Øˆ‡Hk/û[ÓÀé·|Ó#fêÙ—ˆ#:V2ôL]õ≈3.gÃ¡πè=äµásCj?ß·5«í'£ú¡ï=LÍ∆ı ÿooAπ	á∞PˆÉ œiÑÃ0°åØ÷å qæxò‰çá0òΩ\D#ƒ1˛+¿ éEx“ÒØ“    IENDÆB`Ç_Bhttps://itunesconnect.apple.com/images/labelconnect/btn-goback.png‘©<™´O\bplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiverØ &,-3%45OPQRSTUVWXYZ[\]^_`abcghU$null› !"#$%V$classR$3R$8S$10S$11R$5R$6R$4R$7R$2R$9R$0R$1ÄÄÄ ÄÄÄÄÄ ”'()$+WNS.base[NS.relativeÄÄ Ä_Ghttps://itunesconnect.apple.com/images/labelconnect/wrapper_bottomr.gif“./01X$classesZ$classname¢12UNSURLXNSObject#A∞∫oc≈»”6789DWNS.keysZNS.objectsÄ™:;<=>?@ABCÄ	Ä
ÄÄÄÄÄÄÄÄ™EFGHIJKLMNÄÄÄÄÄÄÄÄÄÄ]Last-Modified]Cache-ControlWExpires]Accept-RangesVServer\Content-Type^Content-LengthTDateTEtagZNncoection_Thu, 02 Jul 2009 16:22:02 GMT]max-age=86400_Fri, 17 Jul 2009 01:31:26 GMTUbytes_Apache/1.3.33 (Darwin)Yimage/gifS213_Wed, 15 Jul 2009 18:30:42 GMT_"11fcfcb-d5-4a4cdeaa"Uclose“./de£ef2_NSMutableDictionary\NSDictionary’“./ij£jk2_NSHTTPURLResponse]NSURLResponse     ) 2 7 : P R d á ç ® Ø ≤ µ π Ω ¿ √ ∆ … Ã œ “ ’ ◊ Ÿ € › ﬂ · „ Â Á È Î Ì Ù ¸
X]fqtzÉåéïù®™µ∑πªΩø¡√≈«…‘÷ÿ⁄‹ﬁ‡‚‰ÊËˆ!.=BGRrÄ†¶ø…ÕÌ*79>BV             l              dO’GIF89a ) ƒ  ………˛˛˛øøøˇˇˇ˚˚˚˝˝˝˘˘˘¬¬¬∑∑∑¡¡¡ÀÀÀÌÌÌ∞∞∞ÎÎÎΩΩΩ»»»ºººÕÕÕÒÒÒ«««–––‰‰‰€€€ˆˆˆÛÛÛ≈≈≈µµµ            !˘     ,     )  R  éB0íÊ	îÍöû¨√/⁄Œ∂\ã8øª∑_®ãH⁄QôÃ1üŒ®o9JT…uâX∂¢GÖp•äIa–ÿ.Ú¿¡X`Å¡¿` ¨ı! ;_Ghttps://itunesconnect.apple.com/images/labelconnect/wrapper_bottomr.gif‘≠ÆØ∞Obplist00‘	
X$versionT$topY$archiverX$objects Ü†—_WebResourceResponseÄ_NSKeyedArchiver´#)*0"1234U$null€ !"V$classR$3R$8R$5R$6R$4R$7R$2R$9R$0R$1Ä
ÄÄÄÄÄÄÄ	 ”$%&'(WNS.base[NS.relativeÄÄ Ä_+https://itunesconnect.apple.com/favicon.ico“+,-.X$classesZ$classname¢./UNSURLXNSObject#A∞ƒBÌ˙ \image/x-iconP#Ôˇˇˇˇˇˇ“+,56¢6/]NSURLResponse     ) 2 7 : P R d p v ç î ó ö ù † £ ¶ © ¨ Ø ≤ ¥ ∂ ∏ ∫ º æ ¿ ¬ ƒ ∆ » œ ◊ „ Â Á È%039BKXYbgj             7              x\image/x-iconOf          h  F         h  Æ          ®  	          ®  æ  (                @                  ôôô îîî ïïï òòò óóó æææ µµµ ÀÀÀ ˇˇˇ ∆∆∆ ììì ñññ ííí èèè °°° ˝˝˝ ÂÂÂ ¶¶¶ »»» ∂∂∂ “““ ÕÕÕ     πππ ∞∞∞ ııı ˚˚˚ ……… ÁÁÁ ´´´ £££ ••• ≈≈≈ ëëë ¯¯¯ ÈÈÈ ööö ‚‚‚ ‡‡‡ ΩΩΩ ËËË ±±± ÍÍÍ ˘˘˘ ﬁﬁﬁ  õõõ üüü ùùù ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ                ./0/      *+,-+	      ˇˇˇˇˇˇ)    'ˇˇˇˇˇˇˇˇ(   %ˇˇˇˇˇˇˇˇ&$  "ˇˇˇˇˇˇˇ#$   ˇˇˇˇˇˇˇ !    ˇˇˇˇˇˇˇ     ˇˇˇˇˇˇˇ    ˇˇˇˇˇ            
          ˇ	
                               Óú    ≤        …               T–  ~  ˛        Ó     (                @                  ôôôôôôôôôôôôôôôòòòóóóòòòôôôòòòóóóôôôôôôôôôôôôôôôôôôôôôôôôôôôñññõõõüüüóóóîîîùùùüüüóóóòòòôôôôôôôôôôôôôôôôôôñññ¶¶¶ÍÍÍ˘˘˘ﬁﬁﬁ“““˘˘˘∆∆∆ïïïôôôôôôôôôôôôôôôòòòôôôÂÂÂˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ˝˝˝±±±ïïïôôôôôôôôôôôôîîîΩΩΩˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇËËËôôôòòòôôôôôôòòòòòò‚‚‚ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ‡‡‡öööòòòôôôôôôóóó°°°¯¯¯ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÈÈÈöööóóóôôôôôôôôôóóó•••˚˚˚ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ≈≈≈ëëëôôôôôôôôôôôôóóó£££˚˚˚ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÀÀÀíííôôôôôôôôôôôôòòòôôôÁÁÁˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇııı´´´óóóôôôôôôôôôôôôïïï∞∞∞ıııˇˇˇˇˇˇ˚˚˚ıııˇˇˇˇˇˇˇˇˇ………ïïïôôôôôôôôôôôôôôôïïï¶¶¶»»»»»»∂∂∂“““ÕÕÕ   πππôôôòòòôôôôôôôôôôôôôôôôôôñññíííèèè°°°˝˝˝ÂÂÂóóóìììòòòôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôïïïÀÀÀˇˇˇ∆∆∆ìììôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôòòòóóóæææµµµïïïôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôîîîïïïôôôôôôôôôôôôôôô  Óú    ≤        …               T–  ~  ˛        Ó     (       @         Ä                  ôôô øøø ÚÚÚ ˇˇˇ ŸŸŸ ˘˘˘ ¶¶¶ ¨¨¨ ≥≥≥ ﬂﬂﬂ ÏÏÏ ∆∆∆ üüü ÂÂÂ £££ ¢¢¢ ùùù ÛÛÛ πππ ÃÃÃ “““ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ ˇˇˇ                                                                                                                                           ˇˇˇ                  ˇˇˇˇˇˇˇˇˇˇˇˇˇ                ˇˇˇˇˇˇˇˇˇˇˇˇˇˇ               ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ              ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ             ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ            ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ            ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ
           ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ            ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ             ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ              ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ              ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ              ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ              ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ	              ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ              ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ             
ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ                
ˇˇ	ˇˇˇ
                       	                            ˇˇˇ                            ˇˇˇ                           ˇˇˇ                            ˇˇ                             ˇ                                                                                                                                                                                                                                           (       @         Ä                  ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô∆∆∆˘˘˘ˇˇˇ˘˘˘“““≥≥≥üüü≥≥≥ŸŸŸˇˇˇˇˇˇ˘˘˘øøøôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô∆∆∆ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇøøøôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô≥≥≥ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ˘˘˘¶¶¶ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôÚÚÚˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÂÂÂôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôÃÃÃˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ≥≥≥ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôÚÚÚˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÂÂÂôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôπππˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôŸŸŸˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÏÏÏ¶¶¶ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôùùùÛÛÛˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÚÚÚüüüôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô¢¢¢ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇøøøôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô£££ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô£££ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÂÂÂôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô£££ˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇÚÚÚôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôüüüˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇ¶¶¶ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôÂÂÂˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇﬂﬂﬂôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôøøøˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇøøøôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôÂÂÂˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇøøøôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôüüüÏÏÏˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇˇŸŸŸôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôøøøÏÏÏˇˇˇˇˇˇÚÚÚ∆∆∆¶¶¶üüüøøøﬂﬂﬂˇˇˇˇˇˇˇˇˇÏÏÏøøøôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô≥≥≥˘˘˘ﬂﬂﬂ¨¨¨ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô¨¨¨ˇˇˇˇˇˇˇˇˇøøøôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôÚÚÚˇˇˇˇˇˇˇˇˇ¶¶¶ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôøøøˇˇˇˇˇˇˇˇˇŸŸŸôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôŸŸŸˇˇˇˇˇˇ˘˘˘ôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôøøøÚÚÚˇˇˇôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôôô                                                                                                                                _+https://itunesconnect.apple.com/favicon.ico        1  <  K  a  s  ë  ® 	  !Ñ !ä !ã !µ !æ !‘ &Ç &ã @( @r @{ E& j© jÔ j¯ oú |÷ } }! Å» áS áó á† åI •ã •œ •ÿ ™åõõõ·õÍ†S†]Ñ”‹9” !y"3"w"Ä&‚/º004m4wVôVﬁVÁ[P[k4”559z—»“ “	÷nQÁR R)Véﬁ∆ﬁˇﬂ„lEàÎ	gÙ	h)	h2	lõ	Ô$	Ôa	Ôj	Û⁄
|ô
|ﬁ
|Á
Å9
Åg
Åõ
Å§
Ü
â
âZ
âc
ç¬
èn
èµ
èæ
î
ó{
ó¡
ó 
ú)
ù’
û
û%
¢~
¢ÿ
£
£&
ßÅ
ß˚
®@
®I
¨£
≠Ö
≠ 
≠”
≤/
¥T
¥ô
¥¢
∏˝
πw
πº
π≈
æ
ø 
øE
øN
√®
ƒ
ƒQ
ƒZ
»¥
…

…O
…X
Õ≤
Œ
Œ[
Œd
“æ
”
”]
”f
◊∆
ÿù
ÿÁ
ÿ
›O
›œ
ﬁ
ﬁ!
‚~
ÌZ
Ìü
Ì®
Ú
Ú‡
Û*
Û3
ı=
ıJ¥             ±             ‚